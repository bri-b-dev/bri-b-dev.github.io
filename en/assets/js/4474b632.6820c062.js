"use strict";(self.webpackChunkbri_b_dev_github_io=self.webpackChunkbri_b_dev_github_io||[]).push([[6461],{4311:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var s=r(9747),o=r(4848),i=r(8453),t=r(7293);const l={slug:"aks-node-selection",title:"AKS Node Selection: Physical Pools vs. Virtual Nodes",authors:"brigitte",tags:["kubernetes","aks","azure","nodepool","virtual-node","scheduling"],date:new Date("2025-01-27T00:00:00.000Z"),description:"Strategies for running workloads in AKS preferentially on physical user nodes \u2013 with automatic fallback to virtual nodes."},a=void 0,c={authorsImageUrls:[void 0]},d=[{value:"\u2699\ufe0f Basics: Node pools in AKS",id:"\ufe0f-basics-node-pools-in-aks",level:2},{value:"\ud83d\udea7 Challenge",id:"-challenge",level:2},{value:"\u2705 Strategies for Node Selection",id:"-strategies-for-node-selection",level:2},{value:"1. NodeSelector + Taints/Tolerations",id:"1-nodeselector--taintstolerations",level:3},{value:"3. Workload-specific control",id:"3-workload-specific-control",level:3},{value:"\ud83d\udcca Visualization: Scheduling Strategy",id:"-visualization-scheduling-strategy",level:2},{value:"\ud83d\udccc Best Practices",id:"-best-practices",level:2},{value:"\ud83d\udccc Conclusion",id:"-conclusion",level:2},{value:"\ud83d\udce6 Example manifests (deployment &amp; batch job)",id:"-example-manifests-deployment--batch-job",level:2},{value:"1) Deployment: prefers user nodes, fallback to virtual node",id:"1-deployment-prefers-user-nodes-fallback-to-virtual-node",level:3},{value:"2) BatchJob: prefers virtual nodes to conserve user pool",id:"2-batchjob-prefers-virtual-nodes-to-conserve-user-pool",level:3},{value:"3) Variant: Strict separation via NodeSelector",id:"3-variant-strict-separation-via-nodeselector",level:3},{value:"4) Horizontal Pod Autoscaler (HPA) as a burst trigger",id:"4-horizontal-pod-autoscaler-hpa-as-a-burst-trigger",level:3}];function u(e){const n={blockquote:"blockquote",br:"br",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["In many projects, the ",(0,o.jsx)(n.strong,{children:"cost and resource model"})," is crucial:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Physical AKS node pools (",(0,o.jsx)(n.code,{children:"user nodes"}),") are cheaper and optimized for continuous workloads."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Virtual nodes"})," (based on Azure Container Instances) are ideal for ",(0,o.jsx)(n.strong,{children:"burst scenarios"}),"\u2014when more capacity is needed at short notice."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["\ud83d\udc49 Goal: Workloads should ",(0,o.jsx)(n.strong,{children:"always use the physical nodes first"}),", but automatically switch to virtual nodes when there are no more resources available there."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-basics-node-pools-in-aks",children:"\u2699\ufe0f Basics: Node pools in AKS"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"System Pool"}),": internal AKS services"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"User Pool"}),": physical VM-based nodes (e.g., VMSS with Standard_D4s_v5)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Virtual Node Pool"}),": based on ACI, highly scalable, pay-per-use, no VM instance costs"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-challenge",children:"\ud83d\udea7 Challenge"}),"\n",(0,o.jsxs)(n.p,{children:['By default, Kubernetes distributes pods evenly \u2013 without \u201cpreference."',(0,o.jsx)(n.br,{}),"\n","If you want to use virtual nodes ",(0,o.jsx)(n.strong,{children:"only as a stopgap measure"}),", you need a clean scheduling strategy."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-strategies-for-node-selection",children:"\u2705 Strategies for Node Selection"}),"\n",(0,o.jsx)(n.h3,{id:"1-nodeselector--taintstolerations",children:"1. NodeSelector + Taints/Tolerations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"User nodes: no special taints \u2192 pods run here by default."}),"\n",(0,o.jsxs)(n.li,{children:["Virtual nodes: tainted (",(0,o.jsx)(n.code,{children:"virtual-kubelet.io/provider=azure:NoSchedule"}),")."]}),"\n",(0,o.jsxs)(n.li,{children:["Only pods that set ",(0,o.jsx)(n.strong,{children:"tolerations"})," are allowed to fall back to virtual nodes."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'tolerations:\n  - key: \u201cvirtual-kubelet.io/provider"\n    operator: \u201cEqual"\n    value: \u201cazure"\n    effect: \u201cNoSchedule"\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u27a1\ufe0f Advantage: full control, default = user nodes, virtual nodes = fallback."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:"Affinity & Preferred Scheduling"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"nodeAffinity"})," can be used to express a ",(0,o.jsx)(n.strong,{children:"preference"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:'\u201cPrefer user nodes" (preferred)'}),"\n",(0,o.jsx)(n.li,{children:'\u201cAllow virtual nodes" (soft)'}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"affinity:\n  nodeAffinity:\n    preferredDuringSchedulingIgnoredDuringExecution:\n      - weight: 100\n        preference:\n          matchExpressions:\n            - key: kubernetes.azure.com/mode\n              operator: In\n              values:\n                - user\n"})}),"\n",(0,o.jsx)(n.p,{children:"\ud83d\udc49 Only when there is no more space there will pods be distributed to other nodes (including virtual nodes)."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"3-workload-specific-control",children:"3. Workload-specific control"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Batch/burst jobs"}),": Set ",(0,o.jsx)(n.code,{children:"tolerations"})," so that they can use virtual nodes."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Persistent services"}),": No taint/toleration \u2192 remain strictly on physical nodes."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-visualization-scheduling-strategy",children:"\ud83d\udcca Visualization: Scheduling Strategy"}),"\n",(0,o.jsx)(n.mermaid,{value:'flowchart TD\n    subgraph AKS[\u201cAKS Cluster"]\n        subgraph UserPool[\u201cUser Node Pool (VMs)"]\n            U1[\u201cUser Node 1"]\n            U2[\u201cUser Node 2"]\n            U3[\u201cUser Node 3"]\n        end\n\n        subgraph VirtualPool[\u201cVirtual Node Pool (ACI)"]\n            V1[\u201cVirtual Node"]\n        end\n\n        P1[\u201cPod A (Deployment)"]\n        P2[\u201cPod B (Job)"]\n    end\n\n    P1 --\x3e|preferred| U1 & U2 & U3\n    P1 -.->|fallback| V1\n\n    P2 --\x3e|toleration| V1'}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Pod A (Deployment)"}),": prefers user nodes, but falls back to virtual nodes when resources are scarce."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Pod B (Job)"}),": has explicit tolerance \u2192 may run directly on virtual nodes."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-best-practices",children:"\ud83d\udccc Best Practices"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Monitoring"}),": Track exactly how many pods are running on virtual nodes (cost control)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"SLA"}),": Virtual nodes have different limits (no DaemonSet support, limited features)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Workload design"}),": Short jobs and burst-like loads \u2192 virtual nodes; critical systems \u2192 user nodes."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Cost model"}),": Physical pools for base load, Virtual Nodes only for peaks."]}),"\n"]}),"\n",(0,o.jsx)(t.A,{type:"tip",title:"Avoid cost traps",children:(0,o.jsx)(n.p,{children:"Set limits and autoscaling correctly, otherwise too many pods will end up permanently on expensive Virtual Nodes!"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-conclusion",children:"\ud83d\udccc Conclusion"}),"\n",(0,o.jsxs)(n.p,{children:["With ",(0,o.jsx)(n.strong,{children:"Affinity, Taints & Tolerations"}),", two-stage scheduling can be implemented:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Permanent workloads run reliably and cost-effectively on physical user nodes."}),"\n",(0,o.jsx)(n.li,{children:"Peak loads are automatically directed to virtual nodes \u2013 flexibly, scalably, and without overprovisioning."}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-example-manifests-deployment--batch-job",children:"\ud83d\udce6 Example manifests (deployment & batch job)"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Assumptions:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"User nodes"})," carry the label: ",(0,o.jsx)(n.code,{children:"kubernetes.azure.com/mode=user"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Virtual nodes"})," are tainted with ",(0,o.jsx)(n.code,{children:"virtual-kubelet.io/provider=azure:NoSchedule"})]}),"\n",(0,o.jsx)(n.li,{children:"Cluster has at least one Linux virtual node (ACI)"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"1-deployment-prefers-user-nodes-fallback-to-virtual-node",children:"1) Deployment: prefers user nodes, fallback to virtual node"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web-frontend\n  labels:\n    app: web-frontend\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: web-frontend\n  template:\n    metadata:\n      labels:\n        app: web-frontend\n    spec:\n      # \u2776 Prefer physical user nodes\n      affinity:\n        nodeAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 100\n              preference:\n                matchExpressions:\n                  - key: kubernetes.azure.com/mode\n                    operator: In\n                    values: ["user"]\n      # \u2777 Allow fallback to virtual nodes (tolerate taint)\n      tolerations:\n        - key: "virtual-kubelet.io/provider"\n          operator: "Equal"\n          value: "azure"\n          effect: "NoSchedule"\n      # \u2778 Optional: Distribute pods across user nodes (cost & resilience)\n      topologySpreadConstraints:\n        - maxSkew: 1\n          topologyKey: kubernetes.io/hostname\n          whenUnsatisfiable: ScheduleAnyway\n          labelSelector:\n            matchLabels:\n              app: web-frontend\n      containers:\n        - name: app\n          image: ghcr.io/example/web:1.2.3\n          ports:\n            - containerPort: 8080\n          resources:\n            requests:\n              cpu: "250m"\n              memory: "256Mi"\n            limits:\n              cpu: "1"\n              memory: "512Mi"\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Result: As long as resources are available on user nodes, all replicas are placed there. Only when resources are scarce can pods also be scheduled on virtual nodes thanks to ",(0,o.jsx)(n.strong,{children:"tolerance"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"2-batchjob-prefers-virtual-nodes-to-conserve-user-pool",children:"2) BatchJob: prefers virtual nodes to conserve user pool"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: image-transcode\nspec:\n  completions: 5\n  parallelism: 5\n  backoffLimit: 0\n  template:\n    spec:\n      # \u2776 Prefer Virtual Node (soft), but allow users as backup\n      affinity:\n        nodeAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 100\n              preference:\n                matchExpressions:\n                  - key: kubernetes.io/role\n                    operator: In\n                    values: ["virtual-node"]\n      # \u2777 Tolerance for the virtual node taint (required for scheduling)\n      tolerations:\n        - key: "virtual-kubelet.io/provider"\n          operator: "Equal"\n          value: "azure"\n          effect: "NoSchedule"\n      restartPolicy: Never\n      containers:\n        - name: worker\n          image: ghcr.io/example/transcoder:2.0.0\n          args: ["--input", "$(INPUT)", "--output", "$(OUTPUT)"]\n          env:\n            - name: INPUT\n              value: "/data/in"\n            - name: OUTPUT\n              value: "/data/out"\n          resources:\n            requests:\n              cpu: "1"\n              memory: "1Gi"\n            limits:\n              cpu: "2"\n              memory: "2Gi"\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Note: The key ",(0,o.jsx)(n.code,{children:"kubernetes.io/role=virtual-node"})," is ",(0,o.jsx)(n.strong,{children:"an example label"}),". In many clusters, a suitable label already exists on virtual nodes (e.g., ",(0,o.jsx)(n.code,{children:"type=virtual-kubelet"})," or ",(0,o.jsx)(n.code,{children:"kubernetes.azure.com/virtual-node=true"}),"). Adjust the ",(0,o.jsx)(n.strong,{children:"match expression"})," to your actual node labels."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"3-variant-strict-separation-via-nodeselector",children:"3) Variant: Strict separation via NodeSelector"}),"\n",(0,o.jsxs)(n.p,{children:["If certain workloads should ",(0,o.jsx)(n.strong,{children:"never"})," run on virtual nodes, use a hard ",(0,o.jsx)(n.code,{children:"nodeSelector"})," on user nodes ",(0,o.jsx)(n.strong,{children:"without"})," tolerations:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'spec:\n  template:\n    spec:\n      nodeSelector:\n        kubernetes.azure.com/mode: \u201cuser"\n      # No toleration \u2192 no scheduling on virtual nodes possible\n'})}),"\n",(0,o.jsx)(n.p,{children:"And vice versa (virtual node only):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'spec:\n  template:\n    spec:\n      tolerations:\n        - key: "virtual-kubelet.io/provider"\n          operator: "Equal"\n          value: "azure"\n          effect: "NoSchedule"\n      nodeSelector:\n        kubernetes.azure.com/virtual-node: "true" # Sample label, customize it for your needs\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"4-horizontal-pod-autoscaler-hpa-as-a-burst-trigger",children:"4) Horizontal Pod Autoscaler (HPA) as a burst trigger"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: web-frontend\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: web-frontend\n  minReplicas: 3\n  maxReplicas: 30\n  metrics:\n    - type: Resource\n      resource:\n        name: cpu\n        target:\n          type: Utilization\n          averageUtilization: 70\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},7293:(e,n,r)=>{r.d(n,{A:()=>U});var s=r(6540),o=r(4848);function i(e){const{mdxAdmonitionTitle:n,rest:r}=function(e){const n=s.Children.toArray(e),r=n.find(e=>s.isValidElement(e)&&"mdxAdmonitionTitle"===e.type),i=n.filter(e=>e!==r),t=r?.props.children;return{mdxAdmonitionTitle:t,rest:i.length>0?(0,o.jsx)(o.Fragment,{children:i}):null}}(e.children),i=e.title??n;return{...e,...i&&{title:i},children:r}}var t=r(4164),l=r(1312),a=r(7559);const c="admonition_xJq3",d="admonitionHeading_Gvgb",u="admonitionIcon_Rf37",h="admonitionContent_BuS1";function p({type:e,className:n,children:r}){return(0,o.jsx)("div",{className:(0,t.A)(a.G.common.admonition,a.G.common.admonitionType(e),c,n),children:r})}function m({icon:e,title:n}){return(0,o.jsxs)("div",{className:d,children:[(0,o.jsx)("span",{className:u,children:e}),n]})}function x({children:e}){return e?(0,o.jsx)("div",{className:h,children:e}):null}function g(e){const{type:n,icon:r,title:s,children:i,className:t}=e;return(0,o.jsxs)(p,{type:n,className:t,children:[s||r?(0,o.jsx)(m,{title:s,icon:r}):null,(0,o.jsx)(x,{children:i})]})}function f(e){return(0,o.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const j={icon:(0,o.jsx)(f,{}),title:(0,o.jsx)(l.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function b(e){return(0,o.jsx)(g,{...j,...e,className:(0,t.A)("alert alert--secondary",e.className),children:e.children})}function v(e){return(0,o.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const y={icon:(0,o.jsx)(v,{}),title:(0,o.jsx)(l.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function k(e){return(0,o.jsx)(g,{...y,...e,className:(0,t.A)("alert alert--success",e.className),children:e.children})}function w(e){return(0,o.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const N={icon:(0,o.jsx)(w,{}),title:(0,o.jsx)(l.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function S(e){return(0,o.jsx)(g,{...N,...e,className:(0,t.A)("alert alert--info",e.className),children:e.children})}function A(e){return(0,o.jsx)("svg",{viewBox:"0 0 16 16",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const z={icon:(0,o.jsx)(A,{}),title:(0,o.jsx)(l.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function P(e){return(0,o.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const T={icon:(0,o.jsx)(P,{}),title:(0,o.jsx)(l.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const V={icon:(0,o.jsx)(A,{}),title:(0,o.jsx)(l.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const C={...{note:b,tip:k,info:S,warning:function(e){return(0,o.jsx)(g,{...z,...e,className:(0,t.A)("alert alert--warning",e.className),children:e.children})},danger:function(e){return(0,o.jsx)(g,{...T,...e,className:(0,t.A)("alert alert--danger",e.className),children:e.children})}},...{secondary:e=>(0,o.jsx)(b,{title:"secondary",...e}),important:e=>(0,o.jsx)(S,{title:"important",...e}),success:e=>(0,o.jsx)(k,{title:"success",...e}),caution:function(e){return(0,o.jsx)(g,{...V,...e,className:(0,t.A)("alert alert--warning",e.className),children:e.children})}}};function U(e){const n=i(e),r=(s=n.type,C[s]||(console.warn(`No admonition component found for admonition type "${s}". Using Info as fallback.`),C.info));var s;return(0,o.jsx)(r,{...n})}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var s=r(6540);const o={},i=s.createContext(o);function t(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(i.Provider,{value:n},e.children)}},9747:e=>{e.exports=JSON.parse('{"permalink":"/en/blog/aks-node-selection","source":"@site/i18n/en/docusaurus-plugin-content-blog/2025-01-27-aks-node-selection.md","title":"AKS Node Selection: Physical Pools vs. Virtual Nodes","description":"Strategies for running workloads in AKS preferentially on physical user nodes \u2013 with automatic fallback to virtual nodes.","date":"2025-01-27T00:00:00.000Z","tags":[{"inline":false,"label":"Kubernetes","permalink":"/en/blog/tags/kubernetes","description":"Kubernetes"},{"inline":false,"label":"AKS","permalink":"/en/blog/tags/aks","description":"Azure Kubernetes Service"},{"inline":false,"label":"Azure","permalink":"/en/blog/tags/azure","description":"Azure"},{"inline":false,"label":"Nodepool","permalink":"/en/blog/tags/nodepool","description":"Nodepool"},{"inline":false,"label":"Virtual Node","permalink":"/en/blog/tags/virtual-node","description":"Virtual Node"},{"inline":false,"label":"Scheduling","permalink":"/en/blog/tags/scheduling","description":"Scheduling"}],"readingTime":4.59,"hasTruncateMarker":true,"authors":[{"name":"Brigitte B\xf6hm","title":"Cloud & Data Platform Engineer","url":"https://www.linkedin.com/in/brigitte-boehm-34b7a025","page":{"permalink":"/en/blog/authors/brigitte"},"socials":{"github":"https://github.com/bri-b-dev","linkedin":"https://www.linkedin.com/in/brigitte-boehm-34b7a025"},"imageURL":"https://github.com/bri-b-dev.png","key":"brigitte"}],"frontMatter":{"slug":"aks-node-selection","title":"AKS Node Selection: Physical Pools vs. Virtual Nodes","authors":"brigitte","tags":["kubernetes","aks","azure","nodepool","virtual-node","scheduling"],"date":"2025-01-27T00:00:00.000Z","description":"Strategies for running workloads in AKS preferentially on physical user nodes \u2013 with automatic fallback to virtual nodes."},"unlisted":false,"prevItem":{"title":"Terraform Patterns for AKS & Azure","permalink":"/en/blog/terraform-patterns-aks-azure"},"nextItem":{"title":"Streaming File Uploads to Azure Blob Storage with Spring Boot","permalink":"/en/blog/springboot-fileupload-azure"}}')}}]);