<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://bri-b-dev.github.io/en/blog</id>
    <title>Brigitte B√∂hm's homepage Blog</title>
    <updated>2025-02-17T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://bri-b-dev.github.io/en/blog"/>
    <subtitle>Brigitte B√∂hm's homepage Blog</subtitle>
    <icon>https://bri-b-dev.github.io/en/img/favicon.svg</icon>
    <entry>
        <title type="html"><![CDATA[Field-Filtering in REST-APIs with Jackson & @ControllerAdvice]]></title>
        <id>https://bri-b-dev.github.io/en/blog/field-filtering-rest-jackson</id>
        <link href="https://bri-b-dev.github.io/en/blog/field-filtering-rest-jackson"/>
        <updated>2025-02-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Dynamic reduction of response fields via query parameters ‚Äì an elegant solution with mixins and MappingJacksonValue.]]></summary>
        <content type="html"><![CDATA[<p>Clients often do not want to receive <strong>all fields</strong> of a REST response.<br>
<!-- -->Examples:</p>
<ul>
<li>Mobile apps only need <code>id</code> and <code>name</code>, not the complete DTO.</li>
<li>Analytics systems only want certain metrics.</li>
</ul>
<p>Instead of building multiple endpoints, you can implement <strong>field filtering via query parameters</strong>:<br>
<code>GET /api/spaces?fields=id,name</code></p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-setup">‚öôÔ∏è Setup<a href="https://bri-b-dev.github.io/en/blog/field-filtering-rest-jackson#%EF%B8%8F-setup" class="hash-link" aria-label="Direct link to ‚öôÔ∏è Setup" title="Direct link to ‚öôÔ∏è Setup" translate="no">‚Äã</a></h2>
<p>We use:</p>
<ul>
<li><strong>Spring Boot (Kotlin/Java)</strong></li>
<li><strong>Jackson @JsonFilter + Mixins</strong></li>
<li><strong>@ControllerAdvice</strong>, <code>MappingJacksonValue</code> returns</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-example-dtos--controller">üîó Example: DTOs &amp; Controller<a href="https://bri-b-dev.github.io/en/blog/field-filtering-rest-jackson#-example-dtos--controller" class="hash-link" aria-label="Direct link to üîó Example: DTOs &amp; Controller" title="Direct link to üîó Example: DTOs &amp; Controller" translate="no">‚Äã</a></h2>
<p><strong><code>SpaceReadDTO.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">data</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">SpaceReadDTO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> id</span><span class="token operator">:</span><span class="token plain"> UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> name</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> description</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> createdAt</span><span class="token operator">:</span><span class="token plain"> Instant</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> owner</span><span class="token operator">:</span><span class="token plain"> String</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre></div></div>
<p><strong><code>SpaceController.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RestController</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RequestMapping</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"/api/spaces"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> SpaceController </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@GetMapping</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getSpaces</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> List</span><span class="token operator">&lt;</span><span class="token plain">SpaceReadDTO</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token function" style="color:rgb(80, 250, 123)">listOf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token function" style="color:rgb(80, 250, 123)">SpaceReadDTO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">randomUUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Alpha"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"First Space"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Instant</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">now</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Brigitte"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token function" style="color:rgb(80, 250, 123)">SpaceReadDTO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">randomUUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Beta"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Second Space"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Instant</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">now</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Alex"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>üëâ Still without filtering.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-field-filter-advice">ü™Ñ Field-Filter Advice<a href="https://bri-b-dev.github.io/en/blog/field-filtering-rest-jackson#-field-filter-advice" class="hash-link" aria-label="Direct link to ü™Ñ Field-Filter Advice" title="Direct link to ü™Ñ Field-Filter Advice" translate="no">‚Äã</a></h2>
<p>We write a <strong>@ControllerAdvice</strong> that intercepts responses and reduces fields if necessary:</p>
<p><strong><code>FieldFilterAdvice.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@ControllerAdvice</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">FieldFilterAdvice</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> objectMapper</span><span class="token operator">:</span><span class="token plain"> ObjectMapper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> ResponseBodyAdvice</span><span class="token operator">&lt;</span><span class="token plain">Any</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">supports</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        returnType</span><span class="token operator">:</span><span class="token plain"> MethodParameter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        converterType</span><span class="token operator">:</span><span class="token plain"> Class</span><span class="token operator">&lt;</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">out</span><span class="token plain"> HttpMessageConverter</span><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">beforeBodyWrite</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        body</span><span class="token operator">:</span><span class="token plain"> Any</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        returnType</span><span class="token operator">:</span><span class="token plain"> MethodParameter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        contentType</span><span class="token operator">:</span><span class="token plain"> MediaType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        converterType</span><span class="token operator">:</span><span class="token plain"> Class</span><span class="token operator">&lt;</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">out</span><span class="token plain"> HttpMessageConverter</span><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        request</span><span class="token operator">:</span><span class="token plain"> ServerHttpRequest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        response</span><span class="token operator">:</span><span class="token plain"> ServerHttpResponse</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Any</span><span class="token operator">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">body </span><span class="token operator">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> servletRequest </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">request </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">as</span><span class="token operator">?</span><span class="token plain"> ServletServerHttpRequest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">servletRequest</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> fieldsParam </span><span class="token operator">=</span><span class="token plain"> servletRequest</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getParameter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"fields"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">?:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> body</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> fields </span><span class="token operator">=</span><span class="token plain"> fieldsParam</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">split</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">","</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">map</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> it</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">trim</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toSet</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">fields</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">isEmpty</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> body</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// Dynamic Filter-Setup</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> filterId </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"dynamicFilter"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        objectMapper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">setFilterProvider</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token function" style="color:rgb(80, 250, 123)">SimpleFilterProvider</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">addFilter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                filterId</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                SimpleBeanPropertyFilter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">filterOutAllExcept</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">fields</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// Mixin with @JsonFilter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> targetClass </span><span class="token operator">=</span><span class="token plain"> body</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">javaClass</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        objectMapper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">addMixIn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">targetClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> DynamicFilterMixin</span><span class="token operator">::</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">MappingJacksonValue</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">body</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">apply</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> filters </span><span class="token operator">=</span><span class="token plain"> objectMapper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">serializationConfig</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">filterProvider </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@JsonFilter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"dynamicFilter"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> DynamicFilterMixin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-result">üöÄ Result<a href="https://bri-b-dev.github.io/en/blog/field-filtering-rest-jackson#-result" class="hash-link" aria-label="Direct link to üöÄ Result" title="Direct link to üöÄ Result" translate="no">‚Äã</a></h2>
<p>Call without parameter:</p>
<div class="language-http codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-http codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">GET /api/spaces</span><br></span></code></pre></div></div>
<p>Response:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token property">"id"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"‚Ä¶"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"name"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Alpha"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"description"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"First Space"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"createdAt"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"‚Ä¶"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"owner"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Brigitte"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<p>Call with filter:</p>
<div class="language-http codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-http codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">GET /api/spaces?fields=id,name</span><br></span></code></pre></div></div>
<p>Response:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token property">"id"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"‚Ä¶"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"name"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Alpha"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-lessons-learned">‚úÖ Lessons Learned<a href="https://bri-b-dev.github.io/en/blog/field-filtering-rest-jackson#-lessons-learned" class="hash-link" aria-label="Direct link to ‚úÖ Lessons Learned" title="Direct link to ‚úÖ Lessons Learned" translate="no">‚Äã</a></h2>
<ul>
<li>Works for individual objects <strong>and</strong> lists.</li>
<li><code>fields</code> parameter can be combined flexibly (<code>id,name,owner</code>).</li>
<li>Multiple DTOs ‚Üí use your own filter IDs and mixins if necessary.</li>
<li>Be careful with <strong>nested objects</strong> ‚Äì field filtering only works at the top level.</li>
</ul>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Pro tip</div><div class="admonitionContent_BuS1"><p>Build helper methods for frequently used field sets, e.g., <code>?fields=summary</code> ‚Üí expands into specific fields.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion">üìå Conclusion<a href="https://bri-b-dev.github.io/en/blog/field-filtering-rest-jackson#-conclusion" class="hash-link" aria-label="Direct link to üìå Conclusion" title="Direct link to üìå Conclusion" translate="no">‚Äã</a></h2>
<p>With <code>@ControllerAdvice</code>, Jackson filters, and <code>MappingJacksonValue</code>, <strong>field filtering can be implemented elegantly and generically</strong>.
This saves you boilerplate endpoints and returns exactly the data that clients really need.</p>]]></content>
        <author>
            <name>Brigitte B√∂hm</name>
            <uri>https://www.linkedin.com/in/brigitte-boehm-34b7a025</uri>
        </author>
        <category label="Spring Boot" term="Spring Boot"/>
        <category label="Kotlin" term="Kotlin"/>
        <category label="Java" term="Java"/>
        <category label="REST" term="REST"/>
        <category label="Jackson" term="Jackson"/>
        <category label="Json" term="Json"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[API-First wotj Spring Boot & Kotlin]]></title>
        <id>https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin</id>
        <link href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin"/>
        <updated>2025-02-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How I design microservices according to OpenAPI and automatically generate clients & server stubs ‚Äì Lessons learned in Kotlin.]]></summary>
        <content type="html"><![CDATA[<p>Microservices should offer <strong>consistent interfaces</strong> ‚Äì regardless of the programming language.
API-first means: <strong>first the OpenAPI schema</strong>, then code, documentation, and clients.</p>
<p>This prevents API definitions from becoming outdated or being added as an ‚Äúafterthought."</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-workflow-api-first-in-practice">üß© Workflow: API-First in practice<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#-workflow-api-first-in-practice" class="hash-link" aria-label="Direct link to üß© Workflow: API-First in practice" title="Direct link to üß© Workflow: API-First in practice" translate="no">‚Äã</a></h2>
<ol>
<li><strong>Design</strong>: OpenAPI spec (<code>.yaml</code>) with Stoplight, Swagger Editor, or VS Code plugin.</li>
<li><strong>Validate</strong>: Linter (e.g., Spectral) and CI checks.</li>
<li><strong>Codegen</strong>: Generate server stubs &amp; client SDKs from the spec.</li>
<li><strong>Implement</strong>: Business logic in Kotlin, interface remains stable.</li>
<li><strong>Docs</strong>: Swagger UI or ReDoc from the same spec.</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-setup-openapi-generator-in-kotlin">‚öôÔ∏è Setup: OpenAPI Generator in Kotlin<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#%EF%B8%8F-setup-openapi-generator-in-kotlin" class="hash-link" aria-label="Direct link to ‚öôÔ∏è Setup: OpenAPI Generator in Kotlin" title="Direct link to ‚öôÔ∏è Setup: OpenAPI Generator in Kotlin" translate="no">‚Äã</a></h2>
<p><strong><code>build.gradle.kts</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">plugins </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.springframework.boot"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"3.3.0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"io.spring.dependency-management"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.1.5"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"jvm"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.9.24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"plugin.spring"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.9.24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.openapi.generator"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"7.5.0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">openApiGenerate </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    generatorName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"kotlin-spring"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    inputSpec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"</span><span class="token string-literal singleline interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">$</span><span class="token string-literal singleline interpolation expression">rootDir</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">/api/openapi.yaml"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outputDir</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"</span><span class="token string-literal singleline interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">$</span><span class="token string-literal singleline interpolation expression">buildDir</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">/generated"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    apiPackage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.example.api"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    modelPackage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.example.api.model"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    configOptions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token function" style="color:rgb(80, 250, 123)">mapOf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"interfaceOnly"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"true"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"useSpringBoot3"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"true"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"reactive"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"false"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>üëâ Result:</p>
<ul>
<li><strong>API interfaces</strong> as Kotlin interfaces (controller skeletons)</li>
<li><strong>DTOs</strong> in the <code>model</code> package</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-lessons-learned">üöß Lessons Learned<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#-lessons-learned" class="hash-link" aria-label="Direct link to üöß Lessons Learned" title="Direct link to üöß Lessons Learned" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-interface-only-is-worth-its-weight-in-gold">1. Interface-only is worth its weight in gold<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#1-interface-only-is-worth-its-weight-in-gold" class="hash-link" aria-label="Direct link to 1. Interface-only is worth its weight in gold" title="Direct link to 1. Interface-only is worth its weight in gold" translate="no">‚Äã</a></h3>
<ul>
<li>Only generate interfaces; implementation remains <strong>clean in your own code</strong>.</li>
<li>No merge conflicts when regenerating.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-use-dtos-strictly">2. Use DTOs strictly<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#2-use-dtos-strictly" class="hash-link" aria-label="Direct link to 2. Use DTOs strictly" title="Direct link to 2. Use DTOs strictly" translate="no">‚Äã</a></h3>
<ul>
<li>DTOs from <code>model</code> are <strong>transport objects</strong>‚Äînot business entities.</li>
<li>Avoid ‚Äúsmart" logic in DTOs, keep them flat.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-versioning--backward-compatibility">3. Versioning &amp; backward compatibility<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#3-versioning--backward-compatibility" class="hash-link" aria-label="Direct link to 3. Versioning &amp; backward compatibility" title="Direct link to 3. Versioning &amp; backward compatibility" translate="no">‚Äã</a></h3>
<ul>
<li>Version OpenAPI as a <strong>single source of truth</strong> in Git.</li>
<li>Breaking changes only with new API version (<code>/v2/...</code>).</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-cicd-checks">4. CI/CD checks<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#4-cicd-checks" class="hash-link" aria-label="Direct link to 4. CI/CD checks" title="Direct link to 4. CI/CD checks" translate="no">‚Äã</a></h3>
<ul>
<li>Validate OpenAPI spec in every PR (<code>spectral lint</code>).</li>
<li>Check codegen in CI to ensure everything is up to date (<code>git diff</code> on generated code).</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-client-generation">üì¶ Client generation<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#-client-generation" class="hash-link" aria-label="Direct link to üì¶ Client generation" title="Direct link to üì¶ Client generation" translate="no">‚Äã</a></h2>
<p>OpenAPI Generator can also be used to create <strong>clients</strong> for other languages:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">openapi-generator-cli generate </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-i</span><span class="token plain"> api/openapi.yaml </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> typescript-fetch </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> clients/ts</span><br></span></code></pre></div></div>
<ul>
<li>Frontend uses <code>typescript-fetch</code> or <code>typescript-axios</code>.</li>
<li>Other services can obtain <code>java</code>, <code>python</code>, <code>go</code> SDKs.</li>
<li>Uniform API guarantees consistency across the stack.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-mini-example-user-api-end-to-end">üîó Mini example: User API end-to-end<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#-mini-example-user-api-end-to-end" class="hash-link" aria-label="Direct link to üîó Mini example: User API end-to-end" title="Direct link to üîó Mini example: User API end-to-end" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-openapi-spec-abridged">1. OpenAPI Spec (abridged)<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#1-openapi-spec-abridged" class="hash-link" aria-label="Direct link to 1. OpenAPI Spec (abridged)" title="Direct link to 1. OpenAPI Spec (abridged)" translate="no">‚Äã</a></h3>
<p><strong><code>api/openapi.yaml</code></strong></p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">openapi</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> 3.0.3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">info</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">title</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> User API</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">version</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> 1.0.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">paths</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  /users/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">get</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">summary</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Get user by ID</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">parameters</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">in</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> path</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">required</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">schema</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">format</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> uuid</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">responses</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">'200'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">description</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> OK</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">content</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">application/json</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">schema</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token key atrule">$ref</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'#/components/schemas/User'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">'404'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">description</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Not Found</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">components</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">schemas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">User</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> object</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">properties</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">format</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> uuid</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> string</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-generated-interface-abridged">2. Generated interface (abridged)<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#2-generated-interface-abridged" class="hash-link" aria-label="Direct link to 2. Generated interface (abridged)" title="Direct link to 2. Generated interface (abridged)" translate="no">‚Äã</a></h3>
<p><strong><code>build/generated/com/example/api/UsersApi.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">api</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">api</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">User</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">http</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">ResponseEntity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PathVariable</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> UsersApi </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getUserById</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@PathVariable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"id"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> id</span><span class="token operator">:</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">util</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> ResponseEntity</span><span class="token operator">&lt;</span><span class="token plain">User</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-kotlin-implementation">3. Kotlin implementation<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#3-kotlin-implementation" class="hash-link" aria-label="Direct link to 3. Kotlin implementation" title="Direct link to 3. Kotlin implementation" translate="no">‚Äã</a></h3>
<p><strong><code>src/main/kotlin/com/example/controller/UserController.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">controller</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">api</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">UsersApi</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">api</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">User</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">http</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">ResponseEntity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RestController</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">util</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">UUID</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RestController</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> UserController </span><span class="token operator">:</span><span class="token plain"> UsersApi </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getUserById</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token operator">:</span><span class="token plain"> UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> ResponseEntity</span><span class="token operator">&lt;</span><span class="token plain">User</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> user </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toString</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">startsWith</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"a"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token function" style="color:rgb(80, 250, 123)">User</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id </span><span class="token operator">=</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toString</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> name </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Alice"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> user</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> ResponseEntity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">ok</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">it</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token operator">?:</span><span class="token plain"> ResponseEntity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">notFound</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">build</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>üëâ Flow: <strong>Spec ‚Üí Codegen ‚Üí Interface ‚Üí Implementation</strong>. All teams use the same API definition.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-best-practices">üìå Best Practices<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#-best-practices" class="hash-link" aria-label="Direct link to üìå Best Practices" title="Direct link to üìå Best Practices" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Keep the spec small</strong>: Don't model everything upfront, but expand incrementally.</li>
<li><strong>Consistent names</strong>: API paths, models, enums ‚Üí consistent naming convention.</li>
<li><strong>Security</strong>: Define security schemes (OAuth2, Bearer JWT) right in the spec.</li>
<li><strong>Documentation</strong>: Use Swagger UI directly in the service ‚Äì developers get immediate feedback.</li>
</ul>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>API-First pays off</div><div class="admonitionContent_BuS1"><p>The extra effort at the beginning pays off many times over: Consistent interfaces, less friction between teams, faster development.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion">üìå Conclusion<a href="https://bri-b-dev.github.io/en/blog/api-first-springboot-kotlin#-conclusion" class="hash-link" aria-label="Direct link to üìå Conclusion" title="Direct link to üìå Conclusion" translate="no">‚Äã</a></h2>
<p>API-first with OpenAPI and Kotlin + Spring Boot means: <strong>interface first, code second</strong>.
Generators for stubs &amp; clients make the process reproducible, the documentation always stays up to date, and microservices can be integrated faster.</p>]]></content>
        <author>
            <name>Brigitte B√∂hm</name>
            <uri>https://www.linkedin.com/in/brigitte-boehm-34b7a025</uri>
        </author>
        <category label="Spring Boot" term="Spring Boot"/>
        <category label="Kotlin" term="Kotlin"/>
        <category label="OpenAPI" term="OpenAPI"/>
        <category label="Microservices" term="Microservices"/>
        <category label="Codegen" term="Codegen"/>
        <category label="API-first" term="API-first"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Terraform Patterns for AKS & Azure]]></title>
        <id>https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure</id>
        <link href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure"/>
        <updated>2025-02-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Experiences with modular Terraform setups for AKS ‚Äì from module design and RBAC to network policies and CI/CD.]]></summary>
        <content type="html"><![CDATA[<p>AKS projects grow quickly: <strong>clusters, node pools, identities, networks, ACR, policies</strong> ‚Äì and parameters vary per environment (dev/test/prod). Without structure, the code base becomes fragile. In this post, I'll show <strong>proven Terraform patterns</strong> for Azure &amp; AKS from projects, including <strong>RBAC</strong> and <strong>network policy</strong> pitfalls.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-module-architecture-separate-by-responsibilities">üß± Module architecture: Separate by responsibilities<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-module-architecture-separate-by-responsibilities" class="hash-link" aria-label="Direct link to üß± Module architecture: Separate by responsibilities" title="Direct link to üß± Module architecture: Separate by responsibilities" translate="no">‚Äã</a></h2>
<p><strong>Goal:</strong> Reusable, clearly defined modules instead of a "monolith."</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">infra/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ modules/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ network/                 # VNet, Subnets, NSGs, UDR/NAT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ aks/                     # AKS Cluster + Pools</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ identity/                # UAMI/MI + Role Assignments</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ acr/                     # Container Registry</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ monitoring/              # Log Analytics, Insights</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ policies/                # Azure Policy + AKS Add-Ons</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îî‚îÄ dns/                     # Private DNS Zones</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ env/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ dev/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îÇ  ‚îú‚îÄ main.tf               # Assembling the modules</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îÇ  ‚îú‚îÄ variables.tfvars</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îÇ  ‚îî‚îÄ backend.tf            # Remote State</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îî‚îÄ prod/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ     ‚îú‚îÄ ...</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îî‚îÄ global/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   ‚îî‚îÄ rg.tf                    # Resource groups, tags, management</span><br></span></code></pre></div></div>
<p><strong>Pattern:</strong> Environments are <strong>compositions</strong> of modules. Each module has a <strong>clear API</strong> (inputs/outputs) and minimal side effects.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Keep Inputs simple</div><div class="admonitionContent_BuS1"><p>Avoid huge, nested <code>object</code> variables. It is better to use several flat inputs with defaults ‚Äì this reduces <code>Unknown</code> diffs and makes upgrades easier.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-example-aks-module-interface">üîß Example: AKS module (interface)<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-example-aks-module-interface" class="hash-link" aria-label="Direct link to üîß Example: AKS module (interface)" title="Direct link to üîß Example: AKS module (interface)" translate="no">‚Äã</a></h2>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "location" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "resource_group_name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "kubernetes_version" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "network_profile" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin           = string   # azure, kubenet, cni_overlay</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr         = optional(string)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr     = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type    = string   # loadBalancer, userDefinedRouting, managedNATGateway</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "enable_azure_rbac" { type = bool, default = true }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "aad_admin_group_object_ids" { type = list(string), default = [] }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "system_node_pool" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name       = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size    = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count  = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count  = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku     = optional(string, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "user_node_pools" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = list(object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name       = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size    = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count  = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count  = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    taints     = optional(list(string), [])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    labels     = optional(map(string), {})</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    mode       = optional(string, "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "kubelet_identity_principal_id" { value = azurerm_kubernetes_cluster.this.kubelet_identity[0].object_id }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "cluster_id" { value = azurerm_kubernetes_cluster.this.id }</span><br></span></code></pre></div></div>
<blockquote>
<p><strong>Note:</strong> Block names/flags differ depending on provider versions. Capsule version specifics <strong>in the module</strong> and provide stable inputs to the outside world.</p>
</blockquote>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-rbac--identities-common-pitfalls">ü™™ RBAC &amp; Identities: Common Pitfalls<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-rbac--identities-common-pitfalls" class="hash-link" aria-label="Direct link to ü™™ RBAC &amp; Identities: Common Pitfalls" title="Direct link to ü™™ RBAC &amp; Identities: Common Pitfalls" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-azure-rbac-vs-kubernetes-rbac">1) Azure RBAC vs. Kubernetes RBAC<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#1-azure-rbac-vs-kubernetes-rbac" class="hash-link" aria-label="Direct link to 1) Azure RBAC vs. Kubernetes RBAC" title="Direct link to 1) Azure RBAC vs. Kubernetes RBAC" translate="no">‚Äã</a></h3>
<ul>
<li><strong>Azure RBAC for Kubernetes</strong> ("AKS-managed AAD") simplifies AuthN/AuthZ, but <strong>mapping &amp; propagation</strong> may take seconds/minutes.</li>
<li><strong>Pattern:</strong> Create <strong>AAD groups</strong> for cluster roles (e.g. <code>aks-admins</code>, <code>aks-devs</code>) and pass their object IDs as module input.</li>
</ul>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Pseudocode ‚Äì module uses these IDs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "aad_admin_group_object_ids" { type = list(string) }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># In the cluster block: activate AAD/RBAC and register groups as admins</span><br></span></code></pre></div></div>
<p><strong>Anti-pattern:</strong> Storing individual users directly ‚Üí difficult to maintain, no rotation.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-kubeletacr-permissions">2) Kubelet/ACR permissions<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#2-kubeletacr-permissions" class="hash-link" aria-label="Direct link to 2) Kubelet/ACR permissions" title="Direct link to 2) Kubelet/ACR permissions" translate="no">‚Äã</a></h3>
<ul>
<li>To enable nodes to pull images: <code>AcrPull</code> on <strong>ACR</strong> for the <strong>Kubelet identity</strong>.</li>
<li>Additionally: Build/Push pipeline ‚Üí <code>AcrPush</code> for CI service principal or UAMI.</li>
</ul>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_role_assignment" "kubelet_acr_pull" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  scope                = azurerm_container_registry.acr.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  role_definition_name = "AcrPull"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  principal_id         = module.aks.kubelet_identity_principal_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-network-roles">3) Network roles<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#3-network-roles" class="hash-link" aria-label="Direct link to 3) Network roles" title="Direct link to 3) Network roles" translate="no">‚Äã</a></h3>
<ul>
<li>For <strong>UDR/NAT Gateway</strong>: <code>Network Contributor</code> on subnet/route table for <strong>AKS-MI</strong> (cluster identity) ‚Äì otherwise provisioning/scale will fail.</li>
</ul>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>Eventual Consistency</div><div class="admonitionContent_BuS1"><p>Role assignments are <strong>eventually consistent</strong>. Plan for wait times/<code>depends_on</code> or use a retry wrapper module.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-network-policies-practice-instead-of-theory">üîê Network Policies: Practice Instead of Theory<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-network-policies-practice-instead-of-theory" class="hash-link" aria-label="Direct link to üîê Network Policies: Practice Instead of Theory" title="Direct link to üîê Network Policies: Practice Instead of Theory" translate="no">‚Äã</a></h2>
<p><strong>Goal:</strong> Default deny at pod level + targeted allow rules.</p>
<ul>
<li><strong>CNI/policy matrix</strong> differs depending on AKS version: Azure CNI (Classic/Overlay) &amp; Kubenet behave differently.</li>
<li><strong>Pattern:</strong> Parameterize policy engine (<code>azure</code>, <code>calico</code>) as module input and generate <strong>basic rules</strong> centrally.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="baseline-namespace-side--default-deny">Baseline (namespace side) ‚Äì Default Deny<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#baseline-namespace-side--default-deny" class="hash-link" aria-label="Direct link to Baseline (namespace side) ‚Äì Default Deny" title="Direct link to Baseline (namespace side) ‚Äì Default Deny" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> networking.k8s.io/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> NetworkPolicy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> default</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">deny</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">namespace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> myns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">podSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">policyTypes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">Ingress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Egress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="allow-ingress-from-the-ingress-controller--dns-egress">Allow: Ingress from the ingress controller + DNS egress<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#allow-ingress-from-the-ingress-controller--dns-egress" class="hash-link" aria-label="Direct link to Allow: Ingress from the ingress controller + DNS egress" title="Direct link to Allow: Ingress from the ingress controller + DNS egress" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> networking.k8s.io/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> NetworkPolicy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> allow</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">ingress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">from</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">gateway</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">namespace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> myns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">podSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">ingress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">from</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">namespaceSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">kubernetes.io/metadata.name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ingress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">egress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">to</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">namespaceSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">kubernetes.io/metadata.name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kube</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">ports</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">protocol</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> UDP</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">port</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">53</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Test</div><div class="admonitionContent_BuS1"><p>Validate policies with <code>netshoot</code>, <code>curl</code>, <code>dig</code>, and CI checks (e.g., Kyverno/OPA constraints). Automated smoke tests are invaluable.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-network-setup-proven-options">üåê Network setup: proven options<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-network-setup-proven-options" class="hash-link" aria-label="Direct link to üåê Network setup: proven options" title="Direct link to üåê Network setup: proven options" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Outbound</strong>: <code>managedNATGateway</code> or <code>userDefinedRouting</code> with Azure Firewall.</li>
<li><strong>Private clusters</strong>: Private endpoint + DNS zones, jump host/bastion for <code>kubectl</code>.</li>
<li><strong>Ingress</strong>: AGIC or NGINX; for private clusters ‚Üí internal load balancer/private link.</li>
<li><strong>Egress lockdown</strong>: Azure Firewall DNAT/application rules; policies for prohibited public IPs.</li>
</ul>
<p><strong>Pattern:</strong> Network module delivers <strong>subnet IDs</strong>/routes as outputs to the AKS module; no circular dependencies.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-environments-workspaces--state">üß™ Environments, Workspaces &amp; State<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-environments-workspaces--state" class="hash-link" aria-label="Direct link to üß™ Environments, Workspaces &amp; State" title="Direct link to üß™ Environments, Workspaces &amp; State" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Remote State</strong> in Azure Storage (Blob) with <strong>state locking</strong> via storage lease.</li>
<li><strong>One workspace per environment</strong> (e.g., <code>dev</code>, <code>prod</code>) ‚Äì no mixing.</li>
<li><strong>tfvars</strong> per environment + <code>locals</code> for derived values (tags, naming conventions, CIDRs).</li>
</ul>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># backend.tf (je Env)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  backend "azurerm" {}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  required_version = "&gt;= 1.7.0"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  required_providers {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    azurerm = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      source  = "hashicorp/azurerm"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      version = "~&gt; 3.100"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Naming conventions</div><div class="admonitionContent_BuS1"><p>A <code>locals.naming</code> block standardizes resource names across all modules (prefix/env/location).</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-cicd--security">üö¶ CI/CD &amp; Security<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-cicd--security" class="hash-link" aria-label="Direct link to üö¶ CI/CD &amp; Security" title="Direct link to üö¶ CI/CD &amp; Security" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Pipeline matrix</strong> per environment (Plan/Apply) with manual approval for prod.</li>
<li><strong>Pre-commit</strong>: <code>terraform fmt</code>, <code>tflint</code>, <code>tfsec</code>/<code>checkov</code>, <code>terrascan</code>.</li>
<li><strong>Drift Detection</strong>: <code>terraform plan</code> on schedule ‚Üí Slack/Teams‚ÄëReport.</li>
<li>Sign/archive <strong>Plan‚ÄëArtifacts</strong>.</li>
<li><strong>Provider‚ÄëPins</strong> + Renovate/Bump PRs ‚Üí reproducible builds.</li>
</ul>
<p><strong>Pattern:</strong> <code>make plan ENV=dev</code> calls <code>terraform workspace select dev</code> + <code>-var-file=env/dev/variables.tfvars</code> ‚Äì identical commands locally and in CI.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-complete-aks-example-abridged">üì¶ Complete AKS example (abridged)<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-complete-aks-example-abridged" class="hash-link" aria-label="Direct link to üì¶ Complete AKS example (abridged)" title="Direct link to üì¶ Complete AKS example (abridged)" translate="no">‚Äã</a></h2>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">module "network" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  source              = "../modules/network"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = local.naming.net</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  address_space       = ["10.40.0.0/16"]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  subnets = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    aks_nodes = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      prefix = "10.40.1.0/24"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      nsg_rules = ["deny_internet_in", "allow_vnet"]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">module "acr" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  source              = "../modules/acr"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = local.naming.acr</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  sku                 = "Standard"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">module "aks" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  source                  = "../modules/aks"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                    = local.naming.aks</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location                = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name     = azurerm_resource_group.rg.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_version      = var.k8s_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  network_profile = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin         = "azure"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr   = "10.41.0.0/16"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip = "10.41.0.10"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type  = "managedNATGateway"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  system_node_pool = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name      = "sys"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size   = "Standard_D4s_v5"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count = 1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count = 3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  user_node_pools = [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      name = "user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      vm_size = "Standard_D8s_v5"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      min_count = 2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      max_count = 10</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      labels = { "kubernetes.azure.com/mode" = "user" }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  enable_azure_rbac            = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  aad_admin_group_object_ids   = var.aad_admin_groups</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Role Assignment for Kubelet ‚Üí ACR Pull</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_role_assignment" "kubelet_acr" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  scope                = module.acr.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  role_definition_name = "AcrPull"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  principal_id         = module.aks.kubelet_identity_principal_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-checklist--things-that-can-go-wrong">üß≠ Checklist ‚Äì Things that can go wrong<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-checklist--things-that-can-go-wrong" class="hash-link" aria-label="Direct link to üß≠ Checklist ‚Äì Things that can go wrong" title="Direct link to üß≠ Checklist ‚Äì Things that can go wrong" translate="no">‚Äã</a></h2>
<ul class="contains-task-list containsTaskList_mC6p">
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Forgot <code>AcrPull</code> for <strong>Kubelet</strong> ‚Üí ImagePullBackOff</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Subnet/RT/NAT permissions missing ‚Üí AKS provisioning hangs</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Azure RBAC groups not propagated ‚Üí Admins cannot join (wait/retry)</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Network policies not taking effect (policy engine/CNI does not match cluster config)</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Private DNS not configured ‚Üí Control plane/ingress/ACR not reachable</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Provider upgrade without module encapsulation ‚Üí Breaking changes everywhere</li>
</ul>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>Production Readiness</div><div class="admonitionContent_BuS1"><p>Before prod rollout: e2e tests (deployments, pull from ACR, ingress, DNS, policy smoke), load tests, failover (node drain, pool scaling), backup/restore (etcd/Velero), secrets path (Key Vault + CSI).</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion">üìå Conclusion<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-conclusion" class="hash-link" aria-label="Direct link to üìå Conclusion" title="Direct link to üìå Conclusion" translate="no">‚Äã</a></h2>
<p>A <strong>modular Terraform design</strong> for AKS pays off: clearer responsibilities, less drift, reproducible builds, and controlled security. With clean RBAC, a well-thought-out network layout, and automated checks, the platform remains <strong>scalable</strong> and <strong>operationally stable</strong>.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-complete-aks-module-example">üì¶ Complete AKS module (example)<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-complete-aks-module-example" class="hash-link" aria-label="Direct link to üì¶ Complete AKS module (example)" title="Direct link to üì¶ Complete AKS module (example)" translate="no">‚Äã</a></h2>
<p><strong><code>modules/aks/main.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_kubernetes_cluster" "this" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = var.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name = var.resource_group_name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dns_prefix          = "${var.name}-dns"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_version  = var.kubernetes_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  identity {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    type = "SystemAssigned"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default_node_pool {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name                = var.system_node_pool.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size             = var.system_node_pool.vm_size</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count           = var.system_node_pool.min_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count           = var.system_node_pool.max_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    enable_auto_scaling = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku              = var.system_node_pool.os_sku</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    mode                = "System"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dynamic "agent_pool_profile" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    for_each = var.user_node_pools</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    content {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      name                = agent_pool_profile.value.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      vm_size             = agent_pool_profile.value.vm_size</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      min_count           = agent_pool_profile.value.min_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      max_count           = agent_pool_profile.value.max_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      enable_auto_scaling = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      mode                = lookup(agent_pool_profile.value, "mode", "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      node_labels         = lookup(agent_pool_profile.value, "labels", null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      node_taints         = lookup(agent_pool_profile.value, "taints", null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  role_based_access_control_enabled = var.enable_azure_rbac</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  azure_active_directory_role_based_access_control {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    managed                = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    admin_group_object_ids = var.aad_admin_group_object_ids</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  network_profile {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_plugin     = var.network_profile.plugin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr       = var.network_profile.service_cidr</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip     = var.network_profile.dns_service_ip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr           = try(var.network_profile.pod_cidr, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type      = var.network_profile.outbound_type</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "kubelet_identity_principal_id" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  value = azurerm_kubernetes_cluster.this.kubelet_identity[0].object_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "id" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  value = azurerm_kubernetes_cluster.this.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<p><strong><code>modules/aks/variables.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "location" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "resource_group_name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "kubernetes_version" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "network_profile" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin         = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr       = optional(string)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type  = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "enable_azure_rbac" { type = bool }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "aad_admin_group_object_ids" { type = list(string) }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "system_node_pool" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name      = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku    = optional(string, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "user_node_pools" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = list(object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name      = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    mode      = optional(string, "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    labels    = optional(map(string))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    taints    = optional(list(string))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-azure-devops-pipeline-for-terraform-aks">üöÄ Azure DevOps Pipeline for Terraform AKS<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-azure-devops-pipeline-for-terraform-aks" class="hash-link" aria-label="Direct link to üöÄ Azure DevOps Pipeline for Terraform AKS" title="Direct link to üöÄ Azure DevOps Pipeline for Terraform AKS" translate="no">‚Äã</a></h2>
<p><strong><code>.azure-pipelines/terraform-aks.yml</code></strong></p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">trigger</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">branches</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">include</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">variables</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">TF_VERSION</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'1.7.5'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">AZURE_SUBSCRIPTION</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'MyServiceConnection'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">ENVIRONMENT</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'dev'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">stages</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Validate &amp; Lint"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> lint</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ubuntu-latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> UseTerraform@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">terraformVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(TF_VERSION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">script</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              terraform fmt -check -recursive</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              terraform init -backend=false</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              terraform validate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform fmt &amp; validate"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">script</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              tflint --recursive</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Run TFLint"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Plan"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ubuntu-latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> UseTerraform@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">terraformVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(TF_VERSION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> TerraformCLI@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Init"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'init'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">backendType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'azurerm'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">backendServiceArm</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(AZURE_SUBSCRIPTION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">ensureBackend</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">workingDirectory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'infra/env/$(ENVIRONMENT)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> TerraformCLI@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Plan"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'plan'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">environmentServiceName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(AZURE_SUBSCRIPTION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">workingDirectory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'infra/env/$(ENVIRONMENT)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">vars</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                environment=$(ENVIRONMENT)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">publish</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(System.DefaultWorkingDirectory)/infra/env/$(ENVIRONMENT)/tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">artifact</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apply</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Apply"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">condition</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> and(succeeded()</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> eq(variables</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'Build.SourceBranch'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 'refs/heads/main'))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">deployment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apply</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">environment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> aks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">$(ENVIRONMENT)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ubuntu-latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">strategy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">runOnce</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">deploy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> UseTerraform@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">terraformVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(TF_VERSION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">download</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> current</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token key atrule">artifact</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> TerraformCLI@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Apply"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'apply'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">environmentServiceName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(AZURE_SUBSCRIPTION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">workingDirectory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'infra/env/$(ENVIRONMENT)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">commandOptions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"tfplan"</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion-1">üìå Conclusion<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-conclusion-1" class="hash-link" aria-label="Direct link to üìå Conclusion" title="Direct link to üìå Conclusion" translate="no">‚Äã</a></h2>
<p>With a <strong>clearly encapsulated AKS module</strong> and a <strong>CI/CD pipeline in Azure DevOps</strong>, you get:</p>
<ul>
<li>Reproducible cluster deployments</li>
<li>Automated validation (fmt, validate, lint)</li>
<li>Plan review with artifacts</li>
<li>Manual or automated apply with service connection</li>
<li>Easy extensibility (drift detection, security scans)</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-production-ready-aks-module-terraform">üß© Production-ready AKS module (Terraform)<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-production-ready-aks-module-terraform" class="hash-link" aria-label="Direct link to üß© Production-ready AKS module (Terraform)" title="Direct link to üß© Production-ready AKS module (Terraform)" translate="no">‚Äã</a></h2>
<blockquote>
<p>Structure (as an example):</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">modules/aks/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ main.tf</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ variables.tf</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ outputs.tf</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îî‚îÄ README.md</span><br></span></code></pre></div></div>
</blockquote>
<p><strong><code>modules/aks/variables.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "location" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "resource_group_name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "kubernetes_version" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "tags" { type = map(string), default = {} }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "identity_type" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  description = "system | user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type        = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default     = "system"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  validation {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    condition     = contains(["system", "user"], var.identity_type)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    error_message = "identity_type must be 'system' or 'user'"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "user_assigned_identity_ids" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  description = "Only used when identity_type=user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type        = list(string)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default     = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "network_profile" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin           = string                    # azure | kubenet | cni_overlay</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr     = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr         = optional(string)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type    = optional(string, "managedNATGateway") # loadBalancer | userDefinedRouting | managedNATGateway</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_policy   = optional(string, null)   # azure | calico | null</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "private_cluster_enabled" { type = bool, default = false }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "api_server_authorized_ip_ranges" { type = list(string), default = [] }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "aad_admin_group_object_ids" { type = list(string), default = [] }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "enable_azure_rbac" { type = bool, default = true }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "oms_workspace_resource_id" { type = string, default = null }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "enable_azure_policy_addon" { type = bool, default = false }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "system_node_pool" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name               = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size            = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count          = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count          = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_disk_size_gb    = optional(number, 128)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku             = optional(string, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_labels        = optional(map(string), {})</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_taints        = optional(list(string), [])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    zones              = optional(list(string), null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "user_node_pools" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  description = "List of additional user pools"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = list(object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name               = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size            = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count          = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count          = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_disk_size_gb    = optional(number, 128)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku             = optional(string, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_labels        = optional(map(string), {})</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_taints        = optional(list(string), [])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    mode               = optional(string, "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    zones              = optional(list(string), null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<p><strong><code>modules/aks/main.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Note: Provider configuration (azurerm) is set outside the module.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">locals {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  identity_block = var.identity_type == "user" ? {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    type         = "UserAssigned"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    identity_ids = var.user_assigned_identity_ids</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  } : {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    type = "SystemAssigned"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_kubernetes_cluster" "this" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = var.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name = var.resource_group_name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_version  = var.kubernetes_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dns_prefix          = replace(var.name, ".", "-")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  identity {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    type         = local.identity_block.type</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    identity_ids = try(local.identity_block.identity_ids, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default_node_pool {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name                 = var.system_node_pool.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size              = var.system_node_pool.vm_size</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    orchestrator_version = var.kubernetes_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count            = var.system_node_pool.min_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count            = var.system_node_pool.max_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    enable_auto_scaling  = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku               = var.system_node_pool.os_sku</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_disk_size_gb      = var.system_node_pool.os_disk_size_gb</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_labels          = var.system_node_pool.node_labels</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_taints          = var.system_node_pool.node_taints</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    zones                = var.system_node_pool.zones</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    upgrade_settings {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      max_surge = "33%"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  network_profile {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_plugin    = var.network_profile.plugin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr      = var.network_profile.service_cidr</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip    = var.network_profile.dns_service_ip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_policy    = var.network_profile.network_policy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type     = var.network_profile.outbound_type</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr          = try(var.network_profile.pod_cidr, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  api_server_access_profile {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    authorized_ip_ranges = var.api_server_authorized_ip_ranges</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  azure_active_directory_role_based_access_control {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    enabled                        = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    azure_rbac_enabled             = var.enable_azure_rbac</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    admin_group_object_ids         = var.aad_admin_group_object_ids</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  # Add-ons</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dynamic "oms_agent" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    for_each = var.oms_workspace_resource_id == null ? [] : [1]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    content {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      log_analytics_workspace_id = var.oms_workspace_resource_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  azure_policy_enabled        = var.enable_azure_policy_addon</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  private_cluster_enabled     = var.private_cluster_enabled</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  sku_tier = "Paid" # Uptime SLA optional, anpassbar</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags = var.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Additional User Node Pools</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_kubernetes_cluster_node_pool" "user" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  for_each = { for p in var.user_node_pools : p.name =&gt; p }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_cluster_id = azurerm_kubernetes_cluster.this.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                  = each.value.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  vm_size               = each.value.vm_size</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  orchestrator_version  = var.kubernetes_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  mode                  = try(each.value.mode, "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  min_count             = each.value.min_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  max_count             = each.value.max_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  enable_auto_scaling   = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  os_disk_size_gb       = try(each.value.os_disk_size_gb, 128)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  os_sku                = try(each.value.os_sku, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  node_labels           = try(each.value.node_labels, {})</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  node_taints           = try(each.value.node_taints, [])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  zones                 = try(each.value.zones, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags = var.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<p><strong><code>modules/aks/outputs.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "id" { value = azurerm_kubernetes_cluster.this.id }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "kubelet_identity_principal_id" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  value = try(azurerm_kubernetes_cluster.this.kubelet_identity[0].object_id, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "principal_id" { # Cluster (control plane) MI bei SystemAssigned</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  value = try(azurerm_kubernetes_cluster.this.identity[0].principal_id, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "host" { value = azurerm_kubernetes_cluster.this.kube_config[0].host }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "name" { value = azurerm_kubernetes_cluster.this.name }</span><br></span></code></pre></div></div>
<p><strong><code>modules/aks/README.md</code></strong> (Short)</p>
<div class="language-md codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-md codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">Encapsulate inputs AKS details (RBAC, network, private cluster). Configure providers externally. Set role assignments (ACR pull, subnet/route table) externally.```</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token hr punctuation" style="color:rgb(248, 248, 242)">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token title important punctuation" style="color:rgb(248, 248, 242)">##</span><span class="token title important"> üîÅ Azure DevOps Pipeline (Terraform Plan/Apply, Multi‚ÄëEnv)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token blockquote punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"> Prerequisites</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token blockquote punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token blockquote punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"> </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">*</span><span class="token plain"> Azure DevOps </span><span class="token bold punctuation" style="color:rgb(248, 248, 242)">**</span><span class="token bold content">Service Connection</span><span class="token bold punctuation" style="color:rgb(248, 248, 242)">**</span><span class="token plain"> (ARM) with </span><span class="token bold punctuation" style="color:rgb(248, 248, 242)">**</span><span class="token bold content">Workload Identity/Federated Credentials</span><span class="token bold punctuation" style="color:rgb(248, 248, 242)">**</span><span class="token plain"> for Subscription/Resource Group.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token blockquote punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"> </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">*</span><span class="token plain"> Azure Storage backend for Terraform State (container + blob locking via lease).</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token blockquote punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"> </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">*</span><span class="token plain"> Optional: Variable groups for </span><span class="token code-snippet code keyword" style="color:rgb(189, 147, 249);font-style:italic">`ARM_*`</span><span class="token plain">/backend parameters.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token bold punctuation" style="color:rgb(248, 248, 242)">**</span><span class="token bold content code-snippet code keyword" style="color:rgb(189, 147, 249);font-style:italic">`azure-pipelines.yml`</span><span class="token bold punctuation" style="color:rgb(248, 248, 242)">**</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">```yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">trigger:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  branches:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    include: [ main ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">pr:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  branches:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    include: [ main, feature/* ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variables:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  TF_VERSION: '1.8.5'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  PROVIDER_AZURERM: '~&gt; 3.113'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token title important punctuation" style="color:rgb(248, 248, 242)">#</span><span class="token title important"> Backend (can be set via variable group)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  TF_BACKEND_RG: 'rg-tfstate'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  TF_BACKEND_SA: 'sttfstate1234'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  TF_BACKEND_CONTAINER: 'tfstate'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  TF_BACKEND_KEY: '$(Build.Repository.Name).$(System.StageName).tfstate'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">stages:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> stage: Validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  displayName: "Validate &amp; Security Checks"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  jobs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> job: validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pool: { vmImage: 'ubuntu-latest' }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    steps:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> checkout: self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> task: Bash@3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      displayName: "Install Terraform $(TF_VERSION)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      inputs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        targetType: 'inline'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        script: |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          curl -sLo tf.zip https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          sudo unzip -o tf.zip -d /usr/local/bin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform -version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> task: Bash@3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      displayName: "Terraform fmt &amp; init"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      env:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        ARM_USE_OIDC: true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      inputs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        targetType: 'inline'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        script: |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          cd infra/env/dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform fmt -check -recursive</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> task: Bash@3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      displayName: "tflint / tfsec"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      inputs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        targetType: 'inline'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        script: |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          tflint --version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          tflint -f compact || true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          curl -sL https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          tfsec . || true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> stage: Plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  displayName: "Plan (Dev)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dependsOn: Validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  jobs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> job: plan_dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    displayName: "terraform plan dev"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pool: { vmImage: 'ubuntu-latest' }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    steps:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> checkout: self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> task: AzureCLI@2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      displayName: "Terraform init+plan (OIDC)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      inputs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        azureSubscription: 'AZURE-SP-WI'   # Name of your service connection</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        scriptType: bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        scriptLocation: inlineScript</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        inlineScript: |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          set -e</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          cd infra/env/dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform workspace select dev || terraform workspace new dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform plan -var-file=variables.tfvars -out=tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> publish: infra/env/dev/tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      displayName: "Publish plan artifact"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      artifact: tfplan-dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> stage: Apply</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  displayName: "Apply (Dev)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dependsOn: Plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  jobs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> deployment: apply_dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    displayName: "terraform apply dev"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    environment: dev # optional: protect environments with approvals</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    strategy:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      runOnce:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        deploy:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          steps:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> checkout: self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> task: AzureCLI@2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            displayName: "Terraform init+apply"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            inputs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              azureSubscription: 'AZURE-SP-WI'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              scriptType: bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              scriptLocation: inlineScript</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              inlineScript: |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                set -e</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                cd infra/env/dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                terraform workspace select dev || terraform workspace new dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                terraform apply -auto-approve tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> stage: Plan_Prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  displayName: "Plan (Prod)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dependsOn: Apply</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  jobs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> job: plan_prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pool: { vmImage: 'ubuntu-latest' }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    steps:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> checkout: self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> task: AzureCLI@2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      displayName: "Plan prod"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      inputs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        azureSubscription: 'AZURE-SP-WI'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        scriptType: bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        scriptLocation: inlineScript</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        inlineScript: |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          set -e</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          cd infra/env/prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform workspace select prod || terraform workspace new prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          terraform plan -var-file=variables.tfvars -out=tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> publish: infra/env/prod/tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      artifact: tfplan-prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> stage: Apply_Prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  displayName: "Apply (Prod)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dependsOn: Plan_Prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  jobs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> deployment: apply_prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    displayName: "terraform apply prod"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    environment: prod # Enforce manual approval in ADO Environment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    strategy:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      runOnce:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        deploy:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          steps:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> checkout: self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token list punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> task: AzureCLI@2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            displayName: "Apply prod"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            inputs:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              azureSubscription: 'AZURE-SP-WI'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              scriptType: bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              scriptLocation: inlineScript</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              inlineScript: |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                set -e</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                cd infra/env/prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                terraform workspace select prod || terraform workspace new prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                terraform apply -auto-approve tfplan</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="notes--best-practices">Notes &amp; Best Practices<a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#notes--best-practices" class="hash-link" aria-label="Direct link to Notes &amp; Best Practices" title="Direct link to Notes &amp; Best Practices" translate="no">‚Äã</a></h3>
<ul>
<li><strong>OIDC/Federated Credentials:</strong> Configure Service Connection so that no secret is required (no service principal password in the repo).</li>
<li><strong>State per Stage:</strong> The key <code>$(System.StageName)</code> in the backend cleanly separates dev/prod.</li>
<li><strong>Security Scans:</strong> <code>tflint</code>/<code>tfsec</code> are <code>|| true</code> so that warnings do not hard break the build ‚Äì optionally enforce in prod.</li>
<li><strong>Approvals:</strong> Use Azure DevOps <strong>Environments</strong> for manual approvals between stages.</li>
<li><strong>Parallel Envs:</strong> For multiple envs, use <code>strategy: matrix</code> in Plan/Apply or define envs as separate stages.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-example-using-the-aks-module-in-infraenvdevmaintf">üîó Example: Using the AKS module in <code>infra/env/dev/main.tf</code><a href="https://bri-b-dev.github.io/en/blog/terraform-patterns-aks-azure#-example-using-the-aks-module-in-infraenvdevmaintf" class="hash-link" aria-label="Direct link to -example-using-the-aks-module-in-infraenvdevmaintf" title="Direct link to -example-using-the-aks-module-in-infraenvdevmaintf" translate="no">‚Äã</a></h2>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  required_version = "&gt;= 1.8.0"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  required_providers {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    azurerm = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      source  = "hashicorp/azurerm"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      version = "~&gt; 3.113"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  backend "azurerm" {}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">provider "azurerm" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  features {}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  use_oidc = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">locals {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    env   = "dev"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    owner = "platform"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_resource_group" "rg" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name     = "rg-aks-dev"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags     = local.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">module "aks" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  source              = "../../modules/aks"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = "aks-dev-core"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name = azurerm_resource_group.rg.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_version  = var.k8s_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags                = local.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  identity_type = "system"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  network_profile = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin         = "azure"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr   = "10.50.0.0/16"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip = "10.50.0.10"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type  = "managedNATGateway"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_policy = "azure"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  aad_admin_group_object_ids = var.aad_admin_groups</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  enable_azure_rbac          = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  private_cluster_enabled           = false</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  api_server_authorized_ip_ranges   = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  system_node_pool = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name      = "sys"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size   = "Standard_D4s_v5"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count = 1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count = 2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_labels = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "kubernetes.azure.com/mode" = "system"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  user_node_pools = [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      name      = "user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      vm_size   = "Standard_D8s_v5"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      min_count = 2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      max_count = 6</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      node_labels = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        "kubernetes.azure.com/mode" = "user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Example: ACR + Role Assignment (outside the module)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_container_registry" "acr" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = "acrdevexample1234"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name = azurerm_resource_group.rg.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  sku                 = "Standard"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  admin_enabled       = false</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags                = local.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_role_assignment" "kubelet_acr_pull" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  scope                = azurerm_container_registry.acr.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  role_definition_name = "AcrPull"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  principal_id         = module.aks.kubelet_identity_principal_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>Brigitte B√∂hm</name>
            <uri>https://www.linkedin.com/in/brigitte-boehm-34b7a025</uri>
        </author>
        <category label="Terraform" term="Terraform"/>
        <category label="AKS" term="AKS"/>
        <category label="Azure" term="Azure"/>
        <category label="RBAC" term="RBAC"/>
        <category label="Network Policy" term="Network Policy"/>
        <category label="Modules" term="Modules"/>
        <category label="CI/CD" term="CI/CD"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[AKS Node Selection: Physical Pools vs. Virtual Nodes]]></title>
        <id>https://bri-b-dev.github.io/en/blog/aks-node-selection</id>
        <link href="https://bri-b-dev.github.io/en/blog/aks-node-selection"/>
        <updated>2025-01-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Strategies for running workloads in AKS preferentially on physical user nodes ‚Äì with automatic fallback to virtual nodes.]]></summary>
        <content type="html"><![CDATA[<p>In many projects, the <strong>cost and resource model</strong> is crucial:</p>
<ul>
<li>Physical AKS node pools (<code>user nodes</code>) are cheaper and optimized for continuous workloads.</li>
<li><strong>Virtual nodes</strong> (based on Azure Container Instances) are ideal for <strong>burst scenarios</strong>‚Äîwhen more capacity is needed at short notice.</li>
</ul>
<p>üëâ Goal: Workloads should <strong>always use the physical nodes first</strong>, but automatically switch to virtual nodes when there are no more resources available there.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-basics-node-pools-in-aks">‚öôÔ∏è Basics: Node pools in AKS<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#%EF%B8%8F-basics-node-pools-in-aks" class="hash-link" aria-label="Direct link to ‚öôÔ∏è Basics: Node pools in AKS" title="Direct link to ‚öôÔ∏è Basics: Node pools in AKS" translate="no">‚Äã</a></h2>
<ul>
<li><strong>System Pool</strong>: internal AKS services</li>
<li><strong>User Pool</strong>: physical VM-based nodes (e.g., VMSS with Standard_D4s_v5)</li>
<li><strong>Virtual Node Pool</strong>: based on ACI, highly scalable, pay-per-use, no VM instance costs</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-challenge">üöß Challenge<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#-challenge" class="hash-link" aria-label="Direct link to üöß Challenge" title="Direct link to üöß Challenge" translate="no">‚Äã</a></h2>
<p>By default, Kubernetes distributes pods evenly ‚Äì without ‚Äúpreference."<br>
<!-- -->If you want to use virtual nodes <strong>only as a stopgap measure</strong>, you need a clean scheduling strategy.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-strategies-for-node-selection">‚úÖ Strategies for Node Selection<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#-strategies-for-node-selection" class="hash-link" aria-label="Direct link to ‚úÖ Strategies for Node Selection" title="Direct link to ‚úÖ Strategies for Node Selection" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-nodeselector--taintstolerations">1. NodeSelector + Taints/Tolerations<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#1-nodeselector--taintstolerations" class="hash-link" aria-label="Direct link to 1. NodeSelector + Taints/Tolerations" title="Direct link to 1. NodeSelector + Taints/Tolerations" translate="no">‚Äã</a></h3>
<ul>
<li>User nodes: no special taints ‚Üí pods run here by default.</li>
<li>Virtual nodes: tainted (<code>virtual-kubelet.io/provider=azure:NoSchedule</code>).</li>
<li>Only pods that set <strong>tolerations</strong> are allowed to fall back to virtual nodes.</li>
</ul>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">tolerations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ‚Äúvirtual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">kubelet.io/provider"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ‚ÄúEqual"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ‚Äúazure"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">effect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ‚ÄúNoSchedule"</span><br></span></code></pre></div></div>
<p>‚û°Ô∏è Advantage: full control, default = user nodes, virtual nodes = fallback.</p>
<hr>
<ol start="2">
<li>Affinity &amp; Preferred Scheduling</li>
</ol>
<p><code>nodeAffinity</code> can be used to express a <strong>preference</strong>:</p>
<ul>
<li>‚ÄúPrefer user nodes" (preferred)</li>
<li>‚ÄúAllow virtual nodes" (soft)</li>
</ul>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">affinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">nodeAffinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">weight</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">preference</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">matchExpressions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kubernetes.azure.com/mode</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> In</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> user</span><br></span></code></pre></div></div>
<p>üëâ Only when there is no more space there will pods be distributed to other nodes (including virtual nodes).</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-workload-specific-control">3. Workload-specific control<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#3-workload-specific-control" class="hash-link" aria-label="Direct link to 3. Workload-specific control" title="Direct link to 3. Workload-specific control" translate="no">‚Äã</a></h3>
<ul>
<li><strong>Batch/burst jobs</strong>: Set <code>tolerations</code> so that they can use virtual nodes.</li>
<li><strong>Persistent services</strong>: No taint/toleration ‚Üí remain strictly on physical nodes.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-visualization-scheduling-strategy">üìä Visualization: Scheduling Strategy<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#-visualization-scheduling-strategy" class="hash-link" aria-label="Direct link to üìä Visualization: Scheduling Strategy" title="Direct link to üìä Visualization: Scheduling Strategy" translate="no">‚Äã</a></h2>
<!-- -->
<ul>
<li><strong>Pod A (Deployment)</strong>: prefers user nodes, but falls back to virtual nodes when resources are scarce.</li>
<li><strong>Pod B (Job)</strong>: has explicit tolerance ‚Üí may run directly on virtual nodes.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-best-practices">üìå Best Practices<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#-best-practices" class="hash-link" aria-label="Direct link to üìå Best Practices" title="Direct link to üìå Best Practices" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Monitoring</strong>: Track exactly how many pods are running on virtual nodes (cost control).</li>
<li><strong>SLA</strong>: Virtual nodes have different limits (no DaemonSet support, limited features).</li>
<li><strong>Workload design</strong>: Short jobs and burst-like loads ‚Üí virtual nodes; critical systems ‚Üí user nodes.</li>
<li><strong>Cost model</strong>: Physical pools for base load, Virtual Nodes only for peaks.</li>
</ul>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Avoid cost traps</div><div class="admonitionContent_BuS1"><p>Set limits and autoscaling correctly, otherwise too many pods will end up permanently on expensive Virtual Nodes!</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion">üìå Conclusion<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#-conclusion" class="hash-link" aria-label="Direct link to üìå Conclusion" title="Direct link to üìå Conclusion" translate="no">‚Äã</a></h2>
<p>With <strong>Affinity, Taints &amp; Tolerations</strong>, two-stage scheduling can be implemented:</p>
<ul>
<li>Permanent workloads run reliably and cost-effectively on physical user nodes.</li>
<li>Peak loads are automatically directed to virtual nodes ‚Äì flexibly, scalably, and without overprovisioning.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-example-manifests-deployment--batch-job">üì¶ Example manifests (deployment &amp; batch job)<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#-example-manifests-deployment--batch-job" class="hash-link" aria-label="Direct link to üì¶ Example manifests (deployment &amp; batch job)" title="Direct link to üì¶ Example manifests (deployment &amp; batch job)" translate="no">‚Äã</a></h2>
<blockquote>
<p>Assumptions:</p>
<ul>
<li><strong>User nodes</strong> carry the label: <code>kubernetes.azure.com/mode=user</code></li>
<li><strong>Virtual nodes</strong> are tainted with <code>virtual-kubelet.io/provider=azure:NoSchedule</code></li>
<li>Cluster has at least one Linux virtual node (ACI)</li>
</ul>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-deployment-prefers-user-nodes-fallback-to-virtual-node">1) Deployment: prefers user nodes, fallback to virtual node<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#1-deployment-prefers-user-nodes-fallback-to-virtual-node" class="hash-link" aria-label="Direct link to 1) Deployment: prefers user nodes, fallback to virtual node" title="Direct link to 1) Deployment: prefers user nodes, fallback to virtual node" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">labels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">replicas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">selector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">labels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∂ Prefer physical user nodes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">affinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">nodeAffinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">weight</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">preference</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token key atrule">matchExpressions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kubernetes.azure.com/mode</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> In</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"user"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∑ Allow fallback to virtual nodes (tolerate taint)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">tolerations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"virtual-kubelet.io/provider"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Equal"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"azure"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">effect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"NoSchedule"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∏ Optional: Distribute pods across user nodes (cost &amp; resilience)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">topologySpreadConstraints</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">maxSkew</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">topologyKey</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kubernetes.io/hostname</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">whenUnsatisfiable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ScheduleAnyway</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">labelSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">containers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ghcr.io/example/web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">1.2.3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">ports</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">containerPort</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">resources</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">requests</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">cpu</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"250m"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">memory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"256Mi"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">limits</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">cpu</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">memory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"512Mi"</span><br></span></code></pre></div></div>
<blockquote>
<p>Result: As long as resources are available on user nodes, all replicas are placed there. Only when resources are scarce can pods also be scheduled on virtual nodes thanks to <strong>tolerance</strong>.</p>
</blockquote>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-batchjob-prefers-virtual-nodes-to-conserve-user-pool">2) BatchJob: prefers virtual nodes to conserve user pool<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#2-batchjob-prefers-virtual-nodes-to-conserve-user-pool" class="hash-link" aria-label="Direct link to 2) BatchJob: prefers virtual nodes to conserve user pool" title="Direct link to 2) BatchJob: prefers virtual nodes to conserve user pool" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> batch/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Job</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> image</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">transcode</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">completions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">parallelism</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">backoffLimit</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∂ Prefer Virtual Node (soft), but allow users as backup</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">affinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">nodeAffinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">weight</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">preference</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token key atrule">matchExpressions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kubernetes.io/role</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> In</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"virtual-node"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∑ Tolerance for the virtual node taint (required for scheduling)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">tolerations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"virtual-kubelet.io/provider"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Equal"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"azure"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">effect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"NoSchedule"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">restartPolicy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Never</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">containers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> worker</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ghcr.io/example/transcoder</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">2.0.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"--input"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"$(INPUT)"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"--output"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"$(OUTPUT)"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> INPUT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/data/in"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> OUTPUT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/data/out"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">resources</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">requests</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">cpu</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">memory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"1Gi"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">limits</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">cpu</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"2"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">memory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"2Gi"</span><br></span></code></pre></div></div>
<blockquote>
<p>Note: The key <code>kubernetes.io/role=virtual-node</code> is <strong>an example label</strong>. In many clusters, a suitable label already exists on virtual nodes (e.g., <code>type=virtual-kubelet</code> or <code>kubernetes.azure.com/virtual-node=true</code>). Adjust the <strong>match expression</strong> to your actual node labels.</p>
</blockquote>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-variant-strict-separation-via-nodeselector">3) Variant: Strict separation via NodeSelector<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#3-variant-strict-separation-via-nodeselector" class="hash-link" aria-label="Direct link to 3) Variant: Strict separation via NodeSelector" title="Direct link to 3) Variant: Strict separation via NodeSelector" translate="no">‚Äã</a></h3>
<p>If certain workloads should <strong>never</strong> run on virtual nodes, use a hard <code>nodeSelector</code> on user nodes <strong>without</strong> tolerations:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">nodeSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">kubernetes.azure.com/mode</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ‚Äúuser"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># No toleration ‚Üí no scheduling on virtual nodes possible</span><br></span></code></pre></div></div>
<p>And vice versa (virtual node only):</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">tolerations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"virtual-kubelet.io/provider"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Equal"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"azure"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">effect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"NoSchedule"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">nodeSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">kubernetes.azure.com/virtual-node</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"true"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample label, customize it for your needs</span><br></span></code></pre></div></div>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-horizontal-pod-autoscaler-hpa-as-a-burst-trigger">4) Horizontal Pod Autoscaler (HPA) as a burst trigger<a href="https://bri-b-dev.github.io/en/blog/aks-node-selection#4-horizontal-pod-autoscaler-hpa-as-a-burst-trigger" class="hash-link" aria-label="Direct link to 4) Horizontal Pod Autoscaler (HPA) as a burst trigger" title="Direct link to 4) Horizontal Pod Autoscaler (HPA) as a burst trigger" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> autoscaling/v2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> HorizontalPodAutoscaler</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">scaleTargetRef</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">minReplicas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">maxReplicas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">30</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">metrics</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Resource</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">resource</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> cpu</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">target</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Utilization</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">averageUtilization</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">70</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>Brigitte B√∂hm</name>
            <uri>https://www.linkedin.com/in/brigitte-boehm-34b7a025</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="AKS" term="AKS"/>
        <category label="Azure" term="Azure"/>
        <category label="Nodepool" term="Nodepool"/>
        <category label="Virtual Node" term="Virtual Node"/>
        <category label="Scheduling" term="Scheduling"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Streaming File Uploads to Azure Blob Storage with Spring Boot]]></title>
        <id>https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure</id>
        <link href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure"/>
        <updated>2025-01-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Memory-efficient processing of large uploads directly in Azure Storage‚Äîwithout temporary storage in RAM.]]></summary>
        <content type="html"><![CDATA[<p>Anyone who wants to upload large files (several gigabytes) via a web application quickly reaches their limits:</p>
<ul>
<li>Classic multipart processing loads everything into memory or onto the disk.</li>
<li>Uploads take a long time and block threads.</li>
<li>Upload errors lead to inconsistent data states.</li>
</ul>
<p>With a <strong>streaming-based approach</strong>, files can be written directly to Azure Blob Storage during upload ‚Äì without ever being cached in RAM or on disk.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-setup">‚öôÔ∏è Setup<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#%EF%B8%8F-setup" class="hash-link" aria-label="Direct link to ‚öôÔ∏è Setup" title="Direct link to ‚öôÔ∏è Setup" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Spring Boot + Kotlin</strong> as a Basis</li>
<li><a href="https://commons.apache.org/proper/commons-fileupload/" target="_blank" rel="noopener noreferrer"><code>commons-fileupload2-core</code></a> for streaming multipart parsing</li>
<li><strong>Azure Blob Storage SDK</strong> for writing streams to blobs</li>
<li><strong>SAS tokens</strong> for scoped &amp; time-limited access</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="streaming-multipart-upload">Streaming Multipart Upload<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#streaming-multipart-upload" class="hash-link" aria-label="Direct link to Streaming Multipart Upload" title="Direct link to Streaming Multipart Upload" translate="no">‚Äã</a></h3>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> iterator </span><span class="token operator">=</span><span class="token plain"> FileUploadStreaming</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getItemIterator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">iterator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">hasNext</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> item </span><span class="token operator">=</span><span class="token plain"> iterator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">next</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">isFormField</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> blobClient </span><span class="token operator">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        blobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlockBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">inputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>üëâ No file is stored on the disk or in the working memory ‚Äì the InputStream is passed directly to Azure.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-extension-determining-mime-type-with-tika">üîç Extension: Determining MIME type with Tika<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#-extension-determining-mime-type-with-tika" class="hash-link" aria-label="Direct link to üîç Extension: Determining MIME type with Tika" title="Direct link to üîç Extension: Determining MIME type with Tika" translate="no">‚Äã</a></h2>
<p>Often, the <code>Content-Type</code> provided by the client is not sufficient. To determine the <strong>actual MIME type</strong>, a <strong>Custom InputStream</strong> can be used, which caches the first bytes so that <a href="https://tika.apache.org/" target="_blank" rel="noopener noreferrer">Apache Tika</a> can perform recognition:</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">TikaInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> source</span><span class="token operator">:</span><span class="token plain"> InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> buffer </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ByteArrayOutputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">var</span><span class="token plain"> replay</span><span class="token operator">:</span><span class="token plain"> ByteArrayInputStream</span><span class="token operator">?</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">var</span><span class="token plain"> probed </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> replayStream </span><span class="token operator">=</span><span class="token plain"> replay</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">replayStream </span><span class="token operator">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            replayStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> b </span><span class="token operator">=</span><span class="token plain"> source</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token plain">probed </span><span class="token operator">&amp;&amp;</span><span class="token plain"> b </span><span class="token operator">!=</span><span class="token plain"> </span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> buffer</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">write</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            b</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">detectMimeType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> String </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token plain">probed</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            probed </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> bytes </span><span class="token operator">=</span><span class="token plain"> buffer</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            replay </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ByteArrayInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">Tika</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">detect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/octet-stream"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>‚ö° Advantage: MIME detection happens <strong>in the stream</strong> without having to read the entire file.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-on-the-fly-compression">üì¶ On-the-fly compression<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#-on-the-fly-compression" class="hash-link" aria-label="Direct link to üì¶ On-the-fly compression" title="Direct link to üì¶ On-the-fly compression" translate="no">‚Äã</a></h2>
<p>For certain data types, <strong>on-the-fly compression</strong> is worthwhile. This involves packing the upload stream directly into a <code>GZIPOutputStream</code> before it is transferred to Azure:</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> blobClient </span><span class="token operator">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">‚Äú$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">gz"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">blobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlockBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">GZIPOutputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">inputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// unknown if necessary, then use -1 and chunked upload</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<ul>
<li>Saves a lot of storage space and bandwidth.</li>
<li>Should be <strong>optional</strong> (e.g., depending on the MIME type from Tika).</li>
<li>Caution with binary files (videos, images): compression usually does not offer any advantages here.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-stumbling-blocks">üöß Stumbling blocks<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#-stumbling-blocks" class="hash-link" aria-label="Direct link to üöß Stumbling blocks" title="Direct link to üöß Stumbling blocks" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Multipart parsing:</strong> Streams must be closed reliably.</li>
<li><strong>Content length:</strong> Not always delivered by the client ‚Üí possibly use chunked upload.</li>
<li><strong>Error handling:</strong> If the upload is interrupted, metadata may also need to be rolled back.</li>
<li><strong>Tika + compression:</strong> Perform recognition first, then compress if necessary.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-best-practices">‚úÖ Best practices<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#-best-practices" class="hash-link" aria-label="Direct link to ‚úÖ Best practices" title="Direct link to ‚úÖ Best practices" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Backpressure:</strong> Never buffer uploads, but stream them through.</li>
<li><strong>Separation of metadata &amp; storage</strong>: separate services for separate responsibilities.</li>
<li><strong>SAS tokens</strong>: generate with prefix scopes and short lifetime.</li>
<li><strong>Combination of Tika + compression</strong>: Only compress if it really makes sense.</li>
</ul>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Practical benefits</div><div class="admonitionContent_BuS1"><p>We use this technique in production systems to process terabyte-scale uploads in a high-performance, secure, and cost-optimized manner.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion">üìå Conclusion<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#-conclusion" class="hash-link" aria-label="Direct link to üìå Conclusion" title="Direct link to üìå Conclusion" translate="no">‚Äã</a></h2>
<p>Streaming uploads are <strong>feasible and production-ready</strong> in Spring Boot ‚Äì and even more flexible thanks to MIME detection and optional on-the-fly compression.
The result: <strong>lower infrastructure costs, better performance, and greater robustness</strong>.</p>
<hr>
<blockquote>
<p>Complete, executable example: Streaming multipart with <code>commons-fileupload2-core</code>, MIME detection via Apache Tika, optional on-the-fly compression (GZIP), and upload directly to Azure Blob Storage via SAS ‚Äì <strong>without</strong> RAM/disk buffers.</p>
</blockquote>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="project-setup-gradle-kotlin-dsl">Project-Setup (Gradle Kotlin DSL)<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#project-setup-gradle-kotlin-dsl" class="hash-link" aria-label="Direct link to Project-Setup (Gradle Kotlin DSL)" title="Direct link to Project-Setup (Gradle Kotlin DSL)" translate="no">‚Äã</a></h2>
<p><strong><code>build.gradle.kts</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">plugins </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.springframework.boot"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"3.3.0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"io.spring.dependency-management"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.1.5"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"jvm"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.9.24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"plugin.spring"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.9.24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">group </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.example"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">version </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"0.0.1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">sourceCompatibility </span><span class="token operator">=</span><span class="token plain"> JavaVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">VERSION_17</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">repositories </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">mavenCentral</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dependencies </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.springframework.boot:spring-boot-starter-web"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Azure Blob Storage SDK v12</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.azure:azure-storage-blob:12.26.0"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Streaming Multipart Parsing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.apache.commons:commons-fileupload2-core:2.0.0-M1"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Apache Tika for MIME-Erkennung</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.apache.tika:tika-core:2.9.2"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Jackson / Kotlin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.fasterxml.jackson.module:jackson-module-kotlin"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"reflect"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">testImplementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.springframework.boot:spring-boot-starter-test"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">tasks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">test</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useJUnitPlatform</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<blockquote>
<p><strong>Note:</strong> Update versions to the latest version if necessary.</p>
</blockquote>
<p><strong><code>src/main/resources/application.yaml</code></strong></p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">server</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">tomcat</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">max-swallow-size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">-1</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># prevents termination with large streams</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">max-http-form-post-size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">-1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)"># Fully qualified SAS URL of the container, e.g.:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)"># https://&lt;account&gt;.blob.core.windows.net/&lt;container&gt;?sv=...&amp;sig=...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">containerSasUrl</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">AZURE_CONTAINER_SAS_URL</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">compression</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">enabled</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># global switch, can be overridden per request</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="configuration-azure-blob-container-client">Configuration: Azure Blob Container Client<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#configuration-azure-blob-container-client" class="hash-link" aria-label="Direct link to Configuration: Azure Blob Container Client" title="Direct link to Configuration: Azure Blob Container Client" translate="no">‚Äã</a></h2>
<p><strong><code>src/main/kotlin/com/example/upload/AzureStorageConfig.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BlobContainerClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BlobContainerClientBuilder</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">boot</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">context</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">ConfigurationProperties</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">context</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Bean</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">context</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Configuration</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@Configuration</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> AzureStorageConfig </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@Bean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@ConfigurationProperties</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">prefix </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"azure.storage"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">azureStorageProps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">AzureStorageProps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@Bean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">blobContainerClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">props</span><span class="token operator">:</span><span class="token plain"> AzureStorageProps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> BlobContainerClient </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token function" style="color:rgb(80, 250, 123)">BlobContainerClientBuilder</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">endpoint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">props</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">containerSasUrl</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">buildClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> AzureStorageProps </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">/** Full container SAS URL including token */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">lateinit</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">var</span><span class="token plain"> containerSasUrl</span><span class="token operator">:</span><span class="token plain"> String</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="utility-peekableinputstream--mime-detection-tika">Utility: PeekableInputStream + MIME detection (Tika)<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#utility-peekableinputstream--mime-detection-tika" class="hash-link" aria-label="Direct link to Utility: PeekableInputStream + MIME detection (Tika)" title="Direct link to Utility: PeekableInputStream + MIME detection (Tika)" translate="no">‚Äã</a></h2>
<p><strong><code>src/main/kotlin/com/example/upload/io/PeekableInputStream.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BufferedInputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">InputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * Wraps an InputStream, allows peek via mark/reset without reading the entire stream.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">PeekableInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">source</span><span class="token operator">:</span><span class="token plain"> InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> peekBufferSize</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">8192</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> inBuf </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">source</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">markSupported</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> source </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">BufferedInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">source</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> peekBufferSize</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b</span><span class="token operator">:</span><span class="token plain"> ByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> off</span><span class="token operator">:</span><span class="token plain"> Int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> len</span><span class="token operator">:</span><span class="token plain"> Int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> off</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> len</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">close</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">close</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">T</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">peek</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekLen</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> peekBufferSize</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> block</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">-&gt;</span><span class="token plain"> T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> T </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">mark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekLen</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> buf </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekLen</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> n </span><span class="token operator">=</span><span class="token plain"> inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">buf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">reset</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> slice </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">n </span><span class="token operator">&lt;=</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> buf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">copyOf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">n</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">block</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">slice</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p><strong><code>src/main/kotlin/com/example/upload/mime/MimeDetector.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">mime</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PeekableInputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">tika</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Tika</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">object</span><span class="token plain"> MimeDetector </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> tika </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">Tika</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">detect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekable</span><span class="token operator">:</span><span class="token plain"> PeekableInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> fallback</span><span class="token operator">:</span><span class="token plain"> String </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/octet-stream"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> String </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        peekable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">peek</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> bytes </span><span class="token operator">-&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> detected </span><span class="token operator">=</span><span class="token plain"> runCatching </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> tika</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">detect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getOrNull</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            detected </span><span class="token operator">?:</span><span class="token plain"> fallback</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="service-streaming-upload-with-optional-on-the-fly-gzip-compression">Service: Streaming upload with optional on-the-fly GZIP compression<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#service-streaming-upload-with-optional-on-the-fly-gzip-compression" class="hash-link" aria-label="Direct link to Service: Streaming upload with optional on-the-fly GZIP compression" title="Direct link to Service: Streaming upload with optional on-the-fly GZIP compression" translate="no">‚Äã</a></h2>
<p><strong><code>src/main/kotlin/com/example/upload/UploadService.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BlobContainerClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">specialized</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BlockBlobClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PeekableInputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">mime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">MimeDetector</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">FileItemInputIterator</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">FileUpload</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">FileUploadException</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RequestContext</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">stereotype</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Service</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">InputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">util</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">zip</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">GZIPOutputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@Service</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">UploadService</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> container</span><span class="token operator">:</span><span class="token plain"> BlobContainerClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">data</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">UploadResult</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> files</span><span class="token operator">:</span><span class="token plain"> List</span><span class="token operator">&lt;</span><span class="token plain">FileInfo</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">data</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">FileInfo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> fieldName</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> filename</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> size</span><span class="token operator">:</span><span class="token plain"> Long</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> mimeType</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> compressed</span><span class="token operator">:</span><span class="token plain"> Boolean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> blobName</span><span class="token operator">:</span><span class="token plain"> String</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * Stream multipart files directly to Azure. No intermediate buffers/temp files.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * @param request Spring/Servlet request adapter for FileUpload2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * @param forceCompression Optional override (header/param)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">handleStreamingUpload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">request</span><span class="token operator">:</span><span class="token plain"> RequestContext</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> forceCompression</span><span class="token operator">:</span><span class="token plain"> Boolean</span><span class="token operator">?</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> UploadResult </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> iter</span><span class="token operator">:</span><span class="token plain"> FileItemInputIterator </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">FileUpload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getItemIterator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> uploaded </span><span class="token operator">=</span><span class="token plain"> mutableListOf</span><span class="token operator">&lt;</span><span class="token plain">FileInfo</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">iter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">hasNext</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> item </span><span class="token operator">=</span><span class="token plain"> iter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">next</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">isFormField</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">continue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> originalName </span><span class="token operator">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">name </span><span class="token operator">?:</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"upload.bin"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> field </span><span class="token operator">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fieldName </span><span class="token operator">?:</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"file"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> size </span><span class="token operator">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">headers</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getHeader</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Content-Length"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toLongOrNull</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token comment" style="color:rgb(98, 114, 164)">// Make input stream peek-capable</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> peekable </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">PeekableInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">inputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> mime </span><span class="token operator">=</span><span class="token plain"> MimeDetector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">detect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> shouldCompress </span><span class="token operator">=</span><span class="token plain"> forceCompression</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token operator">?:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">shouldCompressMime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">mime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> compressed</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">shouldCompress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> nameGz </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"</span><span class="token string-literal singleline interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">$</span><span class="token string-literal singleline interpolation expression">originalName</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">.gz"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token function" style="color:rgb(80, 250, 123)">uploadStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> nameGz</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> compress </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    nameGz </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token function" style="color:rgb(80, 250, 123)">uploadStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> originalName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> compress </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    originalName </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                uploaded </span><span class="token operator">+=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">FileInfo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    fieldName </span><span class="token operator">=</span><span class="token plain"> field</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    filename </span><span class="token operator">=</span><span class="token plain"> originalName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    size </span><span class="token operator">=</span><span class="token plain"> size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    mimeType </span><span class="token operator">=</span><span class="token plain"> mime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    compressed </span><span class="token operator">=</span><span class="token plain"> compressed</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    blobName </span><span class="token operator">=</span><span class="token plain"> blobName</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">UploadResult</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">uploaded</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">e</span><span class="token operator">:</span><span class="token plain"> FileUploadException</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">throw</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">RuntimeException</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Multipart parsing failed"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">shouldCompressMime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">mime</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Boolean </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// Heuristics: textual = compress</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">mime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">startsWith</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"text/"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> mime </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">setOf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/json"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/xml"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/x-ndjson"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"text/csv"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/csv"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">uploadStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">input</span><span class="token operator">:</span><span class="token plain"> InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> blobName</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> compress</span><span class="token operator">:</span><span class="token plain"> Boolean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> client</span><span class="token operator">:</span><span class="token plain"> BlockBlobClient </span><span class="token operator">=</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blockBlobClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// For unknown length: write via OutputStream (no length required)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        client</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobOutputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">use</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> blobOut </span><span class="token operator">-&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">compress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token function" style="color:rgb(80, 250, 123)">GZIPOutputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobOut</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">use</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> gz </span><span class="token operator">-&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    input</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">copyTo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">gz</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> DEFAULT_BUFFER</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token comment" style="color:rgb(98, 114, 164)">// GZIPOutputStream .close() writes Footer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                input</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">copyTo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobOut</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> DEFAULT_BUFFER</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">companion</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">object</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> DEFAULT_BUFFER </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">1024</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number">1024</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<blockquote>
<p>We use <strong><code>BlockBlobClient.getBlobOutputStream(overwrite = true)</code></strong> so that no content length is required. This keeps the upload completely streaming-based.</p>
</blockquote>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="controller-minimal-api-pass-through-servlet-request">Controller: Minimal API (pass through servlet request)<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#controller-minimal-api-pass-through-servlet-request" class="hash-link" aria-label="Direct link to Controller: Minimal API (pass through servlet request)" title="Direct link to Controller: Minimal API (pass through servlet request)" translate="no">‚Äã</a></h2>
<p><strong><code>src/main/kotlin/com/example/upload/UploadController.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RequestContext</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">http</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">MediaType</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PostMapping</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RequestHeader</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RequestMapping</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RestController</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> jakarta</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">servlet</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">http</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">HttpServletRequest</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RestController</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RequestMapping</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"/api"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">UploadController</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> service</span><span class="token operator">:</span><span class="token plain"> UploadService</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@PostMapping</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"/upload"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> consumes </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">MediaType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">MULTIPART_FORM_DATA_VALUE</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        request</span><span class="token operator">:</span><span class="token plain"> HttpServletRequest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RequestHeader</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">name </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"x-compress"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> required </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> compressHeader</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token operator">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> UploadService</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">UploadResult</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> forceCompression</span><span class="token operator">:</span><span class="token plain"> Boolean</span><span class="token operator">?</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> compressHeader</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> it</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">equals</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"true"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> ignoreCase </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> ctx </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">object</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> RequestContext </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getContentType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> String </span><span class="token operator">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">contentType</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getContentLength</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">contentLength</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getCharacterEncoding</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token operator">?</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">characterEncoding</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">inputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> service</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">handleStreamingUpload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> forceCompression</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="error-handling--optional-rollback-example">Error handling &amp; (optional) rollback example<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#error-handling--optional-rollback-example" class="hash-link" aria-label="Direct link to Error handling &amp; (optional) rollback example" title="Direct link to Error handling &amp; (optional) rollback example" translate="no">‚Äã</a></h2>
<p><strong>Pattern:</strong> Manage metadata and blobs separately. Write the blob first, then create the metadata ‚Äì or vice versa, with a <strong>compensating action</strong>.</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// 1) Blob/Upload</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> result </span><span class="token operator">=</span><span class="token plain"> service</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">handleStreamingUpload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// 2) Send metadata to backend</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    metadataClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">createFor</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">files</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> result</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ex</span><span class="token operator">:</span><span class="token plain"> Exception</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Rollback strategy: delete any metadata that may have been created</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    runCatching </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> metadataClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">rollback</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">throw</span><span class="token plain"> ex</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="test-with-curl">Test with <code>curl</code><a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#test-with-curl" class="hash-link" aria-label="Direct link to test-with-curl" title="Direct link to test-with-curl" translate="no">‚Äã</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-X</span><span class="token plain"> POST </span><span class="token string" style="color:rgb(255, 121, 198)">"http://localhost:8080/api/upload"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-H</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"x-compress: true"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-F</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"file=@./sample.csv"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-H</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Expect:"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># verhindert 100-continue Verz√∂gerung</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="security--operational-aspects-short-checklist">Security &amp; operational aspects (short checklist)<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#security--operational-aspects-short-checklist" class="hash-link" aria-label="Direct link to Security &amp; operational aspects (short checklist)" title="Direct link to Security &amp; operational aspects (short checklist)" translate="no">‚Äã</a></h2>
<ul>
<li><strong>SAS tokens</strong>: prefix-scoped (target path only), short lifetime, only necessary permissions (manage write/create/delete separately).</li>
<li><strong>Backpressure</strong>: no buffers, no temporary files; Tomcat limits (see <code>application.yaml</code>).</li>
<li><strong>Limits</strong>: Set server and proxy timeouts (AGIC/APIM) high enough.</li>
<li><strong>Observability</strong>: Log upload duration, bytes, client IP, MIME, compression flag (without PII). Traces for error paths.</li>
<li><strong>Validation</strong>: Whitelist of permitted MIME types, max file size on the server side (cancel early), virus scan as needed.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="faq">FAQ<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#faq" class="hash-link" aria-label="Direct link to FAQ" title="Direct link to FAQ" translate="no">‚Äã</a></h2>
<p><strong>How do I determine the blob content type/encoding?</strong>
If not compressed: set <code>Content-Type</code> via blob HTTP header/metadata. For GZIP: set <code>Content-Encoding: gzip</code>, optionally save original MIME as user metadata.</p>
<p><strong>Example:</strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> block </span><span class="token operator">=</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blockBlobClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> headers </span><span class="token operator">=</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">models</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">BlobHttpHeaders</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">setContentType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/json"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">setContentEncoding</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"gzip"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">block</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">setHttpHeaders</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">headers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre></div></div>
<blockquote>
<p><code>setHttpHeaders</code> can be set after the upload (separate call) ‚Äì or you can use <code>beginUpload</code>/<code>commitBlockList</code> with options.</p>
</blockquote>
<p><strong>How do I prevent RAM spikes?</strong>
Keep buffers small (1‚Äì4 MB), <code>copyTo</code> buffer constant. No <code>ByteArrayOutputStream</code> accumulation.</p>
<p><strong>Can I parallelize?</strong>
For pure streaming endpoints: rather no (no length). For large known files, <code>ParallelTransferOptions</code> can be useful for <code>upload(InputStream, length)</code>.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="end-to-end-sequence-simplified-steps">End-to-end sequence (simplified steps)<a href="https://bri-b-dev.github.io/en/blog/springboot-fileupload-azure#end-to-end-sequence-simplified-steps" class="hash-link" aria-label="Direct link to End-to-end sequence (simplified steps)" title="Direct link to End-to-end sequence (simplified steps)" translate="no">‚Äã</a></h2>
<ol>
<li>Client sends multipart ‚Üí Server parses stream via FileUpload2.</li>
<li>MIME detection via Peek (Tika).</li>
<li>Optional GZIP ‚Üí Stream is compressed on-the-fly.</li>
<li>BlobOutputStream writes directly to Azure.</li>
<li>Optional: Set HTTP header/metadata, call metadata service.</li>
<li>Error ‚Üí Trigger compensation (rollback).</li>
</ol>
<hr>]]></content>
        <author>
            <name>Brigitte B√∂hm</name>
            <uri>https://www.linkedin.com/in/brigitte-boehm-34b7a025</uri>
        </author>
        <category label="Spring Boot" term="Spring Boot"/>
        <category label="Kotlin" term="Kotlin"/>
        <category label="Java" term="Java"/>
        <category label="Azure" term="Azure"/>
        <category label="Blob Storage" term="Blob Storage"/>
        <category label="Fileupload" term="Fileupload"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Workload Identity in AKS ‚Äì Lessons Learned]]></title>
        <id>https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned</id>
        <link href="https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned"/>
        <updated>2024-11-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Setup, pitfalls, and best practices from real projects]]></summary>
        <content type="html"><![CDATA[<p>Workload Identity in <strong>Azure Kubernetes Service (AKS)</strong> promises fewer secrets, native AzureAD integration, and a replacement for the old AAD Pod Identity.<br>
<!-- -->In practice, my projects in late 2024 brought not only smooth deployments but also some unexpected pitfalls.</p>
<p>Here are my <strong>hands-on experiences</strong> ‚Äì structured into Setup, Pitfalls, and Best Practices.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-setup">‚öôÔ∏è Setup<a href="https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned#%EF%B8%8F-setup" class="hash-link" aria-label="Direct link to ‚öôÔ∏è Setup" title="Direct link to ‚öôÔ∏è Setup" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Cluster</strong>: AKS with <strong>Workload Identity feature</strong> enabled</li>
<li><strong>Operator</strong>: <code>azure-workload-identity</code> Admission Webhook in the cluster</li>
<li><strong>Service Accounts</strong>: per pod with annotations like<!-- -->
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">annotations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">azure.workload.identity/client-id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> &lt;client</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre></div></div>
</li>
</ul>
<ul>
<li>
<p><strong>Azure side</strong>:</p>
<ul>
<li>Managed Identities for pods</li>
<li>Role assignments via AAD &amp; Azure RBAC (Storage, Key Vault, Application Gateway)</li>
</ul>
</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-pitfalls">üöß Pitfalls<a href="https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned#-pitfalls" class="hash-link" aria-label="Direct link to üöß Pitfalls" title="Direct link to üöß Pitfalls" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="sidecar-injection-not-always-reliable">Sidecar injection not always reliable<a href="https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned#sidecar-injection-not-always-reliable" class="hash-link" aria-label="Direct link to Sidecar injection not always reliable" title="Direct link to Sidecar injection not always reliable" translate="no">‚Äã</a></h3>
<p>The annotation <code>azure.workload.identity/inject-proxy-sidecar</code> didn't consistently work across operator versions.
Sometimes special Helm templates or additional MutatingWebhook config were required.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="authorizationpermissionmismatch">AuthorizationPermissionMismatch<a href="https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned#authorizationpermissionmismatch" class="hash-link" aria-label="Direct link to AuthorizationPermissionMismatch" title="Direct link to AuthorizationPermissionMismatch" translate="no">‚Äã</a></h3>
<p>A frequent error when accessing Storage Accounts.
Root cause: mixing up <strong>Management Plane</strong> and <strong>Data Plane</strong> roles.
‚û°Ô∏è Only proper Data Plane roles allow access.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="helm-templates--securitycontext">Helm templates &amp; securityContext<a href="https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned#helm-templates--securitycontext" class="hash-link" aria-label="Direct link to Helm templates &amp; securityContext" title="Direct link to Helm templates &amp; securityContext" translate="no">‚Äã</a></h3>
<p>An incorrect <code>securityContext</code> in the Helm chart blocked sidecar injection.
Debugging this took time ‚Äì webhook pod logs revealed the root cause.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="operator-versions-with-breaking-changes">Operator versions with breaking changes<a href="https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned#operator-versions-with-breaking-changes" class="hash-link" aria-label="Direct link to Operator versions with breaking changes" title="Direct link to Operator versions with breaking changes" translate="no">‚Äã</a></h3>
<p>Minor operator releases sometimes changed behavior.
‚û°Ô∏è Always check release notes before upgrading.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-best-practices">‚úÖ Best Practices<a href="https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned#-best-practices" class="hash-link" aria-label="Direct link to ‚úÖ Best Practices" title="Direct link to ‚úÖ Best Practices" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Start small</strong>: test with a single pod + storage account</li>
<li><strong>Separate RBAC</strong>: clearly distinguish management vs. data plane roles</li>
<li><strong>Check operator logs</strong>: Admission webhook is the first stop for debugging</li>
<li><strong>Validate Helm templates</strong>: ensure annotations and sidecars land in pod manifests</li>
<li><strong>Plan time</strong>: expect iterations during rollout</li>
</ul>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>My Tip</div><div class="admonitionContent_BuS1"><p>Workload Identity saves effort and increases security in the long run.<br>
<!-- -->But allow <strong>extra iterations</strong> during introduction ‚Äì especially with complex Helm charts.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion">üìå Conclusion<a href="https://bri-b-dev.github.io/en/blog/workload-identity-lessons-learned#-conclusion" class="hash-link" aria-label="Direct link to üìå Conclusion" title="Direct link to üìå Conclusion" translate="no">‚Äã</a></h2>
<p>Workload Identity is a <strong>key step for security and cloud-native architectures</strong>.
The initial rollout was not frictionless, but today our platform components run stable and secret-free.
It's worth it ‚Äì even if debugging took more effort than the docs suggested.</p>
<hr>
<p><em>Have you faced similar issues with AKS Workload Identity? Feel free to reach out or connect on <a href="https://www.linkedin.com/in/my-profile/" target="_blank" rel="noopener noreferrer">LinkedIn</a>.</em></p>]]></content>
        <author>
            <name>Brigitte B√∂hm</name>
            <uri>https://www.linkedin.com/in/brigitte-boehm-34b7a025</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Azure" term="Azure"/>
        <category label="AKS" term="AKS"/>
        <category label="Security" term="Security"/>
        <category label="Identity" term="Identity"/>
        <category label="Lessons Learned" term="Lessons Learned"/>
    </entry>
</feed>