"use strict";(self.webpackChunkbri_b_dev_github_io=self.webpackChunkbri_b_dev_github_io||[]).push([[6885],{3733:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});var t=i(9108),s=i(4848),l=i(8453),r=i(7293);const a={slug:"field-filtering-rest-jackson",title:"Field-Filtering in REST-APIs with Jackson & @ControllerAdvice",authors:"brigitte",tags:["spring-boot","kotlin","java","rest","jackson","json"],date:new Date("2025-02-17T00:00:00.000Z"),description:"Dynamic reduction of response fields via query parameters \u2013 an elegant solution with mixins and MappingJacksonValue."},o=void 0,c={authorsImageUrls:[void 0]},d=[{value:"\u2699\ufe0f Setup",id:"\ufe0f-setup",level:2},{value:"\ud83d\udd17 Example: DTOs &amp; Controller",id:"-example-dtos--controller",level:2},{value:"\ud83e\ude84 Field-Filter Advice",id:"-field-filter-advice",level:2},{value:"\ud83d\ude80 Result",id:"-result",level:2},{value:"\u2705 Lessons Learned",id:"-lessons-learned",level:2},{value:"\ud83d\udccc Conclusion",id:"-conclusion",level:2}];function p(e){const n={br:"br",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Clients often do not want to receive ",(0,s.jsx)(n.strong,{children:"all fields"})," of a REST response.",(0,s.jsx)(n.br,{}),"\n","Examples:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Mobile apps only need ",(0,s.jsx)(n.code,{children:"id"})," and ",(0,s.jsx)(n.code,{children:"name"}),", not the complete DTO."]}),"\n",(0,s.jsx)(n.li,{children:"Analytics systems only want certain metrics."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Instead of building multiple endpoints, you can implement ",(0,s.jsx)(n.strong,{children:"field filtering via query parameters"}),":",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.code,{children:"GET /api/spaces?fields=id,name"})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-setup",children:"\u2699\ufe0f Setup"}),"\n",(0,s.jsx)(n.p,{children:"We use:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Spring Boot (Kotlin/Java)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Jackson @JsonFilter + Mixins"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"@ControllerAdvice"}),", ",(0,s.jsx)(n.code,{children:"MappingJacksonValue"})," returns"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-example-dtos--controller",children:"\ud83d\udd17 Example: DTOs & Controller"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SpaceReadDTO.kt"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"data class SpaceReadDTO(\n    val id: UUID,\n    val name: String,\n    val description: String,\n    val createdAt: Instant,\n    val owner: String\n)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"SpaceController.kt"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'@RestController\n@RequestMapping("/api/spaces")\nclass SpaceController {\n\n    @GetMapping\n    fun getSpaces(): List<SpaceReadDTO> =\n        listOf(\n            SpaceReadDTO(UUID.randomUUID(), "Alpha", "First Space", Instant.now(), "Brigitte"),\n            SpaceReadDTO(UUID.randomUUID(), "Beta", "Second Space", Instant.now(), "Alex")\n        )\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"\ud83d\udc49 Still without filtering."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-field-filter-advice",children:"\ud83e\ude84 Field-Filter Advice"}),"\n",(0,s.jsxs)(n.p,{children:["We write a ",(0,s.jsx)(n.strong,{children:"@ControllerAdvice"})," that intercepts responses and reduces fields if necessary:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"FieldFilterAdvice.kt"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:'@ControllerAdvice\nclass FieldFilterAdvice(val objectMapper: ObjectMapper) : ResponseBodyAdvice<Any> {\n\n    override fun supports(\n        returnType: MethodParameter,\n        converterType: Class<out HttpMessageConverter<*>>\n    ) = true\n\n    override fun beforeBodyWrite(\n        body: Any?,\n        returnType: MethodParameter,\n        contentType: MediaType,\n        converterType: Class<out HttpMessageConverter<*>>,\n        request: ServerHttpRequest,\n        response: ServerHttpResponse\n    ): Any? {\n        if (body == null) return null\n\n        val servletRequest = (request as? ServletServerHttpRequest)?.servletRequest\n        val fieldsParam = servletRequest?.getParameter("fields") ?: return body\n\n        val fields = fieldsParam.split(",").map { it.trim() }.toSet()\n        if (fields.isEmpty()) return body\n\n        // Dynamic Filter-Setup\n        val filterId = "dynamicFilter"\n        objectMapper.setFilterProvider(\n            SimpleFilterProvider().addFilter(\n                filterId,\n                SimpleBeanPropertyFilter.filterOutAllExcept(fields)\n            )\n        )\n\n        // Mixin with @JsonFilter\n        val targetClass = body.javaClass\n        objectMapper.addMixIn(targetClass, DynamicFilterMixin::class.java)\n\n        return MappingJacksonValue(body).apply { filters = objectMapper.serializationConfig.filterProvider }\n    }\n\n    @JsonFilter("dynamicFilter")\n    class DynamicFilterMixin\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-result",children:"\ud83d\ude80 Result"}),"\n",(0,s.jsx)(n.p,{children:"Call without parameter:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /api/spaces\n"})}),"\n",(0,s.jsx)(n.p,{children:"Response:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  { "id": "\u2026", "name": "Alpha", "description": "First Space", "createdAt": "\u2026", "owner": "Brigitte" }\n]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Call with filter:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /api/spaces?fields=id,name\n"})}),"\n",(0,s.jsx)(n.p,{children:"Response:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  { "id": "\u2026", "name": "Alpha" }\n]\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-lessons-learned",children:"\u2705 Lessons Learned"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Works for individual objects ",(0,s.jsx)(n.strong,{children:"and"})," lists."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fields"})," parameter can be combined flexibly (",(0,s.jsx)(n.code,{children:"id,name,owner"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Multiple DTOs \u2192 use your own filter IDs and mixins if necessary."}),"\n",(0,s.jsxs)(n.li,{children:["Be careful with ",(0,s.jsx)(n.strong,{children:"nested objects"})," \u2013 field filtering only works at the top level."]}),"\n"]}),"\n",(0,s.jsx)(r.A,{type:"tip",title:"Pro tip",children:(0,s.jsxs)(n.p,{children:["Build helper methods for frequently used field sets, e.g., ",(0,s.jsx)(n.code,{children:"?fields=summary"})," \u2192 expands into specific fields."]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-conclusion",children:"\ud83d\udccc Conclusion"}),"\n",(0,s.jsxs)(n.p,{children:["With ",(0,s.jsx)(n.code,{children:"@ControllerAdvice"}),", Jackson filters, and ",(0,s.jsx)(n.code,{children:"MappingJacksonValue"}),", ",(0,s.jsx)(n.strong,{children:"field filtering can be implemented elegantly and generically"}),".\nThis saves you boilerplate endpoints and returns exactly the data that clients really need."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},7293:(e,n,i)=>{i.d(n,{A:()=>D});var t=i(6540),s=i(4848);function l(e){const{mdxAdmonitionTitle:n,rest:i}=function(e){const n=t.Children.toArray(e),i=n.find(e=>t.isValidElement(e)&&"mdxAdmonitionTitle"===e.type),l=n.filter(e=>e!==i),r=i?.props.children;return{mdxAdmonitionTitle:r,rest:l.length>0?(0,s.jsx)(s.Fragment,{children:l}):null}}(e.children),l=e.title??n;return{...e,...l&&{title:l},children:i}}var r=i(4164),a=i(1312),o=i(7559);const c="admonition_xJq3",d="admonitionHeading_Gvgb",p="admonitionIcon_Rf37",h="admonitionContent_BuS1";function u({type:e,className:n,children:i}){return(0,s.jsx)("div",{className:(0,r.A)(o.G.common.admonition,o.G.common.admonitionType(e),c,n),children:i})}function m({icon:e,title:n}){return(0,s.jsxs)("div",{className:d,children:[(0,s.jsx)("span",{className:p,children:e}),n]})}function x({children:e}){return e?(0,s.jsx)("div",{className:h,children:e}):null}function j(e){const{type:n,icon:i,title:t,children:l,className:r}=e;return(0,s.jsxs)(u,{type:n,className:r,children:[t||i?(0,s.jsx)(m,{title:t,icon:i}):null,(0,s.jsx)(x,{children:l})]})}function f(e){return(0,s.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const g={icon:(0,s.jsx)(f,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function v(e){return(0,s.jsx)(j,{...g,...e,className:(0,r.A)("alert alert--secondary",e.className),children:e.children})}function b(e){return(0,s.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const y={icon:(0,s.jsx)(b,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function k(e){return(0,s.jsx)(j,{...y,...e,className:(0,r.A)("alert alert--success",e.className),children:e.children})}function A(e){return(0,s.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const w={icon:(0,s.jsx)(A,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function T(e){return(0,s.jsx)(j,{...w,...e,className:(0,r.A)("alert alert--info",e.className),children:e.children})}function C(e){return(0,s.jsx)("svg",{viewBox:"0 0 16 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const M={icon:(0,s.jsx)(C,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function S(e){return(0,s.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const R={icon:(0,s.jsx)(S,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const F={icon:(0,s.jsx)(C,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const N={...{note:v,tip:k,info:T,warning:function(e){return(0,s.jsx)(j,{...M,...e,className:(0,r.A)("alert alert--warning",e.className),children:e.children})},danger:function(e){return(0,s.jsx)(j,{...R,...e,className:(0,r.A)("alert alert--danger",e.className),children:e.children})}},...{secondary:e=>(0,s.jsx)(v,{title:"secondary",...e}),important:e=>(0,s.jsx)(T,{title:"important",...e}),success:e=>(0,s.jsx)(k,{title:"success",...e}),caution:function(e){return(0,s.jsx)(j,{...F,...e,className:(0,r.A)("alert alert--warning",e.className),children:e.children})}}};function D(e){const n=l(e),i=(t=n.type,N[t]||(console.warn(`No admonition component found for admonition type "${t}". Using Info as fallback.`),N.info));var t;return(0,s.jsx)(i,{...n})}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const s={},l=t.createContext(s);function r(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}},9108:e=>{e.exports=JSON.parse('{"permalink":"/en/blog/field-filtering-rest-jackson","source":"@site/i18n/en/docusaurus-plugin-content-blog/2025-02-17-field-filtering.md","title":"Field-Filtering in REST-APIs with Jackson & @ControllerAdvice","description":"Dynamic reduction of response fields via query parameters \u2013 an elegant solution with mixins and MappingJacksonValue.","date":"2025-02-17T00:00:00.000Z","tags":[{"inline":false,"label":"Spring Boot","permalink":"/en/blog/tags/spring-boot","description":"Spring Boot"},{"inline":false,"label":"Kotlin","permalink":"/en/blog/tags/kotlin","description":"Kotlin"},{"inline":false,"label":"Java","permalink":"/en/blog/tags/java","description":"Java"},{"inline":false,"label":"REST","permalink":"/en/blog/tags/rest","description":"REST"},{"inline":false,"label":"Jackson","permalink":"/en/blog/tags/jackson","description":"Jackson"},{"inline":false,"label":"Json","permalink":"/en/blog/tags/json","description":"JavaScript Object Notation"}],"readingTime":1.81,"hasTruncateMarker":true,"authors":[{"name":"Brigitte B\xf6hm","title":"Cloud & Data Platform Engineer","url":"https://www.linkedin.com/in/brigitte-boehm-34b7a025","page":{"permalink":"/en/blog/authors/brigitte"},"socials":{"github":"https://github.com/bri-b-dev","linkedin":"https://www.linkedin.com/in/brigitte-boehm-34b7a025"},"imageURL":"https://github.com/bri-b-dev.png","key":"brigitte"}],"frontMatter":{"slug":"field-filtering-rest-jackson","title":"Field-Filtering in REST-APIs with Jackson & @ControllerAdvice","authors":"brigitte","tags":["spring-boot","kotlin","java","rest","jackson","json"],"date":"2025-02-17T00:00:00.000Z","description":"Dynamic reduction of response fields via query parameters \u2013 an elegant solution with mixins and MappingJacksonValue."},"unlisted":false,"nextItem":{"title":"API-First wotj Spring Boot & Kotlin","permalink":"/en/blog/api-first-springboot-kotlin"}}')}}]);