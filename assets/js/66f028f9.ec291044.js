"use strict";(self.webpackChunkbri_b_dev_github_io=self.webpackChunkbri_b_dev_github_io||[]).push([[9292],{410:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var r=i(5933),t=i(4848),s=i(8453),l=i(7293);const o={slug:"api-first-springboot-kotlin",title:"API-First mit Spring Boot & Kotlin",authors:"brigitte",tags:["spring-boot","kotlin","openapi","microservices","codegen","api-first"],date:new Date("2025-02-10T00:00:00.000Z"),description:"Wie ich Microservices nach OpenAPI designe und automatisch Clients & Server-Stubs generiere \u2013 Lessons Learned in Kotlin."},a=void 0,c={authorsImageUrls:[void 0]},d=[{value:"\ud83e\udde9 Workflow: API-First in der Praxis",id:"-workflow-api-first-in-der-praxis",level:2},{value:"\u2699\ufe0f Setup: OpenAPI Generator in Kotlin",id:"\ufe0f-setup-openapi-generator-in-kotlin",level:2},{value:"\ud83d\udea7 Lessons Learned",id:"-lessons-learned",level:2},{value:"1. Interface-Only ist Gold wert",id:"1-interface-only-ist-gold-wert",level:3},{value:"2. DTOs strikt nutzen",id:"2-dtos-strikt-nutzen",level:3},{value:"3. Versionierung &amp; Backward Compatibility",id:"3-versionierung--backward-compatibility",level:3},{value:"4. CI/CD-Checks",id:"4-cicd-checks",level:3},{value:"\ud83d\udce6 Client-Generierung",id:"-client-generierung",level:2},{value:"\ud83d\udd17 Mini-Beispiel: User API End-to-End",id:"-mini-beispiel-user-api-end-to-end",level:2},{value:"1. OpenAPI Spec (gek\xfcrzt)",id:"1-openapi-spec-gek\xfcrzt",level:3},{value:"2. Generiertes Interface (gek\xfcrzt)",id:"2-generiertes-interface-gek\xfcrzt",level:3},{value:"3. Kotlin-Implementierung",id:"3-kotlin-implementierung",level:3},{value:"\ud83d\udccc Best Practices",id:"-best-practices",level:2},{value:"\ud83d\udccc Fazit",id:"-fazit",level:2}];function h(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Microservices sollen ",(0,t.jsx)(n.strong,{children:"konsistente Schnittstellen"})," bieten \u2013 und zwar unabh\xe4ngig von der Programmiersprache.\nAPI-First bedeutet: ",(0,t.jsx)(n.strong,{children:"erst das OpenAPI-Schema"}),", dann Code, Doku & Clients."]}),"\n",(0,t.jsx)(n.p,{children:"Das verhindert, dass API-Definitionen veralten oder als \u201eBeiprodukt\u201c nachgezogen werden."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-workflow-api-first-in-der-praxis",children:"\ud83e\udde9 Workflow: API-First in der Praxis"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Design"}),": OpenAPI-Spec (",(0,t.jsx)(n.code,{children:".yaml"}),") mit Stoplight, Swagger Editor oder VS Code Plugin."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validieren"}),": Linter (z. B. Spectral) und CI-Checks."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Codegen"}),": Server-Stubs & Client-SDKs aus der Spec generieren."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementieren"}),": Business-Logik in Kotlin, Interface bleibt stabil."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Docs"}),": Swagger UI oder ReDoc aus der gleichen Spec."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-setup-openapi-generator-in-kotlin",children:"\u2699\ufe0f Setup: OpenAPI Generator in Kotlin"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"build.gradle.kts"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'plugins {\n    id("org.springframework.boot") version "3.3.0"\n    id("io.spring.dependency-management") version "1.1.5"\n    kotlin("jvm") version "1.9.24"\n    kotlin("plugin.spring") version "1.9.24"\n    id("org.openapi.generator") version "7.5.0"\n}\n\nopenApiGenerate {\n    generatorName.set("kotlin-spring")\n    inputSpec.set("$rootDir/api/openapi.yaml")\n    outputDir.set("$buildDir/generated")\n    apiPackage.set("com.example.api")\n    modelPackage.set("com.example.api.model")\n    configOptions.set(\n        mapOf(\n            "interfaceOnly" to "true",\n            "useSpringBoot3" to "true",\n            "reactive" to "false"\n        )\n    )\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"\ud83d\udc49 Ergebnis:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API-Interfaces"})," als Kotlin-Interfaces (Controller-Skeletons)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DTOs"})," im ",(0,t.jsx)(n.code,{children:"model"}),"-Package"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-lessons-learned",children:"\ud83d\udea7 Lessons Learned"}),"\n",(0,t.jsx)(n.h3,{id:"1-interface-only-ist-gold-wert",children:"1. Interface-Only ist Gold wert"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Nur Interfaces generieren, Implementierung bleibt ",(0,t.jsx)(n.strong,{children:"sauber im eigenen Code"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Keine Merge-Konflikte beim erneuten Generieren."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-dtos-strikt-nutzen",children:"2. DTOs strikt nutzen"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["DTOs aus ",(0,t.jsx)(n.code,{children:"model"})," sind ",(0,t.jsx)(n.strong,{children:"Transport-Objekte"})," \u2013 keine Business-Entities."]}),"\n",(0,t.jsx)(n.li,{children:"Vermeide \u201esmarte\u201c Logik in DTOs, halte sie flach."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-versionierung--backward-compatibility",children:"3. Versionierung & Backward Compatibility"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["OpenAPI als ",(0,t.jsx)(n.strong,{children:"Single Source of Truth"})," in Git versionieren."]}),"\n",(0,t.jsxs)(n.li,{children:["Breaking Changes nur mit neuer API-Version (",(0,t.jsx)(n.code,{children:"/v2/..."}),")."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-cicd-checks",children:"4. CI/CD-Checks"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["OpenAPI Spec validieren in jedem PR (",(0,t.jsx)(n.code,{children:"spectral lint"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Codegen im CI pr\xfcfen, ob alles aktuell ist (",(0,t.jsx)(n.code,{children:"git diff"})," auf generated code)."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-client-generierung",children:"\ud83d\udce6 Client-Generierung"}),"\n",(0,t.jsxs)(n.p,{children:["Mit OpenAPI Generator lassen sich auch ",(0,t.jsx)(n.strong,{children:"Clients"})," f\xfcr andere Sprachen erstellen:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"openapi-generator-cli generate \\\n  -i api/openapi.yaml \\\n  -g typescript-fetch \\\n  -o clients/ts\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Frontend nutzt ",(0,t.jsx)(n.code,{children:"typescript-fetch"})," oder ",(0,t.jsx)(n.code,{children:"typescript-axios"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Andere Services k\xf6nnen ",(0,t.jsx)(n.code,{children:"java"}),", ",(0,t.jsx)(n.code,{children:"python"}),", ",(0,t.jsx)(n.code,{children:"go"})," SDKs beziehen."]}),"\n",(0,t.jsx)(n.li,{children:"Einheitliche API garantiert Konsistenz \xfcber den Stack hinweg."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-mini-beispiel-user-api-end-to-end",children:"\ud83d\udd17 Mini-Beispiel: User API End-to-End"}),"\n",(0,t.jsx)(n.h3,{id:"1-openapi-spec-gek\xfcrzt",children:"1. OpenAPI Spec (gek\xfcrzt)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"api/openapi.yaml"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"openapi: 3.0.3\ninfo:\n  title: User API\n  version: 1.0.0\npaths:\n  /users/{id}:\n    get:\n      summary: Get user by ID\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '404':\n          description: Not Found\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-generiertes-interface-gek\xfcrzt",children:"2. Generiertes Interface (gek\xfcrzt)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"build/generated/com/example/api/UsersApi.kt"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'package com.example.api\n\nimport com.example.api.model.User\nimport org.springframework.http.ResponseEntity\nimport org.springframework.web.bind.annotation.PathVariable\n\ninterface UsersApi {\n    fun getUserById(@PathVariable("id") id: java.util.UUID): ResponseEntity<User>\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-kotlin-implementierung",children:"3. Kotlin-Implementierung"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"src/main/kotlin/com/example/controller/UserController.kt"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'package com.example.controller\n\nimport com.example.api.UsersApi\nimport com.example.api.model.User\nimport org.springframework.http.ResponseEntity\nimport org.springframework.web.bind.annotation.RestController\nimport java.util.UUID\n\n@RestController\nclass UserController : UsersApi {\n    override fun getUserById(id: UUID): ResponseEntity<User> {\n        val user = if (id.toString().startsWith("a")) {\n            User(id = id.toString(), name = "Alice")\n        } else null\n\n        return user?.let { ResponseEntity.ok(it) }\n            ?: ResponseEntity.notFound().build()\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udc49 Flow: ",(0,t.jsx)(n.strong,{children:"Spec \u2192 Codegen \u2192 Interface \u2192 Implementierung"}),". Alle Teams nutzen dieselbe API-Definition."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-best-practices",children:"\ud83d\udccc Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Keep the spec small"}),": nicht alles upfront modellieren, sondern inkrementell erweitern."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Namen konsistent"}),": API Paths, Models, Enums \u2192 konsistente Namenskonvention."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sicherheit"}),": Security-Schemes (OAuth2, Bearer JWT) gleich in der Spec definieren."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Doku"}),": Nutze Swagger UI direkt im Service \u2013 Entwickler haben sofort Feedback."]}),"\n"]}),"\n",(0,t.jsx)(l.A,{type:"tip",title:"API-First lohnt sich",children:(0,t.jsx)(n.p,{children:"Der Mehraufwand am Anfang zahlt sich mehrfach aus: Konsistente Schnittstellen, weniger Reibung zwischen Teams, schnellere Entwicklung."})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-fazit",children:"\ud83d\udccc Fazit"}),"\n",(0,t.jsxs)(n.p,{children:["API-First mit OpenAPI und Kotlin + Spring Boot bedeutet: ",(0,t.jsx)(n.strong,{children:"erst Schnittstelle, dann Code"}),".\nMit Generatoren f\xfcr Stubs & Clients wird der Prozess reproduzierbar, die Doku bleibt immer aktuell und Microservices k\xf6nnen schneller integriert werden."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5933:e=>{e.exports=JSON.parse('{"permalink":"/blog/api-first-springboot-kotlin","source":"@site/blog/2025-02-10-api-first.md","title":"API-First mit Spring Boot & Kotlin","description":"Wie ich Microservices nach OpenAPI designe und automatisch Clients & Server-Stubs generiere \u2013 Lessons Learned in Kotlin.","date":"2025-02-10T00:00:00.000Z","tags":[{"inline":false,"label":"Spring Boot","permalink":"/blog/tags/spring-boot","description":"Spring Boot"},{"inline":false,"label":"Kotlin","permalink":"/blog/tags/kotlin","description":"Kotlin"},{"inline":false,"label":"OpenAPI","permalink":"/blog/tags/openapi","description":"OpenAPI"},{"inline":false,"label":"Microservices","permalink":"/blog/tags/microservices","description":"Microservices"},{"inline":false,"label":"Codegen","permalink":"/blog/tags/codegen","description":"Codegen"},{"inline":false,"label":"API-first","permalink":"/blog/tags/api-first","description":"API-first"}],"readingTime":2.86,"hasTruncateMarker":true,"authors":[{"name":"Brigitte B\xf6hm","title":"Cloud & Data Platform Engineer","url":"https://www.linkedin.com/in/brigitte-boehm-34b7a025","page":{"permalink":"/blog/authors/brigitte"},"socials":{"github":"https://github.com/bri-b-dev","linkedin":"https://www.linkedin.com/in/brigitte-boehm-34b7a025"},"imageURL":"https://github.com/bri-b-dev.png","key":"brigitte"}],"frontMatter":{"slug":"api-first-springboot-kotlin","title":"API-First mit Spring Boot & Kotlin","authors":"brigitte","tags":["spring-boot","kotlin","openapi","microservices","codegen","api-first"],"date":"2025-02-10T00:00:00.000Z","description":"Wie ich Microservices nach OpenAPI designe und automatisch Clients & Server-Stubs generiere \u2013 Lessons Learned in Kotlin."},"unlisted":false,"prevItem":{"title":"Field-Filtering in REST-APIs mit Jackson & @ControllerAdvice","permalink":"/blog/field-filtering-rest-jackson"},"nextItem":{"title":"Terraform Patterns f\xfcr AKS & Azure","permalink":"/blog/terraform-patterns-aks-azure"}}')},7293:(e,n,i)=>{i.d(n,{A:()=>D});var r=i(6540),t=i(4848);function s(e){const{mdxAdmonitionTitle:n,rest:i}=function(e){const n=r.Children.toArray(e),i=n.find(e=>r.isValidElement(e)&&"mdxAdmonitionTitle"===e.type),s=n.filter(e=>e!==i),l=i?.props.children;return{mdxAdmonitionTitle:l,rest:s.length>0?(0,t.jsx)(t.Fragment,{children:s}):null}}(e.children),s=e.title??n;return{...e,...s&&{title:s},children:i}}var l=i(4164),o=i(1312),a=i(7559);const c="admonition_xJq3",d="admonitionHeading_Gvgb",h="admonitionIcon_Rf37",p="admonitionContent_BuS1";function u({type:e,className:n,children:i}){return(0,t.jsx)("div",{className:(0,l.A)(a.G.common.admonition,a.G.common.admonitionType(e),c,n),children:i})}function g({icon:e,title:n}){return(0,t.jsxs)("div",{className:d,children:[(0,t.jsx)("span",{className:h,children:e}),n]})}function m({children:e}){return e?(0,t.jsx)("div",{className:p,children:e}):null}function x(e){const{type:n,icon:i,title:r,children:s,className:l}=e;return(0,t.jsxs)(u,{type:n,className:l,children:[r||i?(0,t.jsx)(g,{title:r,icon:i}):null,(0,t.jsx)(m,{children:s})]})}function j(e){return(0,t.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const f={icon:(0,t.jsx)(j,{}),title:(0,t.jsx)(o.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function v(e){return(0,t.jsx)(x,{...f,...e,className:(0,l.A)("alert alert--secondary",e.className),children:e.children})}function b(e){return(0,t.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const k={icon:(0,t.jsx)(b,{}),title:(0,t.jsx)(o.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function A(e){return(0,t.jsx)(x,{...k,...e,className:(0,l.A)("alert alert--success",e.className),children:e.children})}function I(e){return(0,t.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const w={icon:(0,t.jsx)(I,{}),title:(0,t.jsx)(o.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function S(e){return(0,t.jsx)(x,{...w,...e,className:(0,l.A)("alert alert--info",e.className),children:e.children})}function P(e){return(0,t.jsx)("svg",{viewBox:"0 0 16 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const C={icon:(0,t.jsx)(P,{}),title:(0,t.jsx)(o.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function y(e){return(0,t.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const z={icon:(0,t.jsx)(y,{}),title:(0,t.jsx)(o.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const N={icon:(0,t.jsx)(P,{}),title:(0,t.jsx)(o.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const B={...{note:v,tip:A,info:S,warning:function(e){return(0,t.jsx)(x,{...C,...e,className:(0,l.A)("alert alert--warning",e.className),children:e.children})},danger:function(e){return(0,t.jsx)(x,{...z,...e,className:(0,l.A)("alert alert--danger",e.className),children:e.children})}},...{secondary:e=>(0,t.jsx)(v,{title:"secondary",...e}),important:e=>(0,t.jsx)(S,{title:"important",...e}),success:e=>(0,t.jsx)(A,{title:"success",...e}),caution:function(e){return(0,t.jsx)(x,{...N,...e,className:(0,l.A)("alert alert--warning",e.className),children:e.children})}}};function D(e){const n=s(e),i=(r=n.type,B[r]||(console.warn(`No admonition component found for admonition type "${r}". Using Info as fallback.`),B.info));var r;return(0,t.jsx)(i,{...n})}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const t={},s=r.createContext(t);function l(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);