<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Brigitte B√∂hm's homepage Blog</title>
        <link>https://bri-b-dev.github.io/blog</link>
        <description>Brigitte B√∂hm's homepage Blog</description>
        <lastBuildDate>Mon, 17 Feb 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>de</language>
        <item>
            <title><![CDATA[Field-Filtering in REST-APIs mit Jackson & @ControllerAdvice]]></title>
            <link>https://bri-b-dev.github.io/blog/field-filtering-rest-jackson</link>
            <guid>https://bri-b-dev.github.io/blog/field-filtering-rest-jackson</guid>
            <pubDate>Mon, 17 Feb 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Dynamische Reduktion von Response-Feldern √ºber Query-Parameter ‚Äì elegante L√∂sung mit Mixins und MappingJacksonValue.]]></description>
            <content:encoded><![CDATA[<p>Oft wollen Clients <strong>nicht alle Felder</strong> einer REST-Response zur√ºckbekommen.<br>
<!-- -->Beispiele:</p>
<ul>
<li>Mobile Apps brauchen nur <code>id</code> und <code>name</code>, nicht das komplette DTO.</li>
<li>Analytics-Systeme wollen nur bestimmte Metriken.</li>
</ul>
<p>Statt mehrere Endpunkte zu bauen, kann man <strong>Field-Filtering per Query-Parameter</strong> implementieren:<br>
<code>GET /api/spaces?fields=id,name</code></p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-setup">‚öôÔ∏è Setup<a href="https://bri-b-dev.github.io/blog/field-filtering-rest-jackson#%EF%B8%8F-setup" class="hash-link" aria-label="Direkter Link zur ‚öôÔ∏è Setup" title="Direkter Link zur ‚öôÔ∏è Setup" translate="no">‚Äã</a></h2>
<p>Wir nutzen:</p>
<ul>
<li><strong>Spring Boot (Kotlin/Java)</strong></li>
<li><strong>Jackson @JsonFilter + Mixins</strong></li>
<li><strong>@ControllerAdvice</strong>, das <code>MappingJacksonValue</code> zur√ºckgibt</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-beispiel-dtos--controller">üîó Beispiel: DTOs &amp; Controller<a href="https://bri-b-dev.github.io/blog/field-filtering-rest-jackson#-beispiel-dtos--controller" class="hash-link" aria-label="Direkter Link zur üîó Beispiel: DTOs &amp; Controller" title="Direkter Link zur üîó Beispiel: DTOs &amp; Controller" translate="no">‚Äã</a></h2>
<p><strong><code>SpaceReadDTO.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">data</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">SpaceReadDTO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> id</span><span class="token operator">:</span><span class="token plain"> UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> name</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> description</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> createdAt</span><span class="token operator">:</span><span class="token plain"> Instant</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> owner</span><span class="token operator">:</span><span class="token plain"> String</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre></div></div>
<p><strong><code>SpaceController.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RestController</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RequestMapping</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"/api/spaces"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> SpaceController </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@GetMapping</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getSpaces</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> List</span><span class="token operator">&lt;</span><span class="token plain">SpaceReadDTO</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token function" style="color:rgb(80, 250, 123)">listOf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token function" style="color:rgb(80, 250, 123)">SpaceReadDTO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">randomUUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Alpha"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"First Space"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Instant</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">now</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Brigitte"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token function" style="color:rgb(80, 250, 123)">SpaceReadDTO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">randomUUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Beta"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Second Space"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Instant</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">now</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Alex"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>üëâ Noch ohne Filterung.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-field-filter-advice">ü™Ñ Field-Filter Advice<a href="https://bri-b-dev.github.io/blog/field-filtering-rest-jackson#-field-filter-advice" class="hash-link" aria-label="Direkter Link zur ü™Ñ Field-Filter Advice" title="Direkter Link zur ü™Ñ Field-Filter Advice" translate="no">‚Äã</a></h2>
<p>Wir schreiben ein <strong>@ControllerAdvice</strong>, das Responses abf√§ngt und bei Bedarf Felder reduziert:</p>
<p><strong><code>FieldFilterAdvice.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@ControllerAdvice</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">FieldFilterAdvice</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> objectMapper</span><span class="token operator">:</span><span class="token plain"> ObjectMapper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> ResponseBodyAdvice</span><span class="token operator">&lt;</span><span class="token plain">Any</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">supports</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        returnType</span><span class="token operator">:</span><span class="token plain"> MethodParameter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        converterType</span><span class="token operator">:</span><span class="token plain"> Class</span><span class="token operator">&lt;</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">out</span><span class="token plain"> HttpMessageConverter</span><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">beforeBodyWrite</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        body</span><span class="token operator">:</span><span class="token plain"> Any</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        returnType</span><span class="token operator">:</span><span class="token plain"> MethodParameter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        contentType</span><span class="token operator">:</span><span class="token plain"> MediaType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        converterType</span><span class="token operator">:</span><span class="token plain"> Class</span><span class="token operator">&lt;</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">out</span><span class="token plain"> HttpMessageConverter</span><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        request</span><span class="token operator">:</span><span class="token plain"> ServerHttpRequest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        response</span><span class="token operator">:</span><span class="token plain"> ServerHttpResponse</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Any</span><span class="token operator">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">body </span><span class="token operator">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> servletRequest </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">request </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">as</span><span class="token operator">?</span><span class="token plain"> ServletServerHttpRequest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">servletRequest</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> fieldsParam </span><span class="token operator">=</span><span class="token plain"> servletRequest</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getParameter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"fields"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">?:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> body</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> fields </span><span class="token operator">=</span><span class="token plain"> fieldsParam</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">split</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">","</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">map</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> it</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">trim</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toSet</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">fields</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">isEmpty</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> body</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// Dynamisches Filter-Setup</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> filterId </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"dynamicFilter"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        objectMapper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">setFilterProvider</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token function" style="color:rgb(80, 250, 123)">SimpleFilterProvider</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">addFilter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                filterId</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                SimpleBeanPropertyFilter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">filterOutAllExcept</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">fields</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// Mixin mit @JsonFilter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> targetClass </span><span class="token operator">=</span><span class="token plain"> body</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">javaClass</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        objectMapper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">addMixIn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">targetClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> DynamicFilterMixin</span><span class="token operator">::</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">MappingJacksonValue</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">body</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">apply</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> filters </span><span class="token operator">=</span><span class="token plain"> objectMapper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">serializationConfig</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">filterProvider </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@JsonFilter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"dynamicFilter"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> DynamicFilterMixin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-ergebnis">üöÄ Ergebnis<a href="https://bri-b-dev.github.io/blog/field-filtering-rest-jackson#-ergebnis" class="hash-link" aria-label="Direkter Link zur üöÄ Ergebnis" title="Direkter Link zur üöÄ Ergebnis" translate="no">‚Äã</a></h2>
<p>Aufruf ohne Parameter:</p>
<div class="language-http codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-http codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">GET /api/spaces</span><br></span></code></pre></div></div>
<p>Response:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token property">"id"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"‚Ä¶"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"name"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Alpha"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"description"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"First Space"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"createdAt"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"‚Ä¶"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"owner"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Brigitte"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<p>Aufruf mit Filter:</p>
<div class="language-http codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-http codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">GET /api/spaces?fields=id,name</span><br></span></code></pre></div></div>
<p>Response:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token property">"id"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"‚Ä¶"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token property">"name"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Alpha"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-lessons-learned">‚úÖ Lessons Learned<a href="https://bri-b-dev.github.io/blog/field-filtering-rest-jackson#-lessons-learned" class="hash-link" aria-label="Direkter Link zur ‚úÖ Lessons Learned" title="Direkter Link zur ‚úÖ Lessons Learned" translate="no">‚Äã</a></h2>
<ul>
<li>Funktioniert f√ºr einzelne Objekte <strong>und</strong> Listen.</li>
<li><code>fields</code>-Parameter ist flexibel kombinierbar (<code>id,name,owner</code>).</li>
<li>Mehrere DTOs ‚Üí bei Bedarf eigene Filter-IDs und Mixins.</li>
<li>Vorsicht bei <strong>Nested Objects</strong> ‚Äì Field-Filtering wirkt nur auf oberster Ebene.</li>
</ul>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Pro Tipp</div><div class="admonitionContent_BuS1"><p>Baue dir Helper-Methoden f√ºr h√§ufig genutzte Feldsets, z. B. <code>?fields=summary</code> ‚Üí wird in konkrete Felder expandiert.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-fazit">üìå Fazit<a href="https://bri-b-dev.github.io/blog/field-filtering-rest-jackson#-fazit" class="hash-link" aria-label="Direkter Link zur üìå Fazit" title="Direkter Link zur üìå Fazit" translate="no">‚Äã</a></h2>
<p>Mit <code>@ControllerAdvice</code>, Jackson-Filter und <code>MappingJacksonValue</code> l√§sst sich <strong>Field-Filtering elegant &amp; generisch</strong> umsetzen.
Damit sparst du Boilerplate-Endpoints und gibst Clients genau die Daten zur√ºck, die sie wirklich brauchen.</p>]]></content:encoded>
            <category>Spring Boot</category>
            <category>Kotlin</category>
            <category>Java</category>
            <category>REST</category>
            <category>Jackson</category>
            <category>Json</category>
        </item>
        <item>
            <title><![CDATA[API-First mit Spring Boot & Kotlin]]></title>
            <link>https://bri-b-dev.github.io/blog/api-first-springboot-kotlin</link>
            <guid>https://bri-b-dev.github.io/blog/api-first-springboot-kotlin</guid>
            <pubDate>Mon, 10 Feb 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Wie ich Microservices nach OpenAPI designe und automatisch Clients & Server-Stubs generiere ‚Äì Lessons Learned in Kotlin.]]></description>
            <content:encoded><![CDATA[<p>Microservices sollen <strong>konsistente Schnittstellen</strong> bieten ‚Äì und zwar unabh√§ngig von der Programmiersprache.
API-First bedeutet: <strong>erst das OpenAPI-Schema</strong>, dann Code, Doku &amp; Clients.</p>
<p>Das verhindert, dass API-Definitionen veralten oder als ‚ÄûBeiprodukt‚Äú nachgezogen werden.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-workflow-api-first-in-der-praxis">üß© Workflow: API-First in der Praxis<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#-workflow-api-first-in-der-praxis" class="hash-link" aria-label="Direkter Link zur üß© Workflow: API-First in der Praxis" title="Direkter Link zur üß© Workflow: API-First in der Praxis" translate="no">‚Äã</a></h2>
<ol>
<li><strong>Design</strong>: OpenAPI-Spec (<code>.yaml</code>) mit Stoplight, Swagger Editor oder VS Code Plugin.</li>
<li><strong>Validieren</strong>: Linter (z. B. Spectral) und CI-Checks.</li>
<li><strong>Codegen</strong>: Server-Stubs &amp; Client-SDKs aus der Spec generieren.</li>
<li><strong>Implementieren</strong>: Business-Logik in Kotlin, Interface bleibt stabil.</li>
<li><strong>Docs</strong>: Swagger UI oder ReDoc aus der gleichen Spec.</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-setup-openapi-generator-in-kotlin">‚öôÔ∏è Setup: OpenAPI Generator in Kotlin<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#%EF%B8%8F-setup-openapi-generator-in-kotlin" class="hash-link" aria-label="Direkter Link zur ‚öôÔ∏è Setup: OpenAPI Generator in Kotlin" title="Direkter Link zur ‚öôÔ∏è Setup: OpenAPI Generator in Kotlin" translate="no">‚Äã</a></h2>
<p><strong><code>build.gradle.kts</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">plugins </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.springframework.boot"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"3.3.0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"io.spring.dependency-management"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.1.5"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"jvm"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.9.24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"plugin.spring"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.9.24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.openapi.generator"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"7.5.0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">openApiGenerate </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    generatorName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"kotlin-spring"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    inputSpec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"</span><span class="token string-literal singleline interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">$</span><span class="token string-literal singleline interpolation expression">rootDir</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">/api/openapi.yaml"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outputDir</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"</span><span class="token string-literal singleline interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">$</span><span class="token string-literal singleline interpolation expression">buildDir</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">/generated"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    apiPackage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.example.api"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    modelPackage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.example.api.model"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    configOptions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">set</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token function" style="color:rgb(80, 250, 123)">mapOf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"interfaceOnly"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"true"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"useSpringBoot3"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"true"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"reactive"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"false"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>üëâ Ergebnis:</p>
<ul>
<li><strong>API-Interfaces</strong> als Kotlin-Interfaces (Controller-Skeletons)</li>
<li><strong>DTOs</strong> im <code>model</code>-Package</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-lessons-learned">üöß Lessons Learned<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#-lessons-learned" class="hash-link" aria-label="Direkter Link zur üöß Lessons Learned" title="Direkter Link zur üöß Lessons Learned" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-interface-only-ist-gold-wert">1. Interface-Only ist Gold wert<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#1-interface-only-ist-gold-wert" class="hash-link" aria-label="Direkter Link zur 1. Interface-Only ist Gold wert" title="Direkter Link zur 1. Interface-Only ist Gold wert" translate="no">‚Äã</a></h3>
<ul>
<li>Nur Interfaces generieren, Implementierung bleibt <strong>sauber im eigenen Code</strong>.</li>
<li>Keine Merge-Konflikte beim erneuten Generieren.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-dtos-strikt-nutzen">2. DTOs strikt nutzen<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#2-dtos-strikt-nutzen" class="hash-link" aria-label="Direkter Link zur 2. DTOs strikt nutzen" title="Direkter Link zur 2. DTOs strikt nutzen" translate="no">‚Äã</a></h3>
<ul>
<li>DTOs aus <code>model</code> sind <strong>Transport-Objekte</strong> ‚Äì keine Business-Entities.</li>
<li>Vermeide ‚Äûsmarte‚Äú Logik in DTOs, halte sie flach.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-versionierung--backward-compatibility">3. Versionierung &amp; Backward Compatibility<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#3-versionierung--backward-compatibility" class="hash-link" aria-label="Direkter Link zur 3. Versionierung &amp; Backward Compatibility" title="Direkter Link zur 3. Versionierung &amp; Backward Compatibility" translate="no">‚Äã</a></h3>
<ul>
<li>OpenAPI als <strong>Single Source of Truth</strong> in Git versionieren.</li>
<li>Breaking Changes nur mit neuer API-Version (<code>/v2/...</code>).</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-cicd-checks">4. CI/CD-Checks<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#4-cicd-checks" class="hash-link" aria-label="Direkter Link zur 4. CI/CD-Checks" title="Direkter Link zur 4. CI/CD-Checks" translate="no">‚Äã</a></h3>
<ul>
<li>OpenAPI Spec validieren in jedem PR (<code>spectral lint</code>).</li>
<li>Codegen im CI pr√ºfen, ob alles aktuell ist (<code>git diff</code> auf generated code).</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-client-generierung">üì¶ Client-Generierung<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#-client-generierung" class="hash-link" aria-label="Direkter Link zur üì¶ Client-Generierung" title="Direkter Link zur üì¶ Client-Generierung" translate="no">‚Äã</a></h2>
<p>Mit OpenAPI Generator lassen sich auch <strong>Clients</strong> f√ºr andere Sprachen erstellen:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">openapi-generator-cli generate </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-i</span><span class="token plain"> api/openapi.yaml </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> typescript-fetch </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> clients/ts</span><br></span></code></pre></div></div>
<ul>
<li>Frontend nutzt <code>typescript-fetch</code> oder <code>typescript-axios</code>.</li>
<li>Andere Services k√∂nnen <code>java</code>, <code>python</code>, <code>go</code> SDKs beziehen.</li>
<li>Einheitliche API garantiert Konsistenz √ºber den Stack hinweg.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-mini-beispiel-user-api-end-to-end">üîó Mini-Beispiel: User API End-to-End<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#-mini-beispiel-user-api-end-to-end" class="hash-link" aria-label="Direkter Link zur üîó Mini-Beispiel: User API End-to-End" title="Direkter Link zur üîó Mini-Beispiel: User API End-to-End" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-openapi-spec-gek√ºrzt">1. OpenAPI Spec (gek√ºrzt)<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#1-openapi-spec-gek%C3%BCrzt" class="hash-link" aria-label="Direkter Link zur 1. OpenAPI Spec (gek√ºrzt)" title="Direkter Link zur 1. OpenAPI Spec (gek√ºrzt)" translate="no">‚Äã</a></h3>
<p><strong><code>api/openapi.yaml</code></strong></p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">openapi</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> 3.0.3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">info</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">title</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> User API</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">version</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> 1.0.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">paths</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  /users/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">get</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">summary</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Get user by ID</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">parameters</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">in</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> path</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">required</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">schema</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">format</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> uuid</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">responses</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">'200'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">description</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> OK</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">content</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">application/json</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">schema</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token key atrule">$ref</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'#/components/schemas/User'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">'404'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">description</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Not Found</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">components</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">schemas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">User</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> object</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">properties</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">format</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> uuid</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> string</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-generiertes-interface-gek√ºrzt">2. Generiertes Interface (gek√ºrzt)<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#2-generiertes-interface-gek%C3%BCrzt" class="hash-link" aria-label="Direkter Link zur 2. Generiertes Interface (gek√ºrzt)" title="Direkter Link zur 2. Generiertes Interface (gek√ºrzt)" translate="no">‚Äã</a></h3>
<p><strong><code>build/generated/com/example/api/UsersApi.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">api</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">api</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">User</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">http</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">ResponseEntity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PathVariable</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> UsersApi </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getUserById</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@PathVariable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"id"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> id</span><span class="token operator">:</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">util</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> ResponseEntity</span><span class="token operator">&lt;</span><span class="token plain">User</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-kotlin-implementierung">3. Kotlin-Implementierung<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#3-kotlin-implementierung" class="hash-link" aria-label="Direkter Link zur 3. Kotlin-Implementierung" title="Direkter Link zur 3. Kotlin-Implementierung" translate="no">‚Äã</a></h3>
<p><strong><code>src/main/kotlin/com/example/controller/UserController.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">controller</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">api</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">UsersApi</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">api</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">User</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">http</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">ResponseEntity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RestController</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">util</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">UUID</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RestController</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> UserController </span><span class="token operator">:</span><span class="token plain"> UsersApi </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getUserById</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token operator">:</span><span class="token plain"> UUID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> ResponseEntity</span><span class="token operator">&lt;</span><span class="token plain">User</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> user </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toString</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">startsWith</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"a"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token function" style="color:rgb(80, 250, 123)">User</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id </span><span class="token operator">=</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toString</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> name </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Alice"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> user</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> ResponseEntity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">ok</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">it</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token operator">?:</span><span class="token plain"> ResponseEntity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">notFound</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">build</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>üëâ Flow: <strong>Spec ‚Üí Codegen ‚Üí Interface ‚Üí Implementierung</strong>. Alle Teams nutzen dieselbe API-Definition.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-best-practices">üìå Best Practices<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#-best-practices" class="hash-link" aria-label="Direkter Link zur üìå Best Practices" title="Direkter Link zur üìå Best Practices" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Keep the spec small</strong>: nicht alles upfront modellieren, sondern inkrementell erweitern.</li>
<li><strong>Namen konsistent</strong>: API Paths, Models, Enums ‚Üí konsistente Namenskonvention.</li>
<li><strong>Sicherheit</strong>: Security-Schemes (OAuth2, Bearer JWT) gleich in der Spec definieren.</li>
<li><strong>Doku</strong>: Nutze Swagger UI direkt im Service ‚Äì Entwickler haben sofort Feedback.</li>
</ul>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>API-First lohnt sich</div><div class="admonitionContent_BuS1"><p>Der Mehraufwand am Anfang zahlt sich mehrfach aus: Konsistente Schnittstellen, weniger Reibung zwischen Teams, schnellere Entwicklung.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-fazit">üìå Fazit<a href="https://bri-b-dev.github.io/blog/api-first-springboot-kotlin#-fazit" class="hash-link" aria-label="Direkter Link zur üìå Fazit" title="Direkter Link zur üìå Fazit" translate="no">‚Äã</a></h2>
<p>API-First mit OpenAPI und Kotlin + Spring Boot bedeutet: <strong>erst Schnittstelle, dann Code</strong>.
Mit Generatoren f√ºr Stubs &amp; Clients wird der Prozess reproduzierbar, die Doku bleibt immer aktuell und Microservices k√∂nnen schneller integriert werden.</p>]]></content:encoded>
            <category>Spring Boot</category>
            <category>Kotlin</category>
            <category>OpenAPI</category>
            <category>Microservices</category>
            <category>Codegen</category>
            <category>API-first</category>
        </item>
        <item>
            <title><![CDATA[Terraform Patterns f√ºr AKS & Azure]]></title>
            <link>https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure</link>
            <guid>https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure</guid>
            <pubDate>Mon, 03 Feb 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Erfahrungen mit modularen Terraform-Setups f√ºr AKS ‚Äì von Modul-Design √ºber RBAC bis zu Network Policies und CI/CD.]]></description>
            <content:encoded><![CDATA[<p>AKS-Projekte wachsen schnell: <strong>Cluster, Node Pools, Identities, Netzwerke, ACR, Policies</strong> ‚Äì und pro Umgebung (dev/test/prod) variieren Parameter. Ohne Struktur wird die Codebasis fragil. In diesem Beitrag zeige ich <strong>bew√§hrte Terraform-Patterns</strong> f√ºr Azure &amp; AKS aus Projekten, inkl. <strong>RBAC</strong>- und <strong>Network-Policy</strong>-Fallstricken.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-modul-architektur-trennen-nach-verantwortlichkeiten">üß± Modul-Architektur: Trennen nach Verantwortlichkeiten<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-modul-architektur-trennen-nach-verantwortlichkeiten" class="hash-link" aria-label="Direkter Link zur üß± Modul-Architektur: Trennen nach Verantwortlichkeiten" title="Direkter Link zur üß± Modul-Architektur: Trennen nach Verantwortlichkeiten" translate="no">‚Äã</a></h2>
<p><strong>Ziel:</strong> Wiederverwendbare, klar geschnittene Module statt eines ‚ÄûMonolithen‚Äú.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">infra/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ modules/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ network/                 # VNet, Subnets, NSGs, UDR/NAT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ aks/                     # AKS-Cluster + Pools</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ identity/                # UAMI/MI + Role Assignments</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ acr/                     # Container Registry</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ monitoring/              # Log Analytics, Insights</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ policies/                # Azure Policy + AKS Add-Ons</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îî‚îÄ dns/                     # Private DNS Zonen</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ env/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îú‚îÄ dev/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îÇ  ‚îú‚îÄ main.tf               # Zusammensetzen der Module</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îÇ  ‚îú‚îÄ variables.tfvars</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îÇ  ‚îî‚îÄ backend.tf            # Remote State</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ  ‚îî‚îÄ prod/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ     ‚îú‚îÄ ...</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îî‚îÄ global/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   ‚îî‚îÄ rg.tf                    # Ressourcengruppen, Tags, Management</span><br></span></code></pre></div></div>
<p><strong>Pattern:</strong> Environments sind <strong>Kompositionen</strong> aus Modulen. Jedes Modul besitzt eine <strong>klare API</strong> (Inputs/Outputs) und minimale Seiteneffekte.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Keep Inputs simple</div><div class="admonitionContent_BuS1"><p>Vermeide riesige, verschachtelte <code>object</code>-Variablen. Lieber mehrere flache Inputs mit Defaults ‚Äì das reduziert <code>Unknown</code>-Diffs und erleichtert Upgrades.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-beispiel-aks-modul-interface">üîß Beispiel: AKS-Modul (Interface)<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-beispiel-aks-modul-interface" class="hash-link" aria-label="Direkter Link zur üîß Beispiel: AKS-Modul (Interface)" title="Direkter Link zur üîß Beispiel: AKS-Modul (Interface)" translate="no">‚Äã</a></h2>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "location" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "resource_group_name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "kubernetes_version" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "network_profile" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin           = string   # azure, kubenet, cni_overlay</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr         = optional(string)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr     = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type    = string   # loadBalancer, userDefinedRouting, managedNATGateway</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "enable_azure_rbac" { type = bool, default = true }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "aad_admin_group_object_ids" { type = list(string), default = [] }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "system_node_pool" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name       = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size    = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count  = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count  = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku     = optional(string, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "user_node_pools" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = list(object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name       = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size    = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count  = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count  = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    taints     = optional(list(string), [])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    labels     = optional(map(string), {})</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    mode       = optional(string, "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "kubelet_identity_principal_id" { value = azurerm_kubernetes_cluster.this.kubelet_identity[0].object_id }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "cluster_id" { value = azurerm_kubernetes_cluster.this.id }</span><br></span></code></pre></div></div>
<blockquote>
<p><strong>Hinweis:</strong> Abh√§ngig von Provider-Versionen unterscheiden sich Block‚ÄëNamen/Flags. Kapsle Version-Spezifika <strong>im Modul</strong> und biete stabile Inputs nach au√üen.</p>
</blockquote>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-rbac--identit√§ten-h√§ufige-fallstricke">ü™™ RBAC &amp; Identit√§ten: h√§ufige Fallstricke<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-rbac--identit%C3%A4ten-h%C3%A4ufige-fallstricke" class="hash-link" aria-label="Direkter Link zur ü™™ RBAC &amp; Identit√§ten: h√§ufige Fallstricke" title="Direkter Link zur ü™™ RBAC &amp; Identit√§ten: h√§ufige Fallstricke" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-azure-rbac-vs-kubernetes-rbac">1) Azure RBAC vs. Kubernetes RBAC<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#1-azure-rbac-vs-kubernetes-rbac" class="hash-link" aria-label="Direkter Link zur 1) Azure RBAC vs. Kubernetes RBAC" title="Direkter Link zur 1) Azure RBAC vs. Kubernetes RBAC" translate="no">‚Äã</a></h3>
<ul>
<li><strong>Azure RBAC f√ºr Kubernetes</strong> ("AKS-managed AAD") vereinfacht die AuthN/AuthZ, aber <strong>Mapping &amp; Propagation</strong> dauern ggf. Sekunden/Minuten.</li>
<li><strong>Pattern:</strong> Lege <strong>AAD-Gruppen</strong> f√ºr Cluster‚ÄëRollen an (z.‚ÄØB. <code>aks-admins</code>, <code>aks-devs</code>) und reiche deren Objekt‚ÄëIDs als Modul‚ÄëInput durch.</li>
</ul>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Pseudocode ‚Äì Modul nutzt diese IDs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "aad_admin_group_object_ids" { type = list(string) }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Im Cluster‚ÄëBlock: AAD/RBAC aktivieren und Gruppen als Admins registrieren</span><br></span></code></pre></div></div>
<p><strong>Anti‚ÄëPattern:</strong> Einzelne User direkt hinterlegen ‚Üí schwer wartbar, keine Rotation.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-kubeletacr-berechtigungen">2) Kubelet/ACR Berechtigungen<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#2-kubeletacr-berechtigungen" class="hash-link" aria-label="Direkter Link zur 2) Kubelet/ACR Berechtigungen" title="Direkter Link zur 2) Kubelet/ACR Berechtigungen" translate="no">‚Äã</a></h3>
<ul>
<li>Damit Nodes Images ziehen k√∂nnen: <code>AcrPull</code> auf <strong>ACR</strong> f√ºr die <strong>Kubelet-Identity</strong>.</li>
<li>Zus√§tzlich: Build/Push‚ÄëPipeline ‚Üí <code>AcrPush</code> f√ºr CI‚ÄëService‚ÄëPrincipal oder UAMI.</li>
</ul>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_role_assignment" "kubelet_acr_pull" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  scope                = azurerm_container_registry.acr.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  role_definition_name = "AcrPull"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  principal_id         = module.aks.kubelet_identity_principal_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-netzwerkrollen">3) Netzwerk‚ÄëRollen<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#3-netzwerkrollen" class="hash-link" aria-label="Direkter Link zur 3) Netzwerk‚ÄëRollen" title="Direkter Link zur 3) Netzwerk‚ÄëRollen" translate="no">‚Äã</a></h3>
<ul>
<li>Bei <strong>UDR/NAT Gateway</strong>: <code>Network Contributor</code> auf Subnet/RouteTable f√ºr die <strong>AKS‚ÄëMI</strong> (Cluster Identity) ‚Äì sonst schl√§gt Provisioning/Scale fehl.</li>
</ul>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>Eventual Consistency</div><div class="admonitionContent_BuS1"><p>Role Assignments sind <strong>eventual consistent</strong>. Plane Wartezeiten/<code>depends_on</code> ein oder nutze ein Retry‚ÄëWrapper‚ÄëModul.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-network-policies-praxis-statt-theorie">üîê Network Policies: Praxis statt Theorie<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-network-policies-praxis-statt-theorie" class="hash-link" aria-label="Direkter Link zur üîê Network Policies: Praxis statt Theorie" title="Direkter Link zur üîê Network Policies: Praxis statt Theorie" translate="no">‚Äã</a></h2>
<p><strong>Ziel:</strong> Default‚ÄëDeny auf Pod‚ÄëEbene + gezielte Allow‚ÄëRegeln.</p>
<ul>
<li><strong>CNI/Policy-Matrix</strong> unterscheidet sich je nach AKS‚ÄëVersion: Azure CNI (Classic/Overlay) &amp; Kubenet verhalten sich unterschiedlich.</li>
<li><strong>Pattern:</strong> Parametrisiere Policy‚ÄëEngine (<code>azure</code>, <code>calico</code>) als Modul‚ÄëInput und generiere <strong>Basisregeln</strong> zentral.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="baseline-namespaceseitig--default-deny">Baseline (Namespaceseitig) ‚Äì Default Deny<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#baseline-namespaceseitig--default-deny" class="hash-link" aria-label="Direkter Link zur Baseline (Namespaceseitig) ‚Äì Default Deny" title="Direkter Link zur Baseline (Namespaceseitig) ‚Äì Default Deny" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> networking.k8s.io/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> NetworkPolicy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> default</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">deny</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">namespace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> myns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">podSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">policyTypes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">Ingress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Egress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="allow-ingress-vom-ingress-controller--dns-egress">Allow: Ingress vom Ingress-Controller + DNS Egress<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#allow-ingress-vom-ingress-controller--dns-egress" class="hash-link" aria-label="Direkter Link zur Allow: Ingress vom Ingress-Controller + DNS Egress" title="Direkter Link zur Allow: Ingress vom Ingress-Controller + DNS Egress" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> networking.k8s.io/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> NetworkPolicy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> allow</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">ingress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">from</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">gateway</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">namespace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> myns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">podSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">ingress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">from</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">namespaceSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">kubernetes.io/metadata.name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ingress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">egress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">to</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">namespaceSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">kubernetes.io/metadata.name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kube</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">ports</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">protocol</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> UDP</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">port</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">53</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Test</div><div class="admonitionContent_BuS1"><p>Validiere Policies mit <code>netshoot</code>, <code>curl</code>, <code>dig</code> und CI‚ÄëChecks (z.‚ÄØB. Kyverno/OPA‚ÄëConstraints). Automatisierte Smoke‚ÄëTests sind Gold wert.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-netzwerk-setup-bew√§hrte-optionen">üåê Netzwerk-Setup: bew√§hrte Optionen<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-netzwerk-setup-bew%C3%A4hrte-optionen" class="hash-link" aria-label="Direkter Link zur üåê Netzwerk-Setup: bew√§hrte Optionen" title="Direkter Link zur üåê Netzwerk-Setup: bew√§hrte Optionen" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Outbound</strong>: <code>managedNATGateway</code> oder <code>userDefinedRouting</code> mit Azure Firewall.</li>
<li><strong>Private Cluster</strong>: Private Endpoint + DNS Zonen, Jump‚ÄëHost/Bastion f√ºr <code>kubectl</code>.</li>
<li><strong>Ingress</strong>: AGIC oder NGINX; bei Private Cluster ‚Üí interne LoadBalancer/Private Link.</li>
<li><strong>Egress‚ÄëLockdown</strong>: Azure Firewall DNAT/Anwendungsregeln; Policies f√ºr verbotene Public‚ÄëIPs.</li>
</ul>
<p><strong>Pattern:</strong> Netz‚ÄëModul liefert <strong>Subnet‚ÄëIDs</strong>/Routen als Outputs an das AKS‚ÄëModul; keine zirkul√§ren Abh√§ngigkeiten.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-environments-workspaces--state">üß™ Environments, Workspaces &amp; State<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-environments-workspaces--state" class="hash-link" aria-label="Direkter Link zur üß™ Environments, Workspaces &amp; State" title="Direkter Link zur üß™ Environments, Workspaces &amp; State" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Remote State</strong> in Azure Storage (Blob) mit <strong>State‚ÄëLocking</strong> via Storage Lease.</li>
<li><strong>One workspace per environment</strong> (z.‚ÄØB. <code>dev</code>, <code>prod</code>) ‚Äì kein Mischen.</li>
<li><strong>tfvars</strong> pro Umgebung + <code>locals</code> f√ºr abgeleitete Werte (Tags, Namenskonventionen, CIDRs).</li>
</ul>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># backend.tf (je Env)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  backend "azurerm" {}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  required_version = "&gt;= 1.7.0"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  required_providers {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    azurerm = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      source  = "hashicorp/azurerm"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      version = "~&gt; 3.100"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Namenskonventionen</div><div class="admonitionContent_BuS1"><p>Ein <code>locals.naming</code>‚ÄëBlock vereinheitlicht Ressourcennamen √ºber alle Module (Prefix/Env/Location).</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-cicd--sicherheit">üö¶ CI/CD &amp; Sicherheit<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-cicd--sicherheit" class="hash-link" aria-label="Direkter Link zur üö¶ CI/CD &amp; Sicherheit" title="Direkter Link zur üö¶ CI/CD &amp; Sicherheit" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Pipeline‚ÄëMatrix</strong> pro Umfeld (Plan/Apply) mit manueller Freigabe f√ºr prod.</li>
<li><strong>Pre‚ÄëCommit</strong>: <code>terraform fmt</code>, <code>tflint</code>, <code>tfsec</code>/<code>checkov</code>, <code>terrascan</code>.</li>
<li><strong>Drift Detection</strong>: <code>terraform plan</code> on schedule ‚Üí Slack/Teams‚ÄëReport.</li>
<li><strong>Plan‚ÄëArtefakte</strong> signieren/archivieren.</li>
<li><strong>Provider‚ÄëPins</strong> + Renovate/Bump PRs ‚Üí reproduzierbare Builds.</li>
</ul>
<p><strong>Pattern:</strong> <code>make plan ENV=dev</code> ruft <code>terraform workspace select dev</code> + <code>-var-file=env/dev/variables.tfvars</code> auf ‚Äì identische Befehle lokal und in CI.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-komplettes-aks-beispiel-gek√ºrzt">üì¶ Komplettes AKS-Beispiel (gek√ºrzt)<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-komplettes-aks-beispiel-gek%C3%BCrzt" class="hash-link" aria-label="Direkter Link zur üì¶ Komplettes AKS-Beispiel (gek√ºrzt)" title="Direkter Link zur üì¶ Komplettes AKS-Beispiel (gek√ºrzt)" translate="no">‚Äã</a></h2>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">module "network" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  source              = "../modules/network"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = local.naming.net</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  address_space       = ["10.40.0.0/16"]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  subnets = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    aks_nodes = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      prefix = "10.40.1.0/24"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      nsg_rules = ["deny_internet_in", "allow_vnet"]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">module "acr" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  source              = "../modules/acr"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = local.naming.acr</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  sku                 = "Standard"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">module "aks" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  source                  = "../modules/aks"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                    = local.naming.aks</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location                = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name     = azurerm_resource_group.rg.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_version      = var.k8s_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  network_profile = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin         = "azure"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr   = "10.41.0.0/16"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip = "10.41.0.10"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type  = "managedNATGateway"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  system_node_pool = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name      = "sys"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size   = "Standard_D4s_v5"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count = 1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count = 3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  user_node_pools = [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      name = "user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      vm_size = "Standard_D8s_v5"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      min_count = 2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      max_count = 10</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      labels = { "kubernetes.azure.com/mode" = "user" }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  enable_azure_rbac            = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  aad_admin_group_object_ids   = var.aad_admin_groups</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Role Assignment f√ºr Kubelet ‚Üí ACR Pull</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_role_assignment" "kubelet_acr" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  scope                = module.acr.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  role_definition_name = "AcrPull"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  principal_id         = module.aks.kubelet_identity_principal_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-checkliste--was-gerne-schiefgeht">üß≠ Checkliste ‚Äì Was gerne schiefgeht<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-checkliste--was-gerne-schiefgeht" class="hash-link" aria-label="Direkter Link zur üß≠ Checkliste ‚Äì Was gerne schiefgeht" title="Direkter Link zur üß≠ Checkliste ‚Äì Was gerne schiefgeht" translate="no">‚Äã</a></h2>
<ul class="contains-task-list containsTaskList_mC6p">
<li class="task-list-item"><input type="checkbox" disabled=""> <code>AcrPull</code> f√ºr <strong>Kubelet</strong> vergessen ‚Üí ImagePullBackOff</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Subnet/RT/NAT Rechte fehlen ‚Üí AKS Provisioning h√§ngt</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Azure RBAC Gruppen nicht propagiert ‚Üí Admins k√∂nnen nicht joinen (abwarten/retry)</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Network Policies greifen nicht (Policy‚ÄëEngine/CNI passt nicht zur Cluster‚ÄëConfig)</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Private DNS nicht konfiguriert ‚Üí Control Plane/Ingress/ACR nicht erreichbar</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Provider‚ÄëUpgrade ohne Modul‚ÄëKapselung ‚Üí Breaking Changes √ºberall</li>
</ul>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>Production Readiness</div><div class="admonitionContent_BuS1"><p>Vor Prod‚ÄëRollout: e2e‚ÄëTests (Deployments, Pull aus ACR, Ingress, DNS, Policy‚ÄëSmoke), Loadtests, Failover (Node Drain, Pool‚ÄëScaling), Backup/Restore (etcd/Velero), Secrets‚ÄëPfad (Key Vault + CSI).</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-fazit">üìå Fazit<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-fazit" class="hash-link" aria-label="Direkter Link zur üìå Fazit" title="Direkter Link zur üìå Fazit" translate="no">‚Äã</a></h2>
<p>Ein <strong>modulares Terraform‚ÄëDesign</strong> f√ºr AKS zahlt sich aus: klarere Zust√§ndigkeiten, weniger Drift, reproduzierbare Builds und kontrollierte Sicherheit. Mit sauberem RBAC, durchdachtem Netzwerk‚ÄëLayout und automatisierten Checks bleibt die Plattform <strong>skalierbar</strong> und <strong>betriebsstabil</strong>.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-vollst√§ndiges-aksmodul-beispiel">üì¶ Vollst√§ndiges AKS‚ÄëModul (Beispiel)<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-vollst%C3%A4ndiges-aksmodul-beispiel" class="hash-link" aria-label="Direkter Link zur üì¶ Vollst√§ndiges AKS‚ÄëModul (Beispiel)" title="Direkter Link zur üì¶ Vollst√§ndiges AKS‚ÄëModul (Beispiel)" translate="no">‚Äã</a></h2>
<p><strong><code>modules/aks/main.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_kubernetes_cluster" "this" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = var.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name = var.resource_group_name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dns_prefix          = "${var.name}-dns"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_version  = var.kubernetes_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  identity {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    type = "SystemAssigned"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default_node_pool {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name                = var.system_node_pool.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size             = var.system_node_pool.vm_size</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count           = var.system_node_pool.min_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count           = var.system_node_pool.max_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    enable_auto_scaling = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku              = var.system_node_pool.os_sku</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    mode                = "System"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dynamic "agent_pool_profile" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    for_each = var.user_node_pools</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    content {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      name                = agent_pool_profile.value.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      vm_size             = agent_pool_profile.value.vm_size</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      min_count           = agent_pool_profile.value.min_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      max_count           = agent_pool_profile.value.max_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      enable_auto_scaling = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      mode                = lookup(agent_pool_profile.value, "mode", "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      node_labels         = lookup(agent_pool_profile.value, "labels", null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      node_taints         = lookup(agent_pool_profile.value, "taints", null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  role_based_access_control_enabled = var.enable_azure_rbac</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  azure_active_directory_role_based_access_control {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    managed                = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    admin_group_object_ids = var.aad_admin_group_object_ids</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  network_profile {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_plugin     = var.network_profile.plugin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr       = var.network_profile.service_cidr</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip     = var.network_profile.dns_service_ip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr           = try(var.network_profile.pod_cidr, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type      = var.network_profile.outbound_type</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "kubelet_identity_principal_id" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  value = azurerm_kubernetes_cluster.this.kubelet_identity[0].object_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "id" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  value = azurerm_kubernetes_cluster.this.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<p><strong><code>modules/aks/variables.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "location" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "resource_group_name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "kubernetes_version" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "network_profile" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin         = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr       = optional(string)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type  = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "enable_azure_rbac" { type = bool }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "aad_admin_group_object_ids" { type = list(string) }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "system_node_pool" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name      = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku    = optional(string, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "user_node_pools" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = list(object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name      = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    mode      = optional(string, "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    labels    = optional(map(string))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    taints    = optional(list(string))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-azure-devops-pipeline-f√ºr-terraform-aks">üöÄ Azure DevOps Pipeline f√ºr Terraform AKS<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-azure-devops-pipeline-f%C3%BCr-terraform-aks" class="hash-link" aria-label="Direkter Link zur üöÄ Azure DevOps Pipeline f√ºr Terraform AKS" title="Direkter Link zur üöÄ Azure DevOps Pipeline f√ºr Terraform AKS" translate="no">‚Äã</a></h2>
<p><strong><code>.azure-pipelines/terraform-aks.yml</code></strong></p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">trigger</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">branches</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">include</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">variables</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">TF_VERSION</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'1.7.5'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">AZURE_SUBSCRIPTION</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'MyServiceConnection'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">ENVIRONMENT</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'dev'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">stages</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Validate &amp; Lint"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> lint</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ubuntu-latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> UseTerraform@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">terraformVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(TF_VERSION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">script</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              terraform fmt -check -recursive</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              terraform init -backend=false</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              terraform validate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform fmt &amp; validate"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">script</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">              tflint --recursive</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Run TFLint"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Plan"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ubuntu-latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> UseTerraform@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">terraformVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(TF_VERSION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> TerraformCLI@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Init"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'init'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">backendType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'azurerm'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">backendServiceArm</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(AZURE_SUBSCRIPTION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">ensureBackend</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">workingDirectory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'infra/env/$(ENVIRONMENT)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> TerraformCLI@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Plan"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'plan'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">environmentServiceName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(AZURE_SUBSCRIPTION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">workingDirectory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'infra/env/$(ENVIRONMENT)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">vars</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                environment=$(ENVIRONMENT)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">publish</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(System.DefaultWorkingDirectory)/infra/env/$(ENVIRONMENT)/tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">artifact</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apply</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Apply"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">condition</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> and(succeeded()</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> eq(variables</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'Build.SourceBranch'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 'refs/heads/main'))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">deployment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apply</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">environment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> aks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">$(ENVIRONMENT)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ubuntu-latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">strategy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">runOnce</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">deploy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> UseTerraform@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">terraformVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(TF_VERSION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">download</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> current</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token key atrule">artifact</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> TerraformCLI@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform Apply"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'apply'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">environmentServiceName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(AZURE_SUBSCRIPTION)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">workingDirectory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'infra/env/$(ENVIRONMENT)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">commandOptions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"tfplan"</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-ergebnis">üìå Ergebnis<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-ergebnis" class="hash-link" aria-label="Direkter Link zur üìå Ergebnis" title="Direkter Link zur üìå Ergebnis" translate="no">‚Äã</a></h2>
<p>Mit einem <strong>klar gekapselten AKS-Modul</strong> und einer <strong>CI/CD-Pipeline in Azure DevOps</strong> erh√§ltst du:</p>
<ul>
<li>reproduzierbare Cluster-Deployments</li>
<li>automatisierte Validierung (fmt, validate, lint)</li>
<li>Plan-Review mit Artefakten</li>
<li>manuelles oder automatisiertes Apply mit Service Connection</li>
<li>einfache Erweiterbarkeit (Drift Detection, Security Scans)</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-produktionsreifes-aksmodul-terraform">üß© Produktionsreifes AKS‚ÄëModul (Terraform)<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-produktionsreifes-aksmodul-terraform" class="hash-link" aria-label="Direkter Link zur üß© Produktionsreifes AKS‚ÄëModul (Terraform)" title="Direkter Link zur üß© Produktionsreifes AKS‚ÄëModul (Terraform)" translate="no">‚Äã</a></h2>
<blockquote>
<p>Struktur (als Beispiel):</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">modules/aks/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ main.tf</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ variables.tf</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ outputs.tf</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îî‚îÄ README.md</span><br></span></code></pre></div></div>
</blockquote>
<p><strong><code>modules/aks/variables.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "location" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "resource_group_name" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "kubernetes_version" { type = string }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "tags" { type = map(string), default = {} }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "identity_type" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  description = "system | user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type        = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default     = "system"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  validation {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    condition     = contains(["system", "user"], var.identity_type)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    error_message = "identity_type must be 'system' or 'user'"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "user_assigned_identity_ids" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  description = "Only used when identity_type=user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type        = list(string)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default     = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "network_profile" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin           = string                    # azure | kubenet | cni_overlay</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr     = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip   = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr         = optional(string)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type    = optional(string, "managedNATGateway") # loadBalancer | userDefinedRouting | managedNATGateway</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_policy   = optional(string, null)   # azure | calico | null</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "private_cluster_enabled" { type = bool, default = false }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "api_server_authorized_ip_ranges" { type = list(string), default = [] }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "aad_admin_group_object_ids" { type = list(string), default = [] }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "enable_azure_rbac" { type = bool, default = true }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "oms_workspace_resource_id" { type = string, default = null }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "enable_azure_policy_addon" { type = bool, default = false }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "system_node_pool" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name               = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size            = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count          = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count          = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_disk_size_gb    = optional(number, 128)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku             = optional(string, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_labels        = optional(map(string), {})</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_taints        = optional(list(string), [])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    zones              = optional(list(string), null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">variable "user_node_pools" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  description = "List of additional user pools"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type = list(object({</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name               = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size            = string</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count          = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count          = number</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_disk_size_gb    = optional(number, 128)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku             = optional(string, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_labels        = optional(map(string), {})</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_taints        = optional(list(string), [])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    mode               = optional(string, "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    zones              = optional(list(string), null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<p><strong><code>modules/aks/main.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Hinweis: Provider-Konfiguration (azurerm) wird au√üerhalb des Moduls gesetzt.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">locals {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  identity_block = var.identity_type == "user" ? {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    type         = "UserAssigned"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    identity_ids = var.user_assigned_identity_ids</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  } : {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    type = "SystemAssigned"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_kubernetes_cluster" "this" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = var.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name = var.resource_group_name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_version  = var.kubernetes_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dns_prefix          = replace(var.name, ".", "-")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  identity {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    type         = local.identity_block.type</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    identity_ids = try(local.identity_block.identity_ids, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  default_node_pool {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name                 = var.system_node_pool.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size              = var.system_node_pool.vm_size</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    orchestrator_version = var.kubernetes_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count            = var.system_node_pool.min_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count            = var.system_node_pool.max_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    enable_auto_scaling  = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_sku               = var.system_node_pool.os_sku</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    os_disk_size_gb      = var.system_node_pool.os_disk_size_gb</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_labels          = var.system_node_pool.node_labels</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_taints          = var.system_node_pool.node_taints</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    zones                = var.system_node_pool.zones</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    upgrade_settings {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      max_surge = "33%"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  network_profile {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_plugin    = var.network_profile.plugin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr      = var.network_profile.service_cidr</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip    = var.network_profile.dns_service_ip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_policy    = var.network_profile.network_policy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type     = var.network_profile.outbound_type</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pod_cidr          = try(var.network_profile.pod_cidr, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  api_server_access_profile {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    authorized_ip_ranges = var.api_server_authorized_ip_ranges</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  azure_active_directory_role_based_access_control {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    enabled                        = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    azure_rbac_enabled             = var.enable_azure_rbac</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    admin_group_object_ids         = var.aad_admin_group_object_ids</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  # Add-ons</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  dynamic "oms_agent" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    for_each = var.oms_workspace_resource_id == null ? [] : [1]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    content {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      log_analytics_workspace_id = var.oms_workspace_resource_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  azure_policy_enabled        = var.enable_azure_policy_addon</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  private_cluster_enabled     = var.private_cluster_enabled</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  sku_tier = "Paid" # Uptime SLA optional, anpassbar</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags = var.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Zus√§tzliche User Node Pools</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_kubernetes_cluster_node_pool" "user" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  for_each = { for p in var.user_node_pools : p.name =&gt; p }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_cluster_id = azurerm_kubernetes_cluster.this.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                  = each.value.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  vm_size               = each.value.vm_size</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  orchestrator_version  = var.kubernetes_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  mode                  = try(each.value.mode, "User")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  min_count             = each.value.min_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  max_count             = each.value.max_count</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  enable_auto_scaling   = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  os_disk_size_gb       = try(each.value.os_disk_size_gb, 128)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  os_sku                = try(each.value.os_sku, "Ubuntu")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  node_labels           = try(each.value.node_labels, {})</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  node_taints           = try(each.value.node_taints, [])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  zones                 = try(each.value.zones, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags = var.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<p><strong><code>modules/aks/outputs.tf</code></strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "id" { value = azurerm_kubernetes_cluster.this.id }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "kubelet_identity_principal_id" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  value = try(azurerm_kubernetes_cluster.this.kubelet_identity[0].object_id, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "principal_id" { # Cluster (control plane) MI bei SystemAssigned</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  value = try(azurerm_kubernetes_cluster.this.identity[0].principal_id, null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "host" { value = azurerm_kubernetes_cluster.this.kube_config[0].host }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output "name" { value = azurerm_kubernetes_cluster.this.name }</span><br></span></code></pre></div></div>
<p><strong><code>modules/aks/README.md</code></strong> (Kurz)</p>
<div class="language-md codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-md codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">Inputs kapseln AKS-Details (RBAC, Network, Private Cluster). Provider au√üerhalb konfigurieren. Role Assignments (ACR Pull, Subnet/RouteTable) au√üerhalb setzen.</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-azure-devops-pipeline-terraform-planapply-multienv">üîÅ Azure DevOps Pipeline (Terraform Plan/Apply, Multi‚ÄëEnv)<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-azure-devops-pipeline-terraform-planapply-multienv" class="hash-link" aria-label="Direkter Link zur üîÅ Azure DevOps Pipeline (Terraform Plan/Apply, Multi‚ÄëEnv)" title="Direkter Link zur üîÅ Azure DevOps Pipeline (Terraform Plan/Apply, Multi‚ÄëEnv)" translate="no">‚Äã</a></h2>
<blockquote>
<p>Voraussetzungen</p>
<ul>
<li>Azure DevOps <strong>Service Connection</strong> (ARM) mit <strong>Workload Identity/Federated Credentials</strong> f√ºr Subscription/Resource Group.</li>
<li>Azure Storage Backend f√ºr Terraform State (Container + Blob Locking via Lease).</li>
<li>Optional: Variable Groups f√ºr <code>ARM_*</code>/Backend‚ÄëParameter.</li>
</ul>
</blockquote>
<p><strong><code>azure-pipelines.yml</code></strong></p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">trigger</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">branches</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">include</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> main </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">pr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">branches</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">include</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> main</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> feature/* </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">variables</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">TF_VERSION</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'1.8.5'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">PROVIDER_AZURERM</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'~&gt; 3.113'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># Backend (per Variable Group setzbar)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">TF_BACKEND_RG</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'rg-tfstate'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">TF_BACKEND_SA</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'sttfstate1234'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">TF_BACKEND_CONTAINER</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'tfstate'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">TF_BACKEND_KEY</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'$(Build.Repository.Name).$(System.StageName).tfstate'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">stages</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Validate &amp; Security Checks"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ubuntu-latest'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">checkout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Bash@3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Install Terraform $(TF_VERSION)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">targetType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'inline'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">script</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          curl -sLo tf.zip https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          sudo unzip -o tf.zip -d /usr/local/bin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform -version</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Bash@3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform fmt &amp; init"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">ARM_USE_OIDC</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">targetType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'inline'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">script</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          cd infra/env/dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform fmt -check -recursive</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform validate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Bash@3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"tflint / tfsec"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">targetType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'inline'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">script</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          tflint --version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          tflint -f compact || true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          curl -sL https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          tfsec . || true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Plan (Dev)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Validate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> plan_dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"terraform plan dev"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ubuntu-latest'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">checkout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform init+plan (OIDC)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'AZURE-SP-WI'</span><span class="token plain">   </span><span class="token comment" style="color:rgb(98, 114, 164)"># Name eurer Service Connection</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          set -e</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          cd infra/env/dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform workspace select dev || terraform workspace new dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform plan -var-file=variables.tfvars -out=tfplan</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">publish</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> infra/env/dev/tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Publish plan artifact"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">artifact</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> tfplan</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Apply</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Apply (Dev)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">condition</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> and(succeeded()</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> eq(variables</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'Build.SourceBranch'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 'refs/heads/main'))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">deployment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apply_dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"terraform apply dev"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">environment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> dev </span><span class="token comment" style="color:rgb(98, 114, 164)"># optional: Environments mit Approvals sch√ºtzen</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">strategy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">runOnce</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">deploy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">checkout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Terraform init+apply"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'AZURE-SP-WI'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                set -e</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                cd infra/env/dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                  -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                  -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                  -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                  -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                terraform workspace select dev || terraform workspace new dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                terraform apply -auto-approve tfplan</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Plan_Prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Plan (Prod)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Apply</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">condition</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> and(succeeded()</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> eq(variables</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'Build.SourceBranch'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 'refs/heads/main'))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> plan_prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ubuntu-latest'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">checkout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Plan prod"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'AZURE-SP-WI'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          set -e</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          cd infra/env/prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">            -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform workspace select prod || terraform workspace new prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">          terraform plan -var-file=variables.tfvars -out=tfplan</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">publish</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> infra/env/prod/tfplan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">artifact</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> tfplan</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Apply_Prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Apply (Prod)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Plan_Prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">condition</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> and(succeeded()</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> eq(variables</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'Build.SourceBranch'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 'refs/heads/main'))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">deployment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apply_prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"terraform apply prod"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">environment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> prod </span><span class="token comment" style="color:rgb(98, 114, 164)"># Enforce manual approval in ADO Environment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">strategy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">runOnce</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">deploy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">checkout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> self</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Apply prod"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'AZURE-SP-WI'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                set -e</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                cd infra/env/prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                terraform init \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                  -backend-config="resource_group_name=$(TF_BACKEND_RG)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                  -backend-config="storage_account_name=$(TF_BACKEND_SA)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                  -backend-config="container_name=$(TF_BACKEND_CONTAINER)" \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                  -backend-config="key=$(TF_BACKEND_KEY)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                terraform workspace select prod || terraform workspace new prod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">                terraform apply -auto-approve tfplan</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="hinweise--best-practices">Hinweise &amp; Best Practices<a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#hinweise--best-practices" class="hash-link" aria-label="Direkter Link zur Hinweise &amp; Best Practices" title="Direkter Link zur Hinweise &amp; Best Practices" translate="no">‚Äã</a></h3>
<ul>
<li><strong>OIDC/Federated Credentials:</strong> Service Connection so konfigurieren, dass kein Secret n√∂tig ist (kein Service Principal Passwort im Repo).</li>
<li><strong>State pro Stage:</strong> Der Key <code>$(System.StageName)</code> im Backend trennt dev/prod sauber.</li>
<li><strong>Security Scans:</strong> <code>tflint</code>/<code>tfsec</code> sind <code>|| true</code>, damit Warnungen den Build nicht hart brechen ‚Äì in Prod optional erzwingen.</li>
<li><strong>Approvals:</strong> Azure DevOps <strong>Environments</strong> f√ºr manuelle Freigaben zwischen Stufen nutzen.</li>
<li><strong>Parallel Envs:</strong> F√ºr mehrere Envs <code>strategy: matrix</code> in Plan/Apply nutzen oder Envs als separate Stages definieren.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-beispiel-verwendung-des-aksmoduls-in-infraenvdevmaintf">üîó Beispiel: Verwendung des AKS‚ÄëModuls in <code>infra/env/dev/main.tf</code><a href="https://bri-b-dev.github.io/blog/terraform-patterns-aks-azure#-beispiel-verwendung-des-aksmoduls-in-infraenvdevmaintf" class="hash-link" aria-label="Direkter Link zur -beispiel-verwendung-des-aksmoduls-in-infraenvdevmaintf" title="Direkter Link zur -beispiel-verwendung-des-aksmoduls-in-infraenvdevmaintf" translate="no">‚Äã</a></h2>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  required_version = "&gt;= 1.8.0"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  required_providers {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    azurerm = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      source  = "hashicorp/azurerm"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      version = "~&gt; 3.113"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  backend "azurerm" {}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">provider "azurerm" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  features {}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  use_oidc = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">locals {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    env   = "dev"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    owner = "platform"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_resource_group" "rg" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name     = "rg-aks-dev"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags     = local.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">module "aks" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  source              = "../../modules/aks"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = "aks-dev-core"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name = azurerm_resource_group.rg.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  kubernetes_version  = var.k8s_version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags                = local.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  identity_type = "system"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  network_profile = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    plugin         = "azure"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    service_cidr   = "10.50.0.0/16"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    dns_service_ip = "10.50.0.10"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    outbound_type  = "managedNATGateway"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_policy = "azure"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  aad_admin_group_object_ids = var.aad_admin_groups</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  enable_azure_rbac          = true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  private_cluster_enabled           = false</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  api_server_authorized_ip_ranges   = []</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  system_node_pool = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name      = "sys"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vm_size   = "Standard_D4s_v5"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    min_count = 1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    max_count = 2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    node_labels = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "kubernetes.azure.com/mode" = "system"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  user_node_pools = [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      name      = "user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      vm_size   = "Standard_D8s_v5"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      min_count = 2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      max_count = 6</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      node_labels = {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        "kubernetes.azure.com/mode" = "user"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Beispiel: ACR + Role Assignment (au√üerhalb des Moduls)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_container_registry" "acr" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name                = "acrdevexample1234"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resource_group_name = azurerm_resource_group.rg.name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  location            = var.location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  sku                 = "Standard"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  admin_enabled       = false</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tags                = local.tags</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "azurerm_role_assignment" "kubelet_acr_pull" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  scope                = azurerm_container_registry.acr.id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  role_definition_name = "AcrPull"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  principal_id         = module.aks.kubelet_identity_principal_id</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>]]></content:encoded>
            <category>Terraform</category>
            <category>AKS</category>
            <category>Azure</category>
            <category>RBAC</category>
            <category>Network Policy</category>
            <category>Modules</category>
            <category>CI/CD</category>
        </item>
        <item>
            <title><![CDATA[AKS Node Selection: Physische Pools vs. Virtual Nodes]]></title>
            <link>https://bri-b-dev.github.io/blog/aks-node-selection</link>
            <guid>https://bri-b-dev.github.io/blog/aks-node-selection</guid>
            <pubDate>Mon, 27 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Strategien, um Workloads in AKS bevorzugt auf physischen User-Nodes laufen zu lassen ‚Äì mit automatischem Fallback auf Virtual Nodes.]]></description>
            <content:encoded><![CDATA[<p>In vielen Projekten ist das <strong>Kosten- und Ressourcenmodell</strong> entscheidend:</p>
<ul>
<li>Physische AKS-Node-Pools (<code>user nodes</code>) sind g√ºnstiger und f√ºr Dauer-Workloads optimiert.</li>
<li><strong>Virtual Nodes</strong> (auf Basis von Azure Container Instances) eignen sich ideal f√ºr <strong>Burst-Szenarien</strong> ‚Äì wenn kurzfristig mehr Kapazit√§t ben√∂tigt wird.</li>
</ul>
<p>üëâ Ziel: Workloads sollen <strong>immer zuerst</strong> die physischen Nodes nutzen, aber automatisch auf Virtual Nodes ausweichen, wenn dort keine Ressourcen mehr frei sind.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-grundlagen-node-pools-in-aks">‚öôÔ∏è Grundlagen: Node Pools in AKS<a href="https://bri-b-dev.github.io/blog/aks-node-selection#%EF%B8%8F-grundlagen-node-pools-in-aks" class="hash-link" aria-label="Direkter Link zur ‚öôÔ∏è Grundlagen: Node Pools in AKS" title="Direkter Link zur ‚öôÔ∏è Grundlagen: Node Pools in AKS" translate="no">‚Äã</a></h2>
<ul>
<li><strong>System Pool</strong>: interne AKS-Services</li>
<li><strong>User Pool</strong>: physische VM-basierten Nodes (z. B. VMSS mit Standard_D4s_v5)</li>
<li><strong>Virtual Node Pool</strong>: basiert auf ACI, hochskalierbar, Pay-per-Use, keine VM-Instanzkosten</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-herausforderung">üöß Herausforderung<a href="https://bri-b-dev.github.io/blog/aks-node-selection#-herausforderung" class="hash-link" aria-label="Direkter Link zur üöß Herausforderung" title="Direkter Link zur üöß Herausforderung" translate="no">‚Äã</a></h2>
<p>Kubernetes verteilt Pods standardm√§√üig gleichm√§√üig ‚Äì ohne ‚ÄûBevorzugung‚Äú.<br>
<!-- -->Wenn man Virtual Nodes <strong>nur als Notnagel</strong> einsetzen will, braucht es eine saubere Scheduling-Strategie.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-strategien-f√ºr-node-selection">‚úÖ Strategien f√ºr Node Selection<a href="https://bri-b-dev.github.io/blog/aks-node-selection#-strategien-f%C3%BCr-node-selection" class="hash-link" aria-label="Direkter Link zur ‚úÖ Strategien f√ºr Node Selection" title="Direkter Link zur ‚úÖ Strategien f√ºr Node Selection" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-nodeselector--taintstolerations">1. NodeSelector + Taints/Tolerations<a href="https://bri-b-dev.github.io/blog/aks-node-selection#1-nodeselector--taintstolerations" class="hash-link" aria-label="Direkter Link zur 1. NodeSelector + Taints/Tolerations" title="Direkter Link zur 1. NodeSelector + Taints/Tolerations" translate="no">‚Äã</a></h3>
<ul>
<li>User Nodes: keine speziellen Taints ‚Üí Pods laufen standardm√§√üig hier.</li>
<li>Virtual Nodes: mit Taint versehen (<code>virtual-kubelet.io/provider=azure:NoSchedule</code>).</li>
<li>Nur Pods, die <strong>tolerations</strong> setzen, d√ºrfen auf Virtual Nodes ausweichen.</li>
</ul>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">tolerations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"virtual-kubelet.io/provider"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Equal"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"azure"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">effect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"NoSchedule"</span><br></span></code></pre></div></div>
<p>‚û°Ô∏è Vorteil: volle Kontrolle, Default = User Nodes, Virtual Nodes = Fallback.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-affinity--preferred-scheduling">2. Affinity &amp; Preferred Scheduling<a href="https://bri-b-dev.github.io/blog/aks-node-selection#2-affinity--preferred-scheduling" class="hash-link" aria-label="Direkter Link zur 2. Affinity &amp; Preferred Scheduling" title="Direkter Link zur 2. Affinity &amp; Preferred Scheduling" translate="no">‚Äã</a></h3>
<p>Mit <code>nodeAffinity</code> l√§sst sich eine <strong>Pr√§ferenz</strong> ausdr√ºcken:</p>
<ul>
<li>‚ÄûBevorzuge User Nodes‚Äú (preferred)</li>
<li>‚ÄûErlaube Virtual Nodes‚Äú (soft)</li>
</ul>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">affinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">nodeAffinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">weight</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">preference</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">matchExpressions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kubernetes.azure.com/mode</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> In</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> user</span><br></span></code></pre></div></div>
<p>üëâ Erst wenn dort kein Platz mehr ist, werden Pods auch auf andere Nodes (inkl. Virtual Node) verteilt.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-workload-spezifische-steuerung">3. Workload-Spezifische Steuerung<a href="https://bri-b-dev.github.io/blog/aks-node-selection#3-workload-spezifische-steuerung" class="hash-link" aria-label="Direkter Link zur 3. Workload-Spezifische Steuerung" title="Direkter Link zur 3. Workload-Spezifische Steuerung" translate="no">‚Äã</a></h3>
<ul>
<li><strong>Batch-/Burst-Jobs</strong>: <code>tolerations</code> setzen, damit sie Virtual Nodes nutzen d√ºrfen.</li>
<li><strong>Dauerhafte Services</strong>: kein Taint/Toleration ‚Üí bleiben strikt auf physischen Nodes.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-visualisierung-scheduling-strategie">üìä Visualisierung: Scheduling-Strategie<a href="https://bri-b-dev.github.io/blog/aks-node-selection#-visualisierung-scheduling-strategie" class="hash-link" aria-label="Direkter Link zur üìä Visualisierung: Scheduling-Strategie" title="Direkter Link zur üìä Visualisierung: Scheduling-Strategie" translate="no">‚Äã</a></h2>
<!-- -->
<ul>
<li><strong>Pod A (Deployment)</strong>: bevorzugt User Nodes, f√§llt aber bei Ressourcenknappheit auf Virtual Nodes zur√ºck.</li>
<li><strong>Pod B (Job)</strong>: hat explizite Toleration ‚Üí darf direkt auf Virtual Nodes laufen.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-best-practices">üìå Best Practices<a href="https://bri-b-dev.github.io/blog/aks-node-selection#-best-practices" class="hash-link" aria-label="Direkter Link zur üìå Best Practices" title="Direkter Link zur üìå Best Practices" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Monitoring</strong>: genau tracken, wie viele Pods auf Virtual Nodes laufen (Kostenkontrolle).</li>
<li><strong>SLA</strong>: Virtual Nodes haben andere Limits (kein DaemonSet-Support, eingeschr√§nkte Features).</li>
<li><strong>Workload-Design</strong>: kurze Jobs und burstartige Lasten ‚Üí Virtual Nodes; kritische Systeme ‚Üí User Nodes.</li>
<li><strong>Kostenmodell</strong>: Physische Pools f√ºr Grundlast, Virtual Nodes nur f√ºr Spitzen.</li>
</ul>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Kostenfalle vermeiden</div><div class="admonitionContent_BuS1"><p>Setzt Limits und Autoscaling sauber, sonst landen zu viele Pods dauerhaft auf teuren Virtual Nodes!</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-fazit">üìå Fazit<a href="https://bri-b-dev.github.io/blog/aks-node-selection#-fazit" class="hash-link" aria-label="Direkter Link zur üìå Fazit" title="Direkter Link zur üìå Fazit" translate="no">‚Äã</a></h2>
<p>Mit <strong>Affinity, Taints &amp; Tolerations</strong> l√§sst sich ein zweistufiges Scheduling umsetzen:</p>
<ul>
<li>Dauerhafte Workloads laufen zuverl√§ssig und kosteneffizient auf physischen User Nodes.</li>
<li>Lastspitzen landen automatisch auf Virtual Nodes ‚Äì flexibel, skalierbar und ohne Overprovisioning.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-beispielmanifeste-deployment--batchjob">üì¶ Beispiel‚ÄëManifeste (Deployment &amp; BatchJob)<a href="https://bri-b-dev.github.io/blog/aks-node-selection#-beispielmanifeste-deployment--batchjob" class="hash-link" aria-label="Direkter Link zur üì¶ Beispiel‚ÄëManifeste (Deployment &amp; BatchJob)" title="Direkter Link zur üì¶ Beispiel‚ÄëManifeste (Deployment &amp; BatchJob)" translate="no">‚Äã</a></h2>
<blockquote>
<p>Annahmen:</p>
<ul>
<li><strong>User Nodes</strong> tragen das Label: <code>kubernetes.azure.com/mode=user</code></li>
<li><strong>Virtual Nodes</strong> sind mit <code>virtual-kubelet.io/provider=azure:NoSchedule</code> getaintet</li>
<li>Cluster hat mindestens einen Linux Virtual Node (ACI)</li>
</ul>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-deployment-bevorzugt-user-nodes-fallback-auf-virtual-node">1) Deployment: bevorzugt User Nodes, Fallback auf Virtual Node<a href="https://bri-b-dev.github.io/blog/aks-node-selection#1-deployment-bevorzugt-user-nodes-fallback-auf-virtual-node" class="hash-link" aria-label="Direkter Link zur 1) Deployment: bevorzugt User Nodes, Fallback auf Virtual Node" title="Direkter Link zur 1) Deployment: bevorzugt User Nodes, Fallback auf Virtual Node" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">labels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">replicas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">selector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">labels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∂ Bevorzuge physische User-Nodes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">affinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">nodeAffinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">weight</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">preference</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token key atrule">matchExpressions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kubernetes.azure.com/mode</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> In</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"user"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∑ Erlaube Fallback auf Virtual Nodes (Taint tolerieren)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">tolerations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"virtual-kubelet.io/provider"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Equal"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"azure"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">effect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"NoSchedule"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∏ Optional: Verteile Pods √ºber User-Nodes (Kosten &amp; Resilienz)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">topologySpreadConstraints</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">maxSkew</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">topologyKey</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kubernetes.io/hostname</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">whenUnsatisfiable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ScheduleAnyway</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">labelSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">containers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ghcr.io/example/web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">1.2.3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">ports</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">containerPort</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">resources</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">requests</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">cpu</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"250m"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">memory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"256Mi"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">limits</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">cpu</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">memory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"512Mi"</span><br></span></code></pre></div></div>
<blockquote>
<p>Ergebnis: Solange auf User-Nodes Ressourcen frei sind, werden dort alle Replikas platziert. Erst bei Knappheit d√ºrfen Pods dank <strong>Toleration</strong> auch auf Virtual Nodes geplant werden.</p>
</blockquote>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-batchjob-bevorzugt-virtual-node-um-user-pool-zu-schonen">2) BatchJob: bevorzugt Virtual Node, um User-Pool zu schonen<a href="https://bri-b-dev.github.io/blog/aks-node-selection#2-batchjob-bevorzugt-virtual-node-um-user-pool-zu-schonen" class="hash-link" aria-label="Direkter Link zur 2) BatchJob: bevorzugt Virtual Node, um User-Pool zu schonen" title="Direkter Link zur 2) BatchJob: bevorzugt Virtual Node, um User-Pool zu schonen" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> batch/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Job</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> image</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">transcode</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">completions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">parallelism</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">backoffLimit</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∂ Bevorzuge Virtual Node (weich), erlaube aber User als Backup</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">affinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">nodeAffinity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">weight</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">preference</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token key atrule">matchExpressions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> kubernetes.io/role</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> In</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token key atrule">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"virtual-node"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># ‚ù∑ Toleration f√ºr den Virtual-Node-Taint (n√∂tig zum Scheduling)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">tolerations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"virtual-kubelet.io/provider"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Equal"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"azure"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">effect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"NoSchedule"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">restartPolicy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Never</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">containers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> worker</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ghcr.io/example/transcoder</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">2.0.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"--input"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"$(INPUT)"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"--output"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"$(OUTPUT)"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> INPUT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/data/in"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> OUTPUT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/data/out"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">resources</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">requests</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">cpu</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">memory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"1Gi"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">limits</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">cpu</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"2"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">memory</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"2Gi"</span><br></span></code></pre></div></div>
<blockquote>
<p>Hinweis: Der Key <code>kubernetes.io/role=virtual-node</code> ist <strong>ein Beispiel-Label</strong>. In vielen Clustern existiert bereits ein passendes Label auf Virtual Nodes (z.‚ÄØB. <code>type=virtual-kubelet</code> oder <code>kubernetes.azure.com/virtual-node=true</code>). Passe den <strong>Match-Expression</strong> an eure tats√§chlichen Node-Labels an.</p>
</blockquote>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-variante-striktes-trennen-per-nodeselector">3) Variante: Striktes Trennen per NodeSelector<a href="https://bri-b-dev.github.io/blog/aks-node-selection#3-variante-striktes-trennen-per-nodeselector" class="hash-link" aria-label="Direkter Link zur 3) Variante: Striktes Trennen per NodeSelector" title="Direkter Link zur 3) Variante: Striktes Trennen per NodeSelector" translate="no">‚Äã</a></h3>
<p>Wenn bestimmte Workloads <strong>nie</strong> auf Virtual Nodes laufen sollen, nutze einen harten <code>nodeSelector</code> auf User-Nodes <strong>ohne</strong> Toleration:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">nodeSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">kubernetes.azure.com/mode</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"user"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)"># Keine Toleration ‚Üí kein Scheduling auf Virtual Nodes m√∂glich</span><br></span></code></pre></div></div>
<p>Und umgekehrt (nur Virtual Node):</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">tolerations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"virtual-kubelet.io/provider"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">operator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Equal"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"azure"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">effect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"NoSchedule"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">nodeSelector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">kubernetes.azure.com/virtual-node</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"true"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># Beispiel-Label, bei euch anpassen</span><br></span></code></pre></div></div>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-horizontal-pod-autoscaler-hpa-als-burst-trigger">4) Horizontal Pod Autoscaler (HPA) als Burst-Trigger<a href="https://bri-b-dev.github.io/blog/aks-node-selection#4-horizontal-pod-autoscaler-hpa-als-burst-trigger" class="hash-link" aria-label="Direkter Link zur 4) Horizontal Pod Autoscaler (HPA) als Burst-Trigger" title="Direkter Link zur 4) Horizontal Pod Autoscaler (HPA) als Burst-Trigger" translate="no">‚Äã</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> autoscaling/v2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> HorizontalPodAutoscaler</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">scaleTargetRef</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">minReplicas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">maxReplicas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">30</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">metrics</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Resource</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">resource</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> cpu</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">target</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Utilization</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">averageUtilization</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">70</span><br></span></code></pre></div></div>]]></content:encoded>
            <category>Kubernetes</category>
            <category>AKS</category>
            <category>Azure</category>
            <category>Nodepool</category>
            <category>Virtual Node</category>
            <category>Scheduling</category>
        </item>
        <item>
            <title><![CDATA[Streaming File Uploads nach Azure Blob Storage mit Spring Boot]]></title>
            <link>https://bri-b-dev.github.io/blog/springboot-fileupload-azure</link>
            <guid>https://bri-b-dev.github.io/blog/springboot-fileupload-azure</guid>
            <pubDate>Mon, 20 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Speicherschonende Verarbeitung gro√üer Uploads direkt in Azure Storage ‚Äì ohne Zwischenspeicherung im RAM.]]></description>
            <content:encoded><![CDATA[<p>Wer gro√üe Dateien (mehrere Gigabyte) √ºber eine Webanwendung hochladen m√∂chte, st√∂√üt schnell an Grenzen:</p>
<ul>
<li>Klassische Multipart-Verarbeitung l√§dt alles in den Speicher oder auf die Platte.</li>
<li>Uploads dauern lange und blockieren Threads.</li>
<li>Fehler beim Upload f√ºhren zu inkonsistenten Datenst√§nden.</li>
</ul>
<p>Mit einem <strong>streamingbasierten Ansatz</strong> k√∂nnen Dateien direkt beim Upload in Azure Blob Storage geschrieben werden ‚Äì ohne dass sie jemals im RAM oder auf der Platte zwischengespeichert werden.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-setup">‚öôÔ∏è Setup<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#%EF%B8%8F-setup" class="hash-link" aria-label="Direkter Link zur ‚öôÔ∏è Setup" title="Direkter Link zur ‚öôÔ∏è Setup" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Spring Boot + Kotlin</strong> als Basis</li>
<li><a href="https://commons.apache.org/proper/commons-fileupload/" target="_blank" rel="noopener noreferrer"><code>commons-fileupload2-core</code></a> f√ºr das Streaming-Multipart-Parsing</li>
<li><strong>Azure Blob Storage SDK</strong> f√ºr das Schreiben von Streams in Blobs</li>
<li><strong>SAS-Tokens</strong> f√ºr scoped &amp; zeitlich begrenzten Zugriff</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="streaming-multipart-upload">Streaming Multipart Upload<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#streaming-multipart-upload" class="hash-link" aria-label="Direkter Link zur Streaming Multipart Upload" title="Direkter Link zur Streaming Multipart Upload" translate="no">‚Äã</a></h3>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> iterator </span><span class="token operator">=</span><span class="token plain"> FileUploadStreaming</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getItemIterator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">iterator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">hasNext</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> item </span><span class="token operator">=</span><span class="token plain"> iterator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">next</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">isFormField</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> blobClient </span><span class="token operator">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        blobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlockBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">inputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>üëâ Keine Datei landet auf der Platte oder im Arbeitsspeicher ‚Äì der InputStream wird direkt nach Azure durchgereicht.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-erweiterung-mime-type-mit-tika-ermitteln">üîç Erweiterung: MIME-Type mit Tika ermitteln<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#-erweiterung-mime-type-mit-tika-ermitteln" class="hash-link" aria-label="Direkter Link zur üîç Erweiterung: MIME-Type mit Tika ermitteln" title="Direkter Link zur üîç Erweiterung: MIME-Type mit Tika ermitteln" translate="no">‚Äã</a></h2>
<p>Oft reicht der vom Client mitgelieferte <code>Content-Type</code> nicht. Um den <strong>tats√§chlichen MIME-Type</strong> zu bestimmen, kann ein <strong>Custom InputStream</strong> genutzt werden, der die ersten Bytes cached, damit <a href="https://tika.apache.org/" target="_blank" rel="noopener noreferrer">Apache Tika</a> eine Erkennung vornehmen kann:</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">TikaInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> source</span><span class="token operator">:</span><span class="token plain"> InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> buffer </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ByteArrayOutputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">var</span><span class="token plain"> replay</span><span class="token operator">:</span><span class="token plain"> ByteArrayInputStream</span><span class="token operator">?</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">var</span><span class="token plain"> probed </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> replayStream </span><span class="token operator">=</span><span class="token plain"> replay</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">replayStream </span><span class="token operator">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            replayStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> b </span><span class="token operator">=</span><span class="token plain"> source</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token plain">probed </span><span class="token operator">&amp;&amp;</span><span class="token plain"> b </span><span class="token operator">!=</span><span class="token plain"> </span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> buffer</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">write</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            b</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">detectMimeType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> String </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token plain">probed</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            probed </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> bytes </span><span class="token operator">=</span><span class="token plain"> buffer</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            replay </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ByteArrayInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">Tika</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">detect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/octet-stream"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>‚ö° Vorteil: MIME-Erkennung passiert <strong>im Stream</strong>, ohne dass die Datei vollst√§ndig eingelesen werden muss.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-on-the-fly-kompression">üì¶ On-the-Fly-Kompression<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#-on-the-fly-kompression" class="hash-link" aria-label="Direkter Link zur üì¶ On-the-Fly-Kompression" title="Direkter Link zur üì¶ On-the-Fly-Kompression" translate="no">‚Äã</a></h2>
<p>F√ºr bestimmte Datentypen lohnt sich <strong>On-the-fly-Kompression</strong>. Dabei wird der Upload-Stream direkt in einen <code>GZIPOutputStream</code> verpackt, bevor er nach Azure wandert:</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> blobClient </span><span class="token operator">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"</span><span class="token string-literal singleline interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">${</span><span class="token string-literal singleline interpolation expression">item</span><span class="token string-literal singleline interpolation expression punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token string-literal singleline interpolation expression">name</span><span class="token string-literal singleline interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">.gz"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">blobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlockBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">GZIPOutputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">inputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// ggf. unbekannt, dann -1 und chunked upload verwenden</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre></div></div>
<ul>
<li>Spart massiv Speicherplatz und Bandbreite.</li>
<li>Sollte <strong>optional</strong> sein (z. B. abh√§ngig vom MIME-Type aus Tika).</li>
<li>Achtung bei Bin√§rdateien (Videos, Bilder): hier bringt Kompression meist keinen Vorteil.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-stolpersteine">üöß Stolpersteine<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#-stolpersteine" class="hash-link" aria-label="Direkter Link zur üöß Stolpersteine" title="Direkter Link zur üöß Stolpersteine" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Multipart-Parsing:</strong> Streams m√ºssen zuverl√§ssig geschlossen werden.</li>
<li><strong>Content-Length:</strong> Nicht immer vom Client geliefert ‚Üí evtl. chunked Upload nutzen.</li>
<li><strong>Fehlerhandling:</strong> Bei Upload-Abbruch m√ºssen ggf. auch Metadaten zur√ºckgerollt werden.</li>
<li><strong>Tika + Kompression:</strong> Erkennung zuerst durchf√ºhren, danach ggf. komprimieren.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-best-practices">‚úÖ Best Practices<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#-best-practices" class="hash-link" aria-label="Direkter Link zur ‚úÖ Best Practices" title="Direkter Link zur ‚úÖ Best Practices" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Backpressure</strong>: Uploads niemals puffern, sondern durchstreamen.</li>
<li><strong>Trennung von Metadaten &amp; Storage</strong>: eigene Services f√ºr Verantwortlichkeiten.</li>
<li><strong>SAS-Tokens</strong>: mit Prefix-Scopes und kurzer Laufzeit generieren.</li>
<li><strong>Kombination Tika + Kompression</strong>: Nur komprimieren, wenn es wirklich Sinn ergibt.</li>
</ul>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Praxisnutzen</div><div class="admonitionContent_BuS1"><p>Diese Technik nutzen wir in Produktionssystemen, um Uploads im Terabyte-Bereich performant, sicher und kostenoptimiert zu verarbeiten.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-fazit">üìå Fazit<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#-fazit" class="hash-link" aria-label="Direkter Link zur üìå Fazit" title="Direkter Link zur üìå Fazit" translate="no">‚Äã</a></h2>
<p>Streaming Uploads sind in Spring Boot <strong>machbar und produktionsreif</strong> ‚Äì und durch MIME-Erkennung sowie optionale On-the-fly-Kompression sogar noch flexibler.
Das Resultat: <strong>weniger Infrastrukturkosten, bessere Performance und h√∂here Robustheit</strong>.</p>
<hr>
<blockquote>
<p>Komplettes, lauff√§higes Beispiel: Streaming-Multipart mit <code>commons-fileupload2-core</code>, MIME-Erkennung via Apache Tika, optionale On‚Äëthe‚Äëfly‚ÄëKompression (GZIP) und Upload direkt in Azure Blob Storage √ºber SAS ‚Äì <strong>ohne</strong> RAM-/Disk-Puffer.</p>
</blockquote>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="projekt-setup-gradle-kotlin-dsl">Projekt-Setup (Gradle Kotlin DSL)<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#projekt-setup-gradle-kotlin-dsl" class="hash-link" aria-label="Direkter Link zur Projekt-Setup (Gradle Kotlin DSL)" title="Direkter Link zur Projekt-Setup (Gradle Kotlin DSL)" translate="no">‚Äã</a></h2>
<p><strong><code>build.gradle.kts</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">plugins </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.springframework.boot"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"3.3.0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"io.spring.dependency-management"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.1.5"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"jvm"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.9.24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"plugin.spring"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> version </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"1.9.24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">group </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.example"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">version </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"0.0.1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">sourceCompatibility </span><span class="token operator">=</span><span class="token plain"> JavaVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">VERSION_17</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">repositories </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">mavenCentral</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dependencies </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.springframework.boot:spring-boot-starter-web"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Azure Blob Storage SDK v12</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.azure:azure-storage-blob:12.26.0"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Streaming Multipart Parsing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.apache.commons:commons-fileupload2-core:2.0.0-M1"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Apache Tika f√ºr MIME-Erkennung</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.apache.tika:tika-core:2.9.2"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Jackson / Kotlin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"com.fasterxml.jackson.module:jackson-module-kotlin"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">implementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token function" style="color:rgb(80, 250, 123)">kotlin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"reflect"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">testImplementation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"org.springframework.boot:spring-boot-starter-test"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">tasks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">test</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useJUnitPlatform</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<blockquote>
<p><strong>Hinweis:</strong> Versionen ggf. auf den aktuellen Stand bringen.</p>
</blockquote>
<p><strong><code>src/main/resources/application.yaml</code></strong></p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">server</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">tomcat</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">max-swallow-size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">-1</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># verhindert Abbruch bei gro√üen Streams</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">max-http-form-post-size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">-1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)"># Vollqualifizierte SAS-URL des Containers, z. B.:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)"># https://&lt;account&gt;.blob.core.windows.net/&lt;container&gt;?sv=...&amp;sig=...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">containerSasUrl</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">AZURE_CONTAINER_SAS_URL</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">compression</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">enabled</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># globaler Schalter, kann pro Request √ºberschrieben werden</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="konfiguration-azure-blob-container-client">Konfiguration: Azure Blob Container Client<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#konfiguration-azure-blob-container-client" class="hash-link" aria-label="Direkter Link zur Konfiguration: Azure Blob Container Client" title="Direkter Link zur Konfiguration: Azure Blob Container Client" translate="no">‚Äã</a></h2>
<p><strong><code>src/main/kotlin/com/example/upload/AzureStorageConfig.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BlobContainerClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BlobContainerClientBuilder</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">boot</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">context</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">ConfigurationProperties</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">context</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Bean</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">context</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Configuration</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@Configuration</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> AzureStorageConfig </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@Bean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@ConfigurationProperties</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">prefix </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"azure.storage"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">azureStorageProps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">AzureStorageProps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@Bean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">blobContainerClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">props</span><span class="token operator">:</span><span class="token plain"> AzureStorageProps</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> BlobContainerClient </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token function" style="color:rgb(80, 250, 123)">BlobContainerClientBuilder</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">endpoint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">props</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">containerSasUrl</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">buildClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> AzureStorageProps </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">/** Vollst√§ndige Container-SAS-URL inkl. Token */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">lateinit</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">var</span><span class="token plain"> containerSasUrl</span><span class="token operator">:</span><span class="token plain"> String</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="utility-peekableinputstream--mime-erkennung-tika">Utility: PeekableInputStream + MIME-Erkennung (Tika)<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#utility-peekableinputstream--mime-erkennung-tika" class="hash-link" aria-label="Direkter Link zur Utility: PeekableInputStream + MIME-Erkennung (Tika)" title="Direkter Link zur Utility: PeekableInputStream + MIME-Erkennung (Tika)" translate="no">‚Äã</a></h2>
<p><strong><code>src/main/kotlin/com/example/upload/io/PeekableInputStream.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BufferedInputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">InputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * Wrappt einen InputStream, erlaubt Peek via mark/reset ohne volles Einlesen.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">PeekableInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">source</span><span class="token operator">:</span><span class="token plain"> InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> peekBufferSize</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">8192</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> inBuf </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">source</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">markSupported</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> source </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">BufferedInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">source</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> peekBufferSize</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b</span><span class="token operator">:</span><span class="token plain"> ByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> off</span><span class="token operator">:</span><span class="token plain"> Int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> len</span><span class="token operator">:</span><span class="token plain"> Int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> off</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> len</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">close</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">close</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">T</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">peek</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekLen</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> peekBufferSize</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> block</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">-&gt;</span><span class="token plain"> T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> T </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">mark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekLen</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> buf </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekLen</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> n </span><span class="token operator">=</span><span class="token plain"> inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">buf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        inBuf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">reset</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> slice </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">n </span><span class="token operator">&lt;=</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ByteArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> buf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">copyOf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">n</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">block</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">slice</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p><strong><code>src/main/kotlin/com/example/upload/mime/MimeDetector.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">mime</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PeekableInputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">tika</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Tika</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">object</span><span class="token plain"> MimeDetector </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> tika </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">Tika</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">detect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekable</span><span class="token operator">:</span><span class="token plain"> PeekableInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> fallback</span><span class="token operator">:</span><span class="token plain"> String </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/octet-stream"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> String </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        peekable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">peek</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> bytes </span><span class="token operator">-&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> detected </span><span class="token operator">=</span><span class="token plain"> runCatching </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> tika</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">detect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getOrNull</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            detected </span><span class="token operator">?:</span><span class="token plain"> fallback</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="service-streaming-upload-mit-optionaler-ontheflygzip">Service: Streaming Upload mit optionaler On‚Äëthe‚Äëfly‚ÄëGZIP<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#service-streaming-upload-mit-optionaler-ontheflygzip" class="hash-link" aria-label="Direkter Link zur Service: Streaming Upload mit optionaler On‚Äëthe‚Äëfly‚ÄëGZIP" title="Direkter Link zur Service: Streaming Upload mit optionaler On‚Äëthe‚Äëfly‚ÄëGZIP" translate="no">‚Äã</a></h2>
<p><strong><code>src/main/kotlin/com/example/upload/UploadService.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BlobContainerClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">specialized</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">BlockBlobClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PeekableInputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">mime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">MimeDetector</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">FileItemInputIterator</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">FileUpload</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">FileUploadException</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RequestContext</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">stereotype</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Service</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">io</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">InputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">util</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">zip</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">GZIPOutputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@Service</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">UploadService</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> container</span><span class="token operator">:</span><span class="token plain"> BlobContainerClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">data</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">UploadResult</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> files</span><span class="token operator">:</span><span class="token plain"> List</span><span class="token operator">&lt;</span><span class="token plain">FileInfo</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">data</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">FileInfo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> fieldName</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> filename</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> size</span><span class="token operator">:</span><span class="token plain"> Long</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> mimeType</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> compressed</span><span class="token operator">:</span><span class="token plain"> Boolean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> blobName</span><span class="token operator">:</span><span class="token plain"> String</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * Streamt Multipart-Dateien direkt nach Azure. Keine Zwischenpuffer/Tempfiles.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * @param request Spring/Servlet Request-Adapter f√ºr FileUpload2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * @param forceCompression optionaler Override (Header/Param)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">handleStreamingUpload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">request</span><span class="token operator">:</span><span class="token plain"> RequestContext</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> forceCompression</span><span class="token operator">:</span><span class="token plain"> Boolean</span><span class="token operator">?</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> UploadResult </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> iter</span><span class="token operator">:</span><span class="token plain"> FileItemInputIterator </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">FileUpload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getItemIterator</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> uploaded </span><span class="token operator">=</span><span class="token plain"> mutableListOf</span><span class="token operator">&lt;</span><span class="token plain">FileInfo</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">iter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">hasNext</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> item </span><span class="token operator">=</span><span class="token plain"> iter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">next</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">isFormField</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">continue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> originalName </span><span class="token operator">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">name </span><span class="token operator">?:</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"upload.bin"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> field </span><span class="token operator">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fieldName </span><span class="token operator">?:</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"file"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> size </span><span class="token operator">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">headers</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getHeader</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Content-Length"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toLongOrNull</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token comment" style="color:rgb(98, 114, 164)">// Eingangsstream peek-f√§hig machen</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> peekable </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">PeekableInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">inputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> mime </span><span class="token operator">=</span><span class="token plain"> MimeDetector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">detect</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> shouldCompress </span><span class="token operator">=</span><span class="token plain"> forceCompression</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token operator">?:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">shouldCompressMime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">mime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> compressed</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">shouldCompress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> nameGz </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"</span><span class="token string-literal singleline interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">$</span><span class="token string-literal singleline interpolation expression">originalName</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">.gz"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token function" style="color:rgb(80, 250, 123)">uploadStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> nameGz</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> compress </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    nameGz </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token function" style="color:rgb(80, 250, 123)">uploadStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">peekable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> originalName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> compress </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    originalName </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                uploaded </span><span class="token operator">+=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">FileInfo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    fieldName </span><span class="token operator">=</span><span class="token plain"> field</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    filename </span><span class="token operator">=</span><span class="token plain"> originalName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    size </span><span class="token operator">=</span><span class="token plain"> size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    mimeType </span><span class="token operator">=</span><span class="token plain"> mime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    compressed </span><span class="token operator">=</span><span class="token plain"> compressed</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    blobName </span><span class="token operator">=</span><span class="token plain"> blobName</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">UploadResult</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">uploaded</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">e</span><span class="token operator">:</span><span class="token plain"> FileUploadException</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">throw</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">RuntimeException</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"Multipart parsing failed"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">shouldCompressMime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">mime</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Boolean </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// Heuristik: textuell = komprimieren</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">mime</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">startsWith</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"text/"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> mime </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">setOf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/json"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/xml"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/x-ndjson"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"text/csv"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/csv"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">uploadStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">input</span><span class="token operator">:</span><span class="token plain"> InputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> blobName</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> compress</span><span class="token operator">:</span><span class="token plain"> Boolean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> client</span><span class="token operator">:</span><span class="token plain"> BlockBlobClient </span><span class="token operator">=</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blockBlobClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// F√ºr unbekannte L√§nge: √ºber OutputStream schreiben (kein length n√∂tig)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        client</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobOutputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">use</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> blobOut </span><span class="token operator">-&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">compress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token function" style="color:rgb(80, 250, 123)">GZIPOutputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobOut</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">use</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> gz </span><span class="token operator">-&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    input</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">copyTo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">gz</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> DEFAULT_BUFFER</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token comment" style="color:rgb(98, 114, 164)">// GZIPOutputStream .close() schreibt den Footer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                input</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">copyTo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobOut</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> DEFAULT_BUFFER</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">companion</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">object</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> DEFAULT_BUFFER </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">1024</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number">1024</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<blockquote>
<p>Wir nutzen <strong><code>BlockBlobClient.getBlobOutputStream(overwrite = true)</code></strong>, damit keine Content-Length ben√∂tigt wird. So bleibt der Upload vollst√§ndig streamingbasiert.</p>
</blockquote>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="controller-minimal-api-servlet-request-durchreichen">Controller: Minimal-API (Servlet Request durchreichen)<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#controller-minimal-api-servlet-request-durchreichen" class="hash-link" aria-label="Direkter Link zur Controller: Minimal-API (Servlet Request durchreichen)" title="Direkter Link zur Controller: Minimal-API (Servlet Request durchreichen)" translate="no">‚Äã</a></h2>
<p><strong><code>src/main/kotlin/com/example/upload/UploadController.kt</code></strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">package</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">example</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upload</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">apache</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">commons</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fileupload2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RequestContext</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">http</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">MediaType</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PostMapping</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RequestHeader</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RequestMapping</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> org</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">springframework</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">bind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">annotation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">RestController</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> jakarta</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">servlet</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">http</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">HttpServletRequest</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RestController</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RequestMapping</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"/api"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">UploadController</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> service</span><span class="token operator">:</span><span class="token plain"> UploadService</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@PostMapping</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"/upload"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> consumes </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">MediaType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">MULTIPART_FORM_DATA_VALUE</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        request</span><span class="token operator">:</span><span class="token plain"> HttpServletRequest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token annotation builtin" style="color:rgb(189, 147, 249)">@RequestHeader</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">name </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"x-compress"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> required </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> compressHeader</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token operator">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> UploadService</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">UploadResult</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> forceCompression</span><span class="token operator">:</span><span class="token plain"> Boolean</span><span class="token operator">?</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> compressHeader</span><span class="token operator">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> it</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">equals</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"true"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> ignoreCase </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> ctx </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">object</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> RequestContext </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getContentType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> String </span><span class="token operator">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">contentType</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getContentLength</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> Int </span><span class="token operator">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">contentLength</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getCharacterEncoding</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> String</span><span class="token operator">?</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">characterEncoding</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fun</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">getInputStream</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">inputStream</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> service</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">handleStreamingUpload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> forceCompression</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="fehlerbehandlung--optionaler-rollback-beispiel">Fehlerbehandlung &amp; (optionaler) Rollback-Beispiel<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#fehlerbehandlung--optionaler-rollback-beispiel" class="hash-link" aria-label="Direkter Link zur Fehlerbehandlung &amp; (optionaler) Rollback-Beispiel" title="Direkter Link zur Fehlerbehandlung &amp; (optionaler) Rollback-Beispiel" translate="no">‚Äã</a></h2>
<p><strong>Pattern:</strong> Metadaten und Blob getrennt verwalten. Erst Blob schreiben, dann Metadaten anlegen ‚Äì oder umgekehrt, mit <strong>Kompensationsaktion</strong>.</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// 1) Blob/Upload</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> result </span><span class="token operator">=</span><span class="token plain"> service</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">handleStreamingUpload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// 2) Metadaten an Backend senden</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    metadataClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">createFor</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">files</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> result</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ex</span><span class="token operator">:</span><span class="token plain"> Exception</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// Rollback-Strategie: evtl. angelegte Metadaten l√∂schen</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    runCatching </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> metadataClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">rollback</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">throw</span><span class="token plain"> ex</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="test-mit-curl">Test mit <code>curl</code><a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#test-mit-curl" class="hash-link" aria-label="Direkter Link zur test-mit-curl" title="Direkter Link zur test-mit-curl" translate="no">‚Äã</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-X</span><span class="token plain"> POST </span><span class="token string" style="color:rgb(255, 121, 198)">"http://localhost:8080/api/upload"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-H</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"x-compress: true"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-F</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"file=@./sample.csv"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-H</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Expect:"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># verhindert 100-continue Verz√∂gerung</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sicherheits---betriebsaspekte-kurzchecklist">Sicherheits- &amp; Betriebsaspekte (Kurzchecklist)<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#sicherheits---betriebsaspekte-kurzchecklist" class="hash-link" aria-label="Direkter Link zur Sicherheits- &amp; Betriebsaspekte (Kurzchecklist)" title="Direkter Link zur Sicherheits- &amp; Betriebsaspekte (Kurzchecklist)" translate="no">‚Äã</a></h2>
<ul>
<li><strong>SAS-Token</strong>: prefix-scoped (nur Zielpfad), kurze Laufzeit, nur ben√∂tigte Rechte (Write/Create/Delete separat managen).</li>
<li><strong>Backpressure</strong>: keine Puffer, keine Temporary Files; Tomcat-Limits (siehe <code>application.yaml</code>).</li>
<li><strong>Limits</strong>: Server- und Proxy-Timeouts (AGIC/APIM) hoch genug einstellen.</li>
<li><strong>Observability</strong>: Upload-Dauer, Bytes, Client-IP, MIME, Kompressionsflag loggen (ohne PII). Traces f√ºr Fehlerpfade.</li>
<li><strong>Validation</strong>: Whitelist erlaubter MIME-Types, Max-File-Size serverseitig (fr√ºhzeitig abbrechen), Virenscan je nach Bedarf.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="faq">FAQ<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#faq" class="hash-link" aria-label="Direkter Link zur FAQ" title="Direkter Link zur FAQ" translate="no">‚Äã</a></h2>
<p><strong>Wie bestimme ich die Blob Content-Type/Encoding?</strong>
Wenn nicht komprimiert: setze <code>Content-Type</code> √ºber Blob-HTTP-Header/Metadata. Bei GZIP: <code>Content-Encoding: gzip</code> setzen, optional Original-MIME als Benutzer-Metadatum speichern.</p>
<p><strong>Beispiel:</strong></p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> block </span><span class="token operator">=</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBlobClient</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">blobName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blockBlobClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">val</span><span class="token plain"> headers </span><span class="token operator">=</span><span class="token plain"> com</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">azure</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">storage</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">blob</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">models</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">BlobHttpHeaders</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">setContentType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"application/json"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">setContentEncoding</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal singleline string" style="color:rgb(255, 121, 198)">"gzip"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">block</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">setHttpHeaders</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">headers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre></div></div>
<blockquote>
<p><code>setHttpHeaders</code> kann nach dem Upload gesetzt werden (separater Call) ‚Äì oder man nutzt <code>beginUpload</code>/<code>commitBlockList</code> mit Optionen.</p>
</blockquote>
<p><strong>Wie verhindere ich RAM-Spikes?</strong>
Buffers klein halten (1‚Äì4 MB), <code>copyTo</code>-Buffer konstant. Keine <code>ByteArrayOutputStream</code>-Akkumulation.</p>
<p><strong>Kann ich parallelisieren?</strong>
F√ºr reine Streaming-Endpunkte: eher nein (keine L√§nge). F√ºr gro√üe bekannte Dateien kann <code>ParallelTransferOptions</code> beim <code>upload(InputStream, length)</code> sinnvoll sein.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="end-to-end-sequenz-vereinfachte-schritte">End-to-End Sequenz (vereinfachte Schritte)<a href="https://bri-b-dev.github.io/blog/springboot-fileupload-azure#end-to-end-sequenz-vereinfachte-schritte" class="hash-link" aria-label="Direkter Link zur End-to-End Sequenz (vereinfachte Schritte)" title="Direkter Link zur End-to-End Sequenz (vereinfachte Schritte)" translate="no">‚Äã</a></h2>
<ol>
<li>Client sendet Multipart ‚Üí Server parsed Stream per FileUpload2.</li>
<li>MIME-Erkennung via Peek (Tika).</li>
<li>Optional GZIP ‚Üí Stream wird on-the-fly komprimiert.</li>
<li>BlobOutputStream schreibt direkt nach Azure.</li>
<li>Optional: HTTP-Header/Metadata setzen, Metadaten-Service aufrufen.</li>
<li>Fehler ‚Üí Kompensation (Rollback) ausl√∂sen.</li>
</ol>
<hr>]]></content:encoded>
            <category>Spring Boot</category>
            <category>Kotlin</category>
            <category>Java</category>
            <category>Azure</category>
            <category>Blob Storage</category>
            <category>Fileupload</category>
        </item>
        <item>
            <title><![CDATA[Workload Identity in AKS ‚Äì Lessons Learned]]></title>
            <link>https://bri-b-dev.github.io/blog/workload-identity-lessons-learned</link>
            <guid>https://bri-b-dev.github.io/blog/workload-identity-lessons-learned</guid>
            <pubDate>Sun, 10 Nov 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Setup, Stolpersteine und Best Practices aus Projekten]]></description>
            <content:encoded><![CDATA[<p>Workload Identity in <strong>Azure Kubernetes Service (AKS)</strong> verspricht weniger Secrets, native AzureAD-Integration und eine Abl√∂sung der alten AAD Pod Identity.<br>
<!-- -->In meinen Projekten im Herbst 2024 habe ich damit aber nicht nur reibungslose Deployments, sondern auch einige Stolpersteine erlebt.</p>
<p>Hier meine <strong>Erfahrungen aus der Praxis</strong> ‚Äì gegliedert nach Setup, Stolpersteinen und Best Practices.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-setup">‚öôÔ∏è Setup<a href="https://bri-b-dev.github.io/blog/workload-identity-lessons-learned#%EF%B8%8F-setup" class="hash-link" aria-label="Direkter Link zur ‚öôÔ∏è Setup" title="Direkter Link zur ‚öôÔ∏è Setup" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Cluster</strong>: AKS mit aktiviertem <strong>Workload Identity Feature</strong></li>
<li><strong>Operator</strong>: <code>azure-workload-identity</code> als Admission Webhook im Cluster</li>
<li><strong>Service Accounts</strong>: Pro Pod ein SA mit Annotationen wie<!-- -->
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">annotations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">azure.workload.identity/client-id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> &lt;client</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre></div></div>
</li>
</ul>
<ul>
<li>
<p><strong>Azure-Seite</strong>:</p>
<ul>
<li>Managed Identities f√ºr Pods</li>
<li>Rollenbindung √ºber AAD &amp; Azure RBAC (Storage, Key Vault, Application Gateway)</li>
</ul>
</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-stolpersteine">üöß Stolpersteine<a href="https://bri-b-dev.github.io/blog/workload-identity-lessons-learned#-stolpersteine" class="hash-link" aria-label="Direkter Link zur üöß Stolpersteine" title="Direkter Link zur üöß Stolpersteine" translate="no">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="sidecar-injection-nicht-immer-zuverl√§ssig">Sidecar-Injection nicht immer zuverl√§ssig<a href="https://bri-b-dev.github.io/blog/workload-identity-lessons-learned#sidecar-injection-nicht-immer-zuverl%C3%A4ssig" class="hash-link" aria-label="Direkter Link zur Sidecar-Injection nicht immer zuverl√§ssig" title="Direkter Link zur Sidecar-Injection nicht immer zuverl√§ssig" translate="no">‚Äã</a></h3>
<p>Die Annotation <code>azure.workload.identity/inject-proxy-sidecar</code> funktionierte nicht in allen Operator-Versionen.
In manchen F√§llen war ein spezielles Helm-Template oder ein zus√§tzliches MutatingWebhook-Setup n√∂tig.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="authorizationpermissionmismatch">AuthorizationPermissionMismatch<a href="https://bri-b-dev.github.io/blog/workload-identity-lessons-learned#authorizationpermissionmismatch" class="hash-link" aria-label="Direkter Link zur AuthorizationPermissionMismatch" title="Direkter Link zur AuthorizationPermissionMismatch" translate="no">‚Äã</a></h3>
<p>H√§ufiger Fehler beim Zugriff auf Storage Accounts.
Grund: Verwechslung von <strong>Management Plane</strong>-Rollen mit <strong>Data Plane</strong>-Rollen.
‚û°Ô∏è Erst wenn die <em>richtigen Data Plane Roles</em> vergeben sind, klappt der Zugriff.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="helm-templates--securitycontext">Helm-Templates &amp; SecurityContext<a href="https://bri-b-dev.github.io/blog/workload-identity-lessons-learned#helm-templates--securitycontext" class="hash-link" aria-label="Direkter Link zur Helm-Templates &amp; SecurityContext" title="Direkter Link zur Helm-Templates &amp; SecurityContext" translate="no">‚Äã</a></h3>
<p>Ein fehlerhafter <code>securityContext</code> im Helm-Chart verhinderte die Sidecar-Injektion.
Das Debugging kostete viel Zeit ‚Äì Logs vom Webhook-Pod halfen bei der Aufkl√§rung.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="operator-versionen-mit-breaking-changes">Operator-Versionen mit Breaking Changes<a href="https://bri-b-dev.github.io/blog/workload-identity-lessons-learned#operator-versionen-mit-breaking-changes" class="hash-link" aria-label="Direkter Link zur Operator-Versionen mit Breaking Changes" title="Direkter Link zur Operator-Versionen mit Breaking Changes" translate="no">‚Äã</a></h3>
<p>Minor-Releases des Operators haben das Verhalten ge√§ndert.
‚û°Ô∏è Upgrade-Notes lesen, bevor man blind auf die neueste Version setzt.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-best-practices">‚úÖ Best Practices<a href="https://bri-b-dev.github.io/blog/workload-identity-lessons-learned#-best-practices" class="hash-link" aria-label="Direkter Link zur ‚úÖ Best Practices" title="Direkter Link zur ‚úÖ Best Practices" translate="no">‚Äã</a></h2>
<ul>
<li><strong>Klein anfangen</strong>: Erst mit einem einfachen Pod + Storage Account testen.</li>
<li><strong>RBAC trennen</strong>: Management vs. Data Roles sauber unterscheiden.</li>
<li><strong>Operator-Logs pr√ºfen</strong>: Der Admission Webhook ist die erste Anlaufstelle bei Fehlern.</li>
<li><strong>Helm-Templates validieren</strong>: Vor Deploy pr√ºfen, ob Annotationen und Sidecars im Pod landen.</li>
<li><strong>Zeit einplanen</strong>: Realistisch f√ºr Debugging und Iterationen kalkulieren.</li>
</ul>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Mein Tipp</div><div class="admonitionContent_BuS1"><p>Workload Identity spart langfristig viel Aufwand und erh√∂ht die Sicherheit.<br>
<!-- -->Aber f√ºr die Einf√ºhrung solltest du <strong>zus√§tzliche Iterationen</strong> einplanen ‚Äì besonders bei komplexeren Helm-Charts.</p></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-fazit">üìå Fazit<a href="https://bri-b-dev.github.io/blog/workload-identity-lessons-learned#-fazit" class="hash-link" aria-label="Direkter Link zur üìå Fazit" title="Direkter Link zur üìå Fazit" translate="no">‚Äã</a></h2>
<p>Workload Identity ist ein <strong>wichtiger Schritt f√ºr Security und Cloud-Native-Architekturen</strong>.
Die ersten Projekte waren nicht friktionsfrei, doch inzwischen laufen unsere Plattform-Komponenten stabil und ohne Secrets.
Ein Setup, das sich definitiv lohnt ‚Äì auch wenn der Weg dahin mehr Debugging erforderte, als die Doku vermuten lie√ü.</p>
<hr>
<p><em>Wie sind deine Erfahrungen? Schreib mir gerne oder connecte dich auf <a href="https://www.linkedin.com/in/brigitte-boehm-34b7a025/" target="_blank" rel="noopener noreferrer">LinkedIn</a>.</em></p>]]></content:encoded>
            <category>Kubernetes</category>
            <category>Azure</category>
            <category>AKS</category>
            <category>Security</category>
            <category>Identity</category>
            <category>Lessons Learned</category>
        </item>
    </channel>
</rss>